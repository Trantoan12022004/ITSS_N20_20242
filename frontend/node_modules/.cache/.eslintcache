[{"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\index.js":"1","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\redux.js":"2","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\serviceWorker.js":"3","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\hoc\\IntlProviderWrapper.js":"4","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\App.js":"5","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\hoc\\authentication.js":"6","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\actionTypes.js":"7","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\reducers\\rootReducer.js":"8","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\routes\\Home.js":"9","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\Header\\Header.js":"10","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\routes\\Login.js":"11","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\routes\\System.js":"12","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\CustomToast.js":"13","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\ConfirmModal.js":"14","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\index.js":"15","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\reducers\\appReducer.js":"16","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\reducers\\userReducer.js":"17","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\Navigator.js":"18","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\Header\\menuApp.js":"19","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\CustomScrollbars.js":"20","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\System\\UserManage.js":"21","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\services\\adminService.js":"22","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\index.js":"23","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\ToastUtil.js":"24","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\axios.js":"25","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\LanguageUtils.js":"26","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\CommonUtils.js":"27","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\KeyCodeUtils.js":"28","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\constant.js":"29","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\appActions.js":"30","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\userActions.js":"31","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\config.js":"32","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\Auth\\Login.js":"33","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\services\\index.js":"34","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\services\\userServices.js":"35","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\System\\ModalUser.js":"36","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\HomePage.js":"37","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\HomeHeader.js":"38","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\Section\\Speciality.js":"39","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\Section\\Medical.js":"40","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\Section\\FeaturedDoctors.js":"41","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\ExampleCarouselImage.js":"42","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\CardDoctor.js":"43","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\Section\\Manual.js":"44","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\Manuals.js":"45","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\System\\UserRedux.js":"46","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\adminActions.js":"47","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\reducers\\adminReducer.js":"48","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\index.js":"49","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\redux.js":"50","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\serviceWorker.js":"51","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\hoc\\IntlProviderWrapper.js":"52","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\App.js":"53","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\hoc\\authentication.js":"54","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\actionTypes.js":"55","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\reducers\\rootReducer.js":"56","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\CustomToast.js":"57","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\CustomScrollbars.js":"58","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\routes\\System.js":"59","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\routes\\Home.js":"60","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\Header\\Header.js":"61","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\Auth\\Login.js":"62","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\HomePage.js":"63","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\index.js":"64","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\reducers\\appReducer.js":"65","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\reducers\\userReducer.js":"66","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\reducers\\adminReducer.js":"67","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\Navigator.js":"68","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\Header\\menuApp.js":"69","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\constant.js":"70","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\System\\UserManage.js":"71","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\System\\UserRedux.js":"72","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\services\\userServices.js":"73","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\Section\\Speciality.js":"74","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\Section\\Manual.js":"75","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\Section\\Medical.js":"76","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\Section\\FeaturedDoctors.js":"77","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\index.js":"78","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\CommonUtils.js":"79","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\KeyCodeUtils.js":"80","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\LanguageUtils.js":"81","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\ToastUtil.js":"82","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\ExampleCarouselImage.js":"83","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\CardDoctor.js":"84","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\Manuals.js":"85","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\appActions.js":"86","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\adminActions.js":"87","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\userActions.js":"88","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\System\\ModalUser.js":"89","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\services\\index.js":"90","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\services\\adminService.js":"91","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\axios.js":"92","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\config.js":"93","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\System\\MarkdownEditor.js":"94","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\Patient\\Doctor\\DetailDoctor.js":"95","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\HomeHeader.js":"96","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\index.js":"97","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\serviceWorker.js":"98","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\redux.js":"99","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\App.js":"100","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\hoc\\IntlProviderWrapper.js":"101","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\hoc\\authentication.js":"102","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\CustomToast.js":"103","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\routes\\Home.js":"104","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\CustomScrollbars.js":"105","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\routes\\System.js":"106","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Auth\\Login.js":"107","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Header\\Header.js":"108","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\actionTypes.js":"109","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\reducers\\rootReducer.js":"110","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\HomePage.js":"111","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\index.js":"112","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Header\\menuApp.js":"113","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Navigator.js":"114","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\constant.js":"115","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\reducers\\appReducer.js":"116","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\reducers\\userReducer.js":"117","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\reducers\\adminReducer.js":"118","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\UserRedux.js":"119","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\userServices.js":"120","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\index.js":"121","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\CommonUtils.js":"122","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\LanguageUtils.js":"123","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\ToastUtil.js":"124","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\CardDoctor.js":"125","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Manuals.js":"126","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\KeyCodeUtils.js":"127","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\userActions.js":"128","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\appActions.js":"129","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\adminActions.js":"130","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Header\\index.js":"131","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Header\\MenuItems.js":"132","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\SectionTitle\\index.js":"133","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\index.js":"134","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\HomeMain.js":"135","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\AboutSection.js":"136","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\ServiceSection.js":"137","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\CourseSection.js":"138","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\SliderSection.js":"139","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\CampusSection.js":"140","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\BlogSection.js":"141","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\EventSection.js":"142","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\CounterSection.js":"143","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\TestimonialSection.js":"144","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Event\\SingleEvent.js":"145","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Course\\SingleCourse.js":"146","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Footer\\index.js":"147","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Footer\\FooterTwo.js":"148","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Blog\\SinglePost.js":"149","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\ModalUser.js":"150","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\HomeHeader.js":"151","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\MarkdownEditor.js":"152","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\Manual.js":"153","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\FeaturedDoctors.js":"154","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\Medical.js":"155","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\Speciality.js":"156","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\UserDisplay.js":"157","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\uploadImageToGithub.js":"158","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\EventManage.js":"159","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\index.js":"160","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\adminService.js":"161","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\axios.js":"162","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\config.js":"163","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\eventServices.js":"164","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\EventDescription.js":"165","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\pages\\event\\index.js":"166","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\pages\\event\\EventMain.js":"167","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\ScrollTop\\index.js":"168","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Breadcrumb\\index.js":"169","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\pages\\event\\event-details.js":"170","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Breadcrumb\\EventBreadcrumbs.js":"171","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\pages\\event\\EventDetailsMain.js":"172","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Event\\Event.js":"173","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Event\\EventMain.js":"174","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Event\\event-details.js":"175","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Event\\EventDetailsMain.js":"176","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\UserManage.js":"177","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistration\\index.js":"178","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistration\\ContactMain.js":"179","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistration\\ContactInfo.js":"180","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistration\\ContactForm.js":"181","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistrationDetails\\EventRegistrationDetails.js":"182","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistrationDetails\\EventRegistrationList.js":"183","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Breadcrumb\\BlogBreadcrumbs.js":"184","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\UserDescription.js":"185","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\routes\\Profile.js":"186","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\ManageList.js":"187","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\ManageListMain.js":"188","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Course\\SingleCourseList.js":"189","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Course\\SingleCourseThree.js":"190","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\UserList.js":"191","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\UserListMain.js":"192","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\UserProfile.js":"193","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\UserProfileMain.js":"194","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Recruitment\\index.js":"195","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HelpRequest\\index.js":"196","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HelpRequest\\HelpRequestList.js":"197","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\EventDisplay.js":"198","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\ModalEditEvent.js":"199","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Input\\index.js":"200","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Input\\DatePicker.js":"201","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Input\\InputSuggest.js":"202","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\notificationServices.js":"203","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Auth\\Forgot_Password.js":"204","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\otpServices.js":"205","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\EventRegistrationManage.js":"206","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Contact\\Contact.js":"207"},{"size":926,"mtime":1740683474004,"results":"208","hashOfConfig":"209"},{"size":1515,"mtime":1741382956780,"results":"210","hashOfConfig":"209"},{"size":5086,"mtime":1740683474008,"results":"211","hashOfConfig":"209"},{"size":1095,"mtime":1740683474003,"results":"212","hashOfConfig":"209"},{"size":4048,"mtime":1741376928395,"results":"213","hashOfConfig":"209"},{"size":806,"mtime":1740842849799,"results":"214","hashOfConfig":"209"},{"size":1033,"mtime":1741697229884,"results":"215","hashOfConfig":"209"},{"size":1033,"mtime":1741599354384,"results":"216","hashOfConfig":"209"},{"size":607,"mtime":1741021398952,"results":"217","hashOfConfig":"209"},{"size":2458,"mtime":1741444322215,"results":"218","hashOfConfig":"209"},{"size":5752,"mtime":1740683474005,"results":"219","hashOfConfig":"209"},{"size":1702,"mtime":1741381762682,"results":"220","hashOfConfig":"209"},{"size":2282,"mtime":1740683473987,"results":"221","hashOfConfig":"209"},{"size":3862,"mtime":1740683473985,"results":"222","hashOfConfig":"209"},{"size":249,"mtime":1740683474167,"results":"223","hashOfConfig":"209"},{"size":1130,"mtime":1741381159285,"results":"224","hashOfConfig":"209"},{"size":851,"mtime":1740843759075,"results":"225","hashOfConfig":"209"},{"size":9326,"mtime":1740683473994,"results":"226","hashOfConfig":"209"},{"size":1844,"mtime":1741451233347,"results":"227","hashOfConfig":"209"},{"size":3173,"mtime":1740683473986,"results":"228","hashOfConfig":"209"},{"size":7578,"mtime":1741461400882,"results":"229","hashOfConfig":"209"},{"size":361,"mtime":1740683474008,"results":"230","hashOfConfig":"209"},{"size":91,"mtime":1741598673071,"results":"231","hashOfConfig":"209"},{"size":3001,"mtime":1740683474166,"results":"232","hashOfConfig":"209"},{"size":2183,"mtime":1740834845713,"results":"233","hashOfConfig":"209"},{"size":961,"mtime":1740683474166,"results":"234","hashOfConfig":"209"},{"size":156,"mtime":1740683474165,"results":"235","hashOfConfig":"209"},{"size":684,"mtime":1740683474165,"results":"236","hashOfConfig":"209"},{"size":431,"mtime":1741021569816,"results":"237","hashOfConfig":"209"},{"size":452,"mtime":1741379454041,"results":"238","hashOfConfig":"209"},{"size":430,"mtime":1740843759137,"results":"239","hashOfConfig":"209"},{"size":445,"mtime":1740834659170,"results":"240","hashOfConfig":"209"},{"size":8199,"mtime":1740844667586,"results":"241","hashOfConfig":"209"},{"size":57,"mtime":1740830753720,"results":"242","hashOfConfig":"209"},{"size":934,"mtime":1741656300412,"results":"243","hashOfConfig":"209"},{"size":2844,"mtime":1740984280584,"results":"244","hashOfConfig":"209"},{"size":850,"mtime":1741268446205,"results":"245","hashOfConfig":"209"},{"size":5157,"mtime":1741442255298,"results":"246","hashOfConfig":"209"},{"size":4824,"mtime":1741255756916,"results":"247","hashOfConfig":"209"},{"size":4701,"mtime":1741261748251,"results":"248","hashOfConfig":"209"},{"size":3178,"mtime":1741264557219,"results":"249","hashOfConfig":"209"},{"size":507,"mtime":1741263022510,"results":"250","hashOfConfig":"209"},{"size":648,"mtime":1741266612796,"results":"251","hashOfConfig":"209"},{"size":2566,"mtime":1741268474163,"results":"252","hashOfConfig":"209"},{"size":1007,"mtime":1741268727191,"results":"253","hashOfConfig":"209"},{"size":27614,"mtime":1741754092925,"results":"254","hashOfConfig":"209"},{"size":3703,"mtime":1741702565191,"results":"255","hashOfConfig":"209"},{"size":2641,"mtime":1741702586245,"results":"256","hashOfConfig":"209"},{"size":926,"mtime":1740683474004,"results":"257","hashOfConfig":"258"},{"size":1515,"mtime":1741382956780,"results":"259","hashOfConfig":"258"},{"size":5086,"mtime":1740683474008,"results":"260","hashOfConfig":"258"},{"size":1095,"mtime":1740683474003,"results":"261","hashOfConfig":"258"},{"size":4203,"mtime":1742658279806,"results":"262","hashOfConfig":"258"},{"size":806,"mtime":1740842849799,"results":"263","hashOfConfig":"258"},{"size":1769,"mtime":1742362345523,"results":"264","hashOfConfig":"258"},{"size":1033,"mtime":1741599354384,"results":"265","hashOfConfig":"258"},{"size":2282,"mtime":1740683473987,"results":"266","hashOfConfig":"258"},{"size":3173,"mtime":1740683473986,"results":"267","hashOfConfig":"258"},{"size":1953,"mtime":1742462256265,"results":"268","hashOfConfig":"258"},{"size":607,"mtime":1741021398952,"results":"269","hashOfConfig":"258"},{"size":4377,"mtime":1742667095422,"results":"270","hashOfConfig":"258"},{"size":8199,"mtime":1740844667586,"results":"271","hashOfConfig":"258"},{"size":850,"mtime":1742665501935,"results":"272","hashOfConfig":"258"},{"size":249,"mtime":1740683474167,"results":"273","hashOfConfig":"258"},{"size":1130,"mtime":1741381159285,"results":"274","hashOfConfig":"258"},{"size":851,"mtime":1740843759075,"results":"275","hashOfConfig":"258"},{"size":4286,"mtime":1742362683151,"results":"276","hashOfConfig":"258"},{"size":9326,"mtime":1740683473994,"results":"277","hashOfConfig":"258"},{"size":2104,"mtime":1742666586479,"results":"278","hashOfConfig":"258"},{"size":431,"mtime":1741021569816,"results":"279","hashOfConfig":"258"},{"size":7578,"mtime":1741461400882,"results":"280","hashOfConfig":"258"},{"size":39275,"mtime":1742144455286,"results":"281","hashOfConfig":"258"},{"size":1392,"mtime":1742660493244,"results":"282","hashOfConfig":"258"},{"size":4824,"mtime":1741255756916,"results":"283","hashOfConfig":"258"},{"size":2566,"mtime":1741268474163,"results":"284","hashOfConfig":"258"},{"size":4701,"mtime":1741261748251,"results":"285","hashOfConfig":"258"},{"size":3750,"mtime":1742652323986,"results":"286","hashOfConfig":"258"},{"size":91,"mtime":1741598673071,"results":"287","hashOfConfig":"258"},{"size":156,"mtime":1740683474165,"results":"288","hashOfConfig":"258"},{"size":684,"mtime":1740683474165,"results":"289","hashOfConfig":"258"},{"size":961,"mtime":1740683474166,"results":"290","hashOfConfig":"258"},{"size":3001,"mtime":1740683474166,"results":"291","hashOfConfig":"258"},{"size":507,"mtime":1741263022510,"results":"292","hashOfConfig":"258"},{"size":1149,"mtime":1742658083527,"results":"293","hashOfConfig":"258"},{"size":1007,"mtime":1741268727191,"results":"294","hashOfConfig":"258"},{"size":452,"mtime":1741379454041,"results":"295","hashOfConfig":"258"},{"size":8689,"mtime":1742363478019,"results":"296","hashOfConfig":"258"},{"size":430,"mtime":1740843759137,"results":"297","hashOfConfig":"258"},{"size":2844,"mtime":1740984280584,"results":"298","hashOfConfig":"258"},{"size":57,"mtime":1740830753720,"results":"299","hashOfConfig":"258"},{"size":361,"mtime":1740683474008,"results":"300","hashOfConfig":"258"},{"size":2572,"mtime":1742068913367,"results":"301","hashOfConfig":"258"},{"size":445,"mtime":1740834659170,"results":"302","hashOfConfig":"258"},{"size":4997,"mtime":1742470970880,"results":"303","hashOfConfig":"258"},{"size":6668,"mtime":1742665544100,"results":"304","hashOfConfig":"258"},{"size":5209,"mtime":1742665360066,"results":"305","hashOfConfig":"258"},{"size":920,"mtime":1742869556149,"results":"306","hashOfConfig":"307"},{"size":5086,"mtime":1740683474008,"results":"308","hashOfConfig":"307"},{"size":1515,"mtime":1741382956780,"results":"309","hashOfConfig":"307"},{"size":6520,"mtime":1748194562350,"results":"310","hashOfConfig":"307"},{"size":1095,"mtime":1740683474003,"results":"311","hashOfConfig":"307"},{"size":806,"mtime":1743408599623,"results":"312","hashOfConfig":"307"},{"size":2282,"mtime":1740683473987,"results":"313","hashOfConfig":"307"},{"size":1155,"mtime":1743446154150,"results":"314","hashOfConfig":"307"},{"size":3173,"mtime":1740683473986,"results":"315","hashOfConfig":"307"},{"size":4639,"mtime":1748116654832,"results":"316","hashOfConfig":"307"},{"size":15581,"mtime":1748085571631,"results":"317","hashOfConfig":"307"},{"size":4377,"mtime":1742925350991,"results":"318","hashOfConfig":"307"},{"size":1769,"mtime":1743408625037,"results":"319","hashOfConfig":"307"},{"size":1033,"mtime":1741599354384,"results":"320","hashOfConfig":"307"},{"size":1370,"mtime":1748191098125,"results":"321","hashOfConfig":"307"},{"size":249,"mtime":1740683474167,"results":"322","hashOfConfig":"307"},{"size":2229,"mtime":1748113086787,"results":"323","hashOfConfig":"307"},{"size":9326,"mtime":1740683473994,"results":"324","hashOfConfig":"307"},{"size":834,"mtime":1748189218612,"results":"325","hashOfConfig":"307"},{"size":1131,"mtime":1743409034308,"results":"326","hashOfConfig":"307"},{"size":851,"mtime":1740843759075,"results":"327","hashOfConfig":"307"},{"size":4286,"mtime":1742976841282,"results":"328","hashOfConfig":"307"},{"size":15713,"mtime":1742992484457,"results":"329","hashOfConfig":"307"},{"size":2634,"mtime":1747312033990,"results":"330","hashOfConfig":"307"},{"size":91,"mtime":1741598673071,"results":"331","hashOfConfig":"307"},{"size":156,"mtime":1740683474165,"results":"332","hashOfConfig":"307"},{"size":961,"mtime":1740683474166,"results":"333","hashOfConfig":"307"},{"size":3001,"mtime":1740683474166,"results":"334","hashOfConfig":"307"},{"size":1149,"mtime":1742658083527,"results":"335","hashOfConfig":"307"},{"size":1007,"mtime":1741268727191,"results":"336","hashOfConfig":"307"},{"size":684,"mtime":1740683474165,"results":"337","hashOfConfig":"307"},{"size":430,"mtime":1740843759137,"results":"338","hashOfConfig":"307"},{"size":456,"mtime":1743360327026,"results":"339","hashOfConfig":"307"},{"size":8689,"mtime":1742976841281,"results":"340","hashOfConfig":"307"},{"size":30033,"mtime":1748191352601,"results":"341","hashOfConfig":"307"},{"size":4943,"mtime":1748192839512,"results":"342","hashOfConfig":"307"},{"size":525,"mtime":1742813400916,"results":"343","hashOfConfig":"307"},{"size":550,"mtime":1742813400955,"results":"344","hashOfConfig":"307"},{"size":1564,"mtime":1742813400952,"results":"345","hashOfConfig":"307"},{"size":2650,"mtime":1742813400948,"results":"346","hashOfConfig":"307"},{"size":1928,"mtime":1742813400953,"results":"347","hashOfConfig":"307"},{"size":5085,"mtime":1743803206951,"results":"348","hashOfConfig":"307"},{"size":6382,"mtime":1748509318320,"results":"349","hashOfConfig":"307"},{"size":4896,"mtime":1748191083777,"results":"350","hashOfConfig":"307"},{"size":1547,"mtime":1742914488174,"results":"351","hashOfConfig":"307"},{"size":3439,"mtime":1743444741029,"results":"352","hashOfConfig":"307"},{"size":2847,"mtime":1742813400949,"results":"353","hashOfConfig":"307"},{"size":5040,"mtime":1742813400954,"results":"354","hashOfConfig":"307"},{"size":3370,"mtime":1743169819607,"results":"355","hashOfConfig":"307"},{"size":3739,"mtime":1744189981771,"results":"356","hashOfConfig":"307"},{"size":6504,"mtime":1742914123447,"results":"357","hashOfConfig":"307"},{"size":7773,"mtime":1747242728309,"results":"358","hashOfConfig":"307"},{"size":2001,"mtime":1742813400895,"results":"359","hashOfConfig":"307"},{"size":11987,"mtime":1743358641172,"results":"360","hashOfConfig":"307"},{"size":2451,"mtime":1742976797426,"results":"361","hashOfConfig":"307"},{"size":4997,"mtime":1742976841276,"results":"362","hashOfConfig":"307"},{"size":2566,"mtime":1742976841266,"results":"363","hashOfConfig":"307"},{"size":3750,"mtime":1742976841263,"results":"364","hashOfConfig":"307"},{"size":4701,"mtime":1742976841269,"results":"365","hashOfConfig":"307"},{"size":4824,"mtime":1742976841271,"results":"366","hashOfConfig":"307"},{"size":7512,"mtime":1743676739913,"results":"367","hashOfConfig":"307"},{"size":2264,"mtime":1742998719317,"results":"368","hashOfConfig":"307"},{"size":9480,"mtime":1747996425910,"results":"369","hashOfConfig":"307"},{"size":57,"mtime":1740830753720,"results":"370","hashOfConfig":"307"},{"size":361,"mtime":1740683474008,"results":"371","hashOfConfig":"307"},{"size":2572,"mtime":1742068913367,"results":"372","hashOfConfig":"307"},{"size":445,"mtime":1740834659170,"results":"373","hashOfConfig":"307"},{"size":2006,"mtime":1748176624303,"results":"374","hashOfConfig":"307"},{"size":15466,"mtime":1747741276019,"results":"375","hashOfConfig":"307"},{"size":1107,"mtime":1743089795723,"results":"376","hashOfConfig":"307"},{"size":3244,"mtime":1743089844513,"results":"377","hashOfConfig":"307"},{"size":1015,"mtime":1742813400915,"results":"378","hashOfConfig":"307"},{"size":2756,"mtime":1744209857548,"results":"379","hashOfConfig":"307"},{"size":2870,"mtime":1743089887891,"results":"380","hashOfConfig":"307"},{"size":2359,"mtime":1743171879547,"results":"381","hashOfConfig":"307"},{"size":7210,"mtime":1743089852549,"results":"382","hashOfConfig":"307"},{"size":1093,"mtime":1743163658541,"results":"383","hashOfConfig":"307"},{"size":4138,"mtime":1748022072146,"results":"384","hashOfConfig":"307"},{"size":7013,"mtime":1748174900031,"results":"385","hashOfConfig":"307"},{"size":12204,"mtime":1748174791023,"results":"386","hashOfConfig":"307"},{"size":7578,"mtime":1743408582356,"results":"387","hashOfConfig":"307"},{"size":15979,"mtime":1743516823026,"results":"388","hashOfConfig":"307"},{"size":738,"mtime":1743417572933,"results":"389","hashOfConfig":"307"},{"size":1140,"mtime":1742813400934,"results":"390","hashOfConfig":"307"},{"size":13615,"mtime":1743440292403,"results":"391","hashOfConfig":"307"},{"size":15648,"mtime":1748508531157,"results":"392","hashOfConfig":"307"},{"size":30020,"mtime":1748168388385,"results":"393","hashOfConfig":"307"},{"size":1865,"mtime":1742813400898,"results":"394","hashOfConfig":"307"},{"size":6338,"mtime":1743674731258,"results":"395","hashOfConfig":"307"},{"size":2555,"mtime":1743806312581,"results":"396","hashOfConfig":"307"},{"size":1252,"mtime":1743802189002,"results":"397","hashOfConfig":"307"},{"size":20333,"mtime":1743800131112,"results":"398","hashOfConfig":"307"},{"size":3123,"mtime":1742813400904,"results":"399","hashOfConfig":"307"},{"size":2935,"mtime":1742813400905,"results":"400","hashOfConfig":"307"},{"size":951,"mtime":1744209946491,"results":"401","hashOfConfig":"307"},{"size":20376,"mtime":1743802754708,"results":"402","hashOfConfig":"307"},{"size":3781,"mtime":1744209779876,"results":"403","hashOfConfig":"307"},{"size":10808,"mtime":1744191604045,"results":"404","hashOfConfig":"307"},{"size":16197,"mtime":1746856662027,"results":"405","hashOfConfig":"307"},{"size":22026,"mtime":1747996676006,"results":"406","hashOfConfig":"307"},{"size":13335,"mtime":1748194658248,"results":"407","hashOfConfig":"307"},{"size":9939,"mtime":1748116434378,"results":"408","hashOfConfig":"307"},{"size":18986,"mtime":1748021356244,"results":"409","hashOfConfig":"307"},{"size":112,"mtime":1740683473994,"results":"410","hashOfConfig":"307"},{"size":5954,"mtime":1740683473990,"results":"411","hashOfConfig":"307"},{"size":4358,"mtime":1740683473992,"results":"412","hashOfConfig":"307"},{"size":499,"mtime":1747993596870,"results":"413","hashOfConfig":"307"},{"size":30119,"mtime":1748197731643,"results":"414","hashOfConfig":"307"},{"size":593,"mtime":1748084460680,"results":"415","hashOfConfig":"307"},{"size":90247,"mtime":1748197659596,"results":"416","hashOfConfig":"307"},{"size":17436,"mtime":1748190798253,"results":"417","hashOfConfig":"307"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},"19iu2vq",{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"420"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"420"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"420"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"420"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"451"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"420"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"420"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"420"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"420"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"420"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"420"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"420"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"420"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"420"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"420"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"420"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"420"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},"1degvg",{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"534"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"534"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"534"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"534"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"534"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"534"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"534"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"534"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"608"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"534"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"534"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"534"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"534"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"534"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},"10eysg1",{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"642"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"642"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"642"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"642"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"642"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"642"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"642"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"642"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"642"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"642"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"642"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"642"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"725"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"725"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"725"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"725"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"642"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"642"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"725"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"725"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"642"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"642"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"642"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"642"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"642"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"642"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"642"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"642"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"785"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"785"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"785"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"785"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796","usedDeprecatedRules":"642"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"799"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"799"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"642"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"642"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"642"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"828"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"828"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"836","messages":"837","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"838","usedDeprecatedRules":"642"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"642"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"642"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"853","messages":"854","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"642"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"642"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"642"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"642"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"642"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"642"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"881"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"881"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"881"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"642"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"642"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895","usedDeprecatedRules":"642"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898","usedDeprecatedRules":"642"},"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\index.js",[],["899","900"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\redux.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\serviceWorker.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\App.js",["901","902","903"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport { history } from \"../redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport CustomScrollbars from \"../components/CustomScrollbars\";\r\nimport {\r\n    userIsAuthenticated,\r\n    userIsNotAuthenticated,\r\n} from \"../hoc/authentication\";\r\n\r\nimport { path } from \"../utils\";\r\n\r\nimport Home from \"../routes/Home\";\r\n// import Login from '../routes/Login';\r\nimport Login from \"./Auth/Login\";\r\nimport Header from \"./Header/Header\";\r\nimport System from \"../routes/System\";\r\n\r\nimport { CustomToastCloseButton } from \"../components/CustomToast\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\nimport { height, width } from \"@fortawesome/free-brands-svg-icons/fa42Group\";\r\nclass App extends Component {\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars\r\n                                style={{ height: \"100vh\", width: \"100vw\" }}\r\n                            >\r\n                                <Switch>\r\n                                    <Route\r\n                                        path={path.HOME}\r\n                                        exact\r\n                                        component={Home}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.LOGIN}\r\n                                        component={userIsNotAuthenticated(\r\n                                            Login\r\n                                        )}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.SYSTEM}\r\n                                        component={userIsAuthenticated(System)}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.HOMEPAGE}\r\n                                        component={HomePage}\r\n                                    />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        <ToastContainer\r\n                            className=\"toast-container\"\r\n                            toastClassName=\"toast-item\"\r\n                            bodyClassName=\"toast-item-body\"\r\n                            autoClose={false}\r\n                            hideProgressBar={true}\r\n                            pauseOnHover={false}\r\n                            pauseOnFocusLoss={true}\r\n                            closeOnClick={false}\r\n                            draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\hoc\\authentication.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\reducers\\rootReducer.js",["904"],"import { combineReducers } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\n\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { persistReducer } from \"redux-persist\";\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: \"user\",\r\n    whitelist: [\"isLoggedIn\", \"userInforr\"],\r\n};\r\n\r\nconst appPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: \"app\",\r\n    whitelist: [\"language\"],\r\n};\r\n\r\nexport default (history) =>\r\n    combineReducers({\r\n        router: connectRouter(history),\r\n        user: persistReducer(userPersistConfig, userReducer),\r\n        app: persistReducer(appPersistConfig, appReducer),\r\n        // app: appReducer,\r\n        admin: adminReducer,\r\n    });\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\routes\\Home.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\Header\\Header.js",["905"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from \"../../components/Navigator\";\r\nimport { adminMenu } from \"./menuApp\";\r\nimport \"./Header.scss\";\r\nimport {languages} from '../../utils/constant';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nclass Header extends Component {\r\n    handleChangeLanguage = (language) =>{\r\n        this.props.changeLanguageAppRedux(language);\r\n    }\r\n    render() {\r\n        let language = this.props.language\r\n        const { processLogout, langguage,userInforr } = this.props;\r\n        console.log('check', userInforr)\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={adminMenu} />\r\n                </div>\r\n                <div className=\"languages-logout\">\r\n                    <span className=\"welcome\"> \r\n                        <FormattedMessage id=\"home-header.welcome\" />\r\n                        {userInforr && userInforr.lastName ? userInforr.lastName : ' '} \r\n                    </span>\r\n                    <div className=\"languages\">\r\n                    <span className= {language === languages.VI ? 'language-vi active' : 'language-vi'} onClick={() => this.handleChangeLanguage(languages.VI)}>VN</span>\r\n                    <span className={language === languages.EN ? 'language-en active' : 'language-en'} onClick={() => this.handleChangeLanguage(languages.EN)}>EN</span>\r\n                    </div>\r\n                    <div\r\n                        className=\"btn btn-logout\"\r\n                        onClick={processLogout}\r\n                        title=\"Log out\"\r\n                    >\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        userInforr: state.user.userInforr,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\routes\\Login.js",["906","907","908"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\routes\\System.js",["909"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport UserManage from \"../containers/System/UserManage\";\r\nimport UserRedux from \"../containers/System/UserRedux\";\r\nimport Header from \"../containers/Header/Header\";\r\nclass System extends Component {\r\n    render() {\r\n\r\n        const { systemMenuPath, isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route\r\n                                path=\"/system/user-manage\"\r\n                                component={UserManage}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/user-redux\"\r\n                                component={UserRedux}\r\n                            />\r\n                            <Route\r\n                                component={() => {\r\n                                    return <Redirect to={systemMenuPath} />;\r\n                                }}\r\n                            />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\CustomToast.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\ConfirmModal.js",[],["910","911"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\Navigator.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\System\\UserManage.js",["912"],"import React, { Component } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./UserManage.scss\";\r\nimport {\r\n    getAllUsers,\r\n    deleteUser,\r\n    updateUser,\r\n    createUser,\r\n} from \"../../services/userServices\";\r\nimport ModalUser from \"./ModalUser\"; // Import ModalUser\r\n\r\nclass UserManage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            userIdToEdit: null,\r\n            userEditData: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                address: \"\",\r\n            },\r\n            showModal: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchAllUsers();\r\n    }\r\n\r\n    // Lấy toàn bộ danh sách người dùng từ API\r\n    fetchAllUsers = async () => {\r\n        let response = await getAllUsers(\"ALL\");\r\n        if (response && response.data && response.data.errCode === 0) {\r\n            this.setState({ arrUsers: response.data.users });\r\n            console.log(\"check user\", response);\r\n        }\r\n    };\r\n\r\n    // Hiển thị modal chỉnh sửa người dùng\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            userIdToEdit: user.id,\r\n            userEditData: {\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                email: user.email,\r\n                address: user.address,\r\n            },\r\n            showModal: true, // Hiển thị modal\r\n        });\r\n    };\r\n\r\n    // Thay đổi dữ liệu người dùng trong form\r\n    handleChangeUserEditData = (event) => {\r\n        let inputName = event.target.name;\r\n        let inputValue = event.target.value;\r\n        let updatedUserEditData = { ...this.state.userEditData };\r\n        updatedUserEditData[inputName] = inputValue;\r\n        this.setState({ userEditData: updatedUserEditData });\r\n    };\r\n\r\n    // Kiểm tra tính hợp lệ của dữ liệu người dùng\r\n    validateUserData = () => {\r\n        let { firstName, lastName, email, address } = this.state.userEditData;\r\n        if (!firstName || !lastName || !email || !address) {\r\n            alert(\"Vui lòng nhập đầy đủ thông tin.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    // Lưu thay đổi thông tin người dùng\r\n    handleSaveUserEdit = async () => {\r\n        if (!this.validateUserData()) {\r\n            return; // Nếu dữ liệu không hợp lệ, thoát khỏi hàm này\r\n        }\r\n        let { userIdToEdit, userEditData } = this.state;\r\n        let data = {\r\n            id: userIdToEdit,\r\n            firstName: userEditData.firstName,\r\n            lastName: userEditData.lastName,\r\n            email: userEditData.email,\r\n            address: userEditData.address,\r\n        };\r\n        let response = await updateUser(data);\r\n        if (response && response.data.errCode === 0) {\r\n            await this.fetchAllUsers();\r\n            this.setState({\r\n                userIdToEdit: null,\r\n                userEditData: {\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    email: \"\",\r\n                    address: \"\",\r\n                },\r\n                showModal: false, // Ẩn modal sau khi lưu\r\n            });\r\n        } else {\r\n            alert(response.data.errMessage);\r\n        }\r\n    };\r\n\r\n    // Đóng modal\r\n    handleCloseModal = () => {\r\n        this.setState({ showModal: false });\r\n    };\r\n\r\n    // Xóa người dùng\r\n    handleDeleteUser = async (userId) => {\r\n        let response = await deleteUser(userId);\r\n        if (response && response.data.errCode === 0) {\r\n            await this.fetchAllUsers();\r\n        } else {\r\n            alert(response.data.errMessage);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { arrUsers, userEditData, showModal } = this.state;\r\n        return (\r\n            <div className=\"user-center\">\r\n                <div className=\"title text-center\">\r\n                    Manage user with anhtonton\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mb-2\"\r\n                    onClick={this.handleShowModal}\r\n                >\r\n                    + Add New User\r\n                </button>\r\n                <div className=\"user-table mt-4 mx-3\">\r\n                    <table\r\n                        className=\"table table-striped table-hover table-bordered\"\r\n                        id=\"customers\"\r\n                    >\r\n                        <thead className=\"thead-dark custom-header\">\r\n                            <tr>\r\n                                <th style={{ width: \"25%\" }}>Email</th>\r\n                                <th style={{ width: \"20%\" }}>Firstname</th>\r\n                                <th style={{ width: \"20%\" }}>Lastname</th>\r\n                                <th style={{ width: \"25%\" }}>Address</th>\r\n                                <th style={{ width: \"10%\" }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {arrUsers &&\r\n                                arrUsers.length > 0 &&\r\n                                arrUsers.map((user, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.firstName}</td>\r\n                                        <td>{user.lastName}</td>\r\n                                        <td>{user.address}</td>\r\n                                        <td>\r\n                                            <button\r\n                                                className=\"btn\"\r\n                                                onClick={() =>\r\n                                                    this.handleEditUser(user)\r\n                                                }\r\n                                            >\r\n                                                <FaEdit />\r\n                                            </button>\r\n                                            <button\r\n                                                className=\"btn\"\r\n                                                onClick={() =>\r\n                                                    this.handleDeleteUser(\r\n                                                        user.id\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <FaTrash />\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <ModalUser\r\n                    show={showModal}\r\n                    handleClose={this.handleCloseModal}\r\n                    userEditData={userEditData}\r\n                    handleChangeUserEditData={this.handleChangeUserEditData}\r\n                    handleSaveUserEdit={this.handleSaveUserEdit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\services\\adminService.js",["913"],"import axios from '../axios';\r\nimport * as queryString from 'query-string';\r\n\r\nconst adminService = {\r\n\r\n    /**\r\n     * Đăng nhập hệ thống\r\n     * {\r\n     *  \"username\": \"string\",\r\n     *  \"password\": \"string\"\r\n     * }\r\n     */\r\n    login(loginBody) {\r\n        return axios.post(`/admin/login`, loginBody)\r\n    },\r\n\r\n};\r\n\r\nexport default adminService;","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\ToastUtil.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\axios.js",["914"],"import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true\r\n});\r\n\r\nconst createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n    const error = new Error();\r\n    error.httpStatusCode = httpStatusCode;\r\n    error.statusCode = statusCode;\r\n    error.errorMessage = errorMessage;\r\n    error.problems = problems;\r\n    error.errorCode = errorCode + \"\";\r\n    return error;\r\n};\r\n\r\nexport const isSuccessStatusCode = (s) => {\r\n    // May be string or number\r\n    const statusType = typeof s;\r\n    return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n};\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n            return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n        }\r\n\r\n        // Return direct data to callback\r\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n            return data['d'];\r\n        }\r\n        // Handle special case\r\n        if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n            return null;\r\n        }\r\n        return response.data;\r\n    },\r\n    (error) => {\r\n        const { response } = error;\r\n        if (response == null) {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const { data } = response;\r\n\r\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n            return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n        }\r\n\r\n        if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n            return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n        }\r\n\r\n        return Promise.reject(createError(response.status));\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\CommonUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\utils\\constant.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\appActions.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\userActions.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\config.js",["915"],"export default {\r\n    api: {\r\n        API_BASE_URL: \"http://localhost:8080/\",\r\n        ROUTER_BASE_NAME: null,\r\n    },\r\n    app: {\r\n        /**\r\n         * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\r\n         * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\r\n         */\r\n        ROUTER_BASE_NAME: null,\r\n    }\r\n};\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\Auth\\Login.js",["916","917"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport * as actions from \"../../store/actions\";\r\nimport \"./Login.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { languages } from \"../../utils\";\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import Bootstrap CSS\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faFacebookF,\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { handleLoginApi } from \"../../services/userServices\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            password: \"\",\r\n            errMessage: \"\",\r\n        };\r\n    }\r\n    handleOnChangeUsername = (event) => {\r\n        this.setState({\r\n            userName: event.target.value,\r\n        });\r\n    };\r\n    handleOnChangePassword = (event) => {\r\n        this.setState({\r\n            password: event.target.value,\r\n        });\r\n    };\r\n    handleLogin = async () => {\r\n        this.setState({\r\n            errMessage: \"\",\r\n        });\r\n        try {\r\n            let response = await handleLoginApi(\r\n                this.state.userName,\r\n                this.state.password\r\n            );\r\n            if (response.data.errCode !== 0) {\r\n                this.setState({\r\n                    errMessage: response.data.message, // Lấy thông báo lỗi từ phản hồi của server\r\n                });\r\n            } else {\r\n                // Đăng nhập thành công, bạn có thể thêm các hành động khác ở đây\r\n                this.props.userLoginSuccess(response.data.user);\r\n                console.log(\"Login successful!\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            if (error.response && error.response.data) {\r\n                this.setState({\r\n                    errMessage: error.response.data.message, // Lấy thông báo lỗi từ phản hồi của server\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errMessage: error.message,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col md={4}>\r\n                        <h2 className=\"text-center mt-5\">Login</h2>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-4\" controlId=\"form1\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    value={this.state.userName}\r\n                                    onChange={(event) => {\r\n                                        this.handleOnChangeUsername(event);\r\n                                    }}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-4\" controlId=\"form2\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={this.state.password}\r\n                                    onChange={(event) => {\r\n                                        this.handleOnChangePassword(event);\r\n                                    }}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\" text-danger mb-4\">\r\n                                {this.state.errMessage}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between mx-3 mb-4\">\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    id=\"flexCheckDefault\"\r\n                                    label=\"Remember me\"\r\n                                />\r\n                                <a href=\"#!\">Forgot password?</a>\r\n                            </div>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                className=\"mb-4 w-100\"\r\n                                onClick={() => {\r\n                                    this.handleLogin();\r\n                                }}\r\n                            >\r\n                                Sign in\r\n                            </Button>\r\n\r\n                            <div className=\"text-center\">\r\n                                <p>\r\n                                    Not a member? <a href=\"#!\">Register</a>\r\n                                </p>\r\n                                <p>or sign up with:</p>\r\n\r\n                                <div\r\n                                    className=\"d-flex justify-content-between mx-auto\"\r\n                                    style={{ width: \"40%\" }}\r\n                                >\r\n                                    <Button\r\n                                        variant=\"outline-primary\"\r\n                                        className=\"m-1\"\r\n                                        style={{ color: \"#1266f1\" }}\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            icon={faFacebookF}\r\n                                            size=\"sm\"\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        variant=\"outline-primary\"\r\n                                        className=\"m-1\"\r\n                                        style={{ color: \"#1266f1\" }}\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            icon={faTwitter}\r\n                                            size=\"sm\"\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        variant=\"outline-primary\"\r\n                                        className=\"m-1\"\r\n                                        style={{ color: \"#1266f1\" }}\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            icon={faGoogle}\r\n                                            size=\"sm\"\r\n                                        />\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        variant=\"outline-primary\"\r\n                                        className=\"m-1\"\r\n                                        style={{ color: \"#1266f1\" }}\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            icon={faGithub}\r\n                                            size=\"sm\"\r\n                                        />\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        // userLoginFail: () => dispatch(actions.adminLoginFail()),\r\n        userLoginSuccess: (userInfor) => dispatch(actions.userLoginSuccess(userInfor)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\services\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\services\\userServices.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\System\\ModalUser.js",["918"],"import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst ModalUser = ({\r\n    show,\r\n    handleClose,\r\n    userEditData,\r\n    handleChangeUserEditData,\r\n    handleSaveUserEdit,\r\n}) => {\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            {/* tiêu đề */}\r\n            <Modal.Header>\r\n                <Modal.Title>Edit User Information</Modal.Title>\r\n            </Modal.Header>\r\n            {/* nội dung */}\r\n            <Modal.Body>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>First Name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"firstName\"\r\n                            value={userEditData.firstName}\r\n                            onChange={handleChangeUserEditData}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Name:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"lastName\"\r\n                            value={userEditData.lastName}\r\n                            onChange={handleChangeUserEditData}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={userEditData.email}\r\n                            onChange={handleChangeUserEditData}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"address\"\r\n                            value={userEditData.address}\r\n                            onChange={handleChangeUserEditData}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n            {/* Phần footer của modal */}\r\n            <Modal.Footer>\r\n                <button type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={handleClose}>\r\n                    Close\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={handleSaveUserEdit}>\r\n                    Save changes\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalUser;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\HomePage.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\HomeHeader.js",["919"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./HomeHeader.scss\";\r\nimport Slider from \"react-slick\";\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nclass HomeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"home-header-container\">\r\n                    <div className=\"home-header-content mt\">\r\n                        <div className=\"left-content\">\r\n                            <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n                            <div className=\"header-logo\"></div>\r\n                        </div>\r\n                        <div className=\"center-content\">\r\n                            <div className=\"child-content\">\r\n                                <b><FormattedMessage id=\"home-header.speciality\" /></b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.search-doctor-speciality\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b><FormattedMessage id=\"home-header.health-facility\" /></b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.choose-hospital\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b><FormattedMessage id=\"home-header.doctor\" /></b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.choose-good-doctor\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b><FormattedMessage id=\"home-header.examination-package\" /></b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.general-health-check\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-content\">\r\n                            <div className=\"support\">\r\n                                <button type=\"button\" className=\"btn btn-info\">\r\n                                    <FormattedMessage id=\"home-header.support\" />\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"language-vi active\">VN</div>\r\n                            <div className=\"language-en\">EN</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-header-banner\">\r\n                    <div className=\"title1\"><FormattedMessage id=\"home-header.platform\" /></div>\r\n                    <div className=\"title2\"><FormattedMessage id=\"home-header.care\" /></div>\r\n                    <div className=\"search\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                        <input type=\"text\" placeholder=\"Tìm kiếm\" />\r\n                    </div>\r\n                    <div className=\"services\">\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-stethoscope\"></i>\r\n                            <p><FormattedMessage id=\"home-header.specialist\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-phone\"></i>\r\n                            <p><FormattedMessage id=\"home-header.remote\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-notes-medical\"></i>\r\n                            <p><FormattedMessage id=\"home-header.general\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-vial\"></i>\r\n                            <p><FormattedMessage id=\"home-header.test\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-heart\"></i>\r\n                            <p><FormattedMessage id=\"home-header.mental\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-heart\"></i>\r\n                            <p><FormattedMessage id=\"home-header.dental\" /></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\Section\\Speciality.js",["920"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Speciality.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport specialityImg from '../../../assets/specialityImg/1.jpg';\r\n\r\nclass Speciality extends Component {\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 2,\r\n            nextArrow: <div className=\"slick-next\"></div>,\r\n            prevArrow: <div className=\"slick-prev\"></div>,\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"section-speciality\">\r\n                    <div className=\"speciality-content\">\r\n                        <div className=\"speciality-title text-center mb-3\">\r\n                                Chuyên Khoa\r\n                        </div>\r\n                        <Slider {...settings}>\r\n                                <div className=\"speciality-item\">\r\n                                    <img\r\n                                        className=\"speciality-img\"\r\n                                        src={specialityImg}\r\n                                        alt=\"speciality\"\r\n                                    />\r\n                                    <span className=\"speciality-title\">\r\n                                        Xương khớp\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"speciality-item\">\r\n                                    <img\r\n                                        className=\"speciality-img\"\r\n                                        src={specialityImg}\r\n                                        alt=\"speciality\"\r\n                                    />\r\n                                    <span className=\"speciality-title\">\r\n                                        Xương khớp\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"speciality-item\">\r\n                                    <img\r\n                                        className=\"speciality-img\"\r\n                                        src={specialityImg}\r\n                                        alt=\"speciality\"\r\n                                    />\r\n                                    <span className=\"speciality-title\">\r\n                                        Xương khớp\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"speciality-item\">\r\n                                    <img\r\n                                        className=\"speciality-img\"\r\n                                        src={specialityImg}\r\n                                        alt=\"speciality\"\r\n                                    />\r\n                                    <span className=\"speciality-title\">\r\n                                        Xương khớp\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"speciality-item\">\r\n                                    <img\r\n                                        className=\"speciality-img\"\r\n                                        src={specialityImg}\r\n                                        alt=\"speciality\"\r\n                                    />\r\n                                    <span className=\"speciality-title\">\r\n                                        Xương khớp\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"speciality-item\">\r\n                                    <img\r\n                                        className=\"speciality-img\"\r\n                                        src={specialityImg}\r\n                                        alt=\"speciality\"\r\n                                    />\r\n                                    <span className=\"speciality-title\">\r\n                                        Xương khớp\r\n                                    </span>\r\n                                </div>\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Speciality);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\Section\\Medical.js",["921"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Medical.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport medicalImg from \"../../../assets/medical/1.jpg\";\r\nclass Medical extends Component {\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 2,\r\n            nextArrow: <div className=\"slick-next\"></div>,\r\n            prevArrow: <div className=\"slick-prev\"></div>,\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"section-medical\">\r\n                    <div className=\"medical-content\">\r\n                        <div className=\"medical-header\">\r\n                            <div className=\"medical-title mb-3 ml-1\">\r\n                                Chuyên Khoa\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-outline-primary\">Tìm kiếm</button>\r\n                        </div>\r\n\r\n                        <Slider {...settings}>\r\n                            <div className=\"medical-item\">\r\n                                <img\r\n                                    className=\"medical-img\"\r\n                                    src={medicalImg}\r\n                                    alt=\"medical\"\r\n                                />\r\n                                <span className=\"medical-title\">\r\n                                    Bệnh viện Bạch Mai\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"medical-item\">\r\n                                <img\r\n                                    className=\"medical-img\"\r\n                                    src={medicalImg}\r\n                                    alt=\"medical\"\r\n                                />\r\n                                <span className=\"medical-title\">\r\n                                    Bệnh viện Bạch Mai\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"medical-item\">\r\n                                <img\r\n                                    className=\"medical-img\"\r\n                                    src={medicalImg}\r\n                                    alt=\"medical\"\r\n                                />\r\n                                <span className=\"medical-title\">\r\n                                    Bệnh viện Bạch Mai\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"medical-item\">\r\n                                <img\r\n                                    className=\"medical-img\"\r\n                                    src={medicalImg}\r\n                                    alt=\"medical\"\r\n                                />\r\n                                <span className=\"medical-title\">\r\n                                    Bệnh viện Bạch Mai\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"medical-item\">\r\n                                <img\r\n                                    className=\"medical-img\"\r\n                                    src={medicalImg}\r\n                                    alt=\"medical\"\r\n                                />\r\n                                <span className=\"medical-title\">\r\n                                    Bệnh viện Bạch Mai\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"medical-item\">\r\n                                <img\r\n                                    className=\"medical-img\"\r\n                                    src={medicalImg}\r\n                                    alt=\"medical\"\r\n                                />\r\n                                <span className=\"medical-title\">\r\n                                    Bệnh viện Bạch Mai\r\n                                </span>\r\n                            </div>\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Medical);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\Section\\FeaturedDoctors.js",["922","923","924","925","926","927"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./FeaturedDoctors.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n// import medicalImg from \"../../../assets/FeaturedDoctors/1.jpg\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport ExampleCarouselImage from \"../../../components/ExampleCarouselImage\";\r\nimport medicalImg from \"../../../assets/medical/1.jpg\";\r\nimport CardDoctor from \"../../../components/CardDoctor\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nclass FeaturedDoctors extends Component {\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 2,\r\n            nextArrow: <div className=\"slick-next\"></div>,\r\n            prevArrow: <div className=\"slick-prev\"></div>,\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"section-doctors\">\r\n                    <div className=\"doctors-content\">\r\n                        <div className=\"doctors-header\">\r\n                            <div className=\"doctors-title mb-3 ml-1\">\r\n                                Bác sĩ nổi bật tuần qua\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-outline-primary\">Tìm kiếm</button>\r\n                        </div>\r\n\r\n                        <Slider {...settings}>\r\n\r\n                            <div className=\"doctors-item\">\r\n                            <CardDoctor/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <CardDoctor/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <CardDoctor/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <CardDoctor/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <CardDoctor/>\r\n\r\n                                {/* <img\r\n                                    className=\"doctors-img\"\r\n                                    src={medicalImg}\r\n                                    alt=\"doctors\"\r\n                                /> */}\r\n                                {/* <span className=\"doctors-title\">\r\n                                    Bệnh viện Bạch Mai\r\n                                </span> */}\r\n                            </div>\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeaturedDoctors);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\ExampleCarouselImage.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\CardDoctor.js",["928"],"import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport imgDoctor from '../assets/doctors/1.png';\r\nimport CardDoctor from './CardDoctor.scss';\r\n\r\nfunction BasicExample() {\r\n  return (\r\n    <Card>\r\n      <Card.Img variant=\"top\" src={imgDoctor} />\r\n      <Card.Body>\r\n        <Card.Title>Hoàng Ngọc Trọng</Card.Title>\r\n        <Card.Text>\r\n          <p>Chức Vụ: Giáo sư</p>\r\n          <p>Chuyên Khoa: Thần Kinh</p>\r\n        </Card.Text>\r\n        <Button variant=\"primary\">Go somewhere</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BasicExample;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\HomePage\\Section\\Manual.js",["929","930","931","932"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Manual.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n// import medicalImg from \"../../../assets/Manual/1.jpg\";\r\nimport medicalImg from \"../../../assets/medical/1.jpg\";\r\nimport Manuals from \"../../../components/Manuals\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nclass Manual extends Component {\r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n            nextArrow: <div className=\"slick-next\"></div>,\r\n            prevArrow: <div className=\"slick-prev\"></div>,\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"section-doctors\">\r\n                    <div className=\"doctors-content\">\r\n                        <div className=\"doctors-header\">\r\n                            <div className=\"doctors-title mb-3 ml-1\">\r\n                                Bác sĩ nổi bật tuần qua\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-outline-primary\">Tìm kiếm</button>\r\n                        </div>\r\n\r\n                        <Slider {...settings}>\r\n\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Manual);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\components\\Manuals.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\containers\\System\\UserRedux.js",["933","934","935","936","937","938","939","940"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\actions\\adminActions.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React\\src\\store\\reducers\\adminReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\index.js",[],["941","942"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\redux.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\serviceWorker.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\App.js",["943","944","945","946"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport { history } from \"../redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport CustomScrollbars from \"../components/CustomScrollbars\";\r\nimport {\r\n    userIsAuthenticated,\r\n    userIsNotAuthenticated,\r\n} from \"../hoc/authentication\";\r\n\r\nimport { path } from \"../utils\";\r\n\r\nimport Home from \"../routes/Home\";\r\n// import Login from '../routes/Login';\r\nimport Login from \"./Auth/Login\";\r\nimport Header from \"./Header/Header\";\r\nimport System from \"../routes/System\";\r\n\r\nimport { CustomToastCloseButton } from \"../components/CustomToast\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\nimport DetailDoctor from \"../containers/Patient/Doctor/DetailDoctor\"\r\nimport { height, width } from \"@fortawesome/free-brands-svg-icons/fa42Group\";\r\nclass App extends Component {\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars\r\n                                style={{ height: \"100vh\", width: \"100vw\" }}\r\n                            >\r\n                                <Switch>\r\n                                    <Route\r\n                                        path={path.HOME}\r\n                                        exact\r\n                                        component={Home}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.LOGIN}\r\n                                        component={userIsNotAuthenticated(\r\n                                            Login\r\n                                        )}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.SYSTEM}\r\n                                        component={userIsAuthenticated(System)}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.HOMEPAGE}\r\n                                        component={HomePage}\r\n                                    />\r\n\r\n                                    <Route\r\n                                    path=\"/get-detail-doctor-by-id/:id\"\r\n                                    component={DetailDoctor}\r\n                                    />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        <ToastContainer\r\n                            position=\"top-right\"\r\n                            autoClose={5000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\hoc\\authentication.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\reducers\\rootReducer.js",["947"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\CustomToast.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\routes\\System.js",["948"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport UserManage from \"../containers/System/UserManage\";\r\nimport UserRedux from \"../containers/System/UserRedux\";\r\nimport Header from \"../containers/Header/Header\";\r\nimport MarkdownEditor from '../containers/System/MarkdownEditor'\r\nclass System extends Component {\r\n    render() {\r\n\r\n        const { systemMenuPath, isLoggedIn } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route\r\n                                path=\"/system/user-manage\"\r\n                                component={UserManage}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/user-redux\"\r\n                                component={UserRedux}\r\n                            />\r\n                            <Route \r\n                            path=\"/system/markdown-editor\"\r\n                            component={MarkdownEditor}\r\n                            />\r\n                            <Route\r\n                                component={() => {\r\n                                    return <Redirect to={systemMenuPath} />;\r\n                                }}\r\n                            />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\routes\\Home.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\Header\\Header.js",["949"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Navigator from \"../../components/Navigator\";\r\nimport { adminMenu, doctorMenu } from \"./menuApp\";\r\nimport \"./Header.scss\";\r\nimport { languages } from \"../../utils/constant\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuApp: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { userInforr } = this.props;\r\n        let menu = [];\r\n        if (userInforr && userInforr.roleId) {\r\n            if (userInforr.roleId === \"R1\") {\r\n                menu = adminMenu;\r\n            }\r\n            if (userInforr.roleId === \"R2\") {\r\n                menu = doctorMenu;\r\n            }\r\n        }\r\n        this.setState({\r\n            menuApp: menu,\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userInforr !== this.props.userInforr) {\r\n            let { userInforr } = this.props;\r\n            let menu = [];\r\n            if (userInforr && userInforr.roleId) {\r\n                if (userInforr.roleId === \"R1\") {\r\n                    menu = adminMenu;\r\n                }\r\n                if (userInforr.roleId === \"R2\") {\r\n                    menu = doctorMenu;\r\n                }\r\n            }\r\n            this.setState({\r\n                menuApp: menu,\r\n            });\r\n        }\r\n    }\r\n    handleChangeLanguage = (language) => {\r\n        this.props.changeLanguageAppRedux(language);\r\n    };\r\n    render() {\r\n        let language = this.props.language;\r\n        const { processLogout, langguage, userInforr } = this.props;\r\n        const {menuApp} = this.state;\r\n        console.log(\"check\", userInforr);\r\n        return (\r\n            <div className=\"header-container\">\r\n                {/* thanh navigator */}\r\n                <div className=\"header-tabs-container\">\r\n                    <Navigator menus={menuApp} />\r\n                </div>\r\n                <div className=\"languages-logout\">\r\n                    <span className=\"welcome\">\r\n                        <FormattedMessage id=\"home-header.welcome\" />\r\n                        {userInforr && userInforr.lastName\r\n                            ? userInforr.lastName\r\n                            : \" \"}\r\n                    </span>\r\n                    <div className=\"languages\">\r\n                        <span\r\n                            className={\r\n                                language === languages.VI\r\n                                    ? \"language-vi active\"\r\n                                    : \"language-vi\"\r\n                            }\r\n                            onClick={() =>\r\n                                this.handleChangeLanguage(languages.VI)\r\n                            }\r\n                        >\r\n                            VN\r\n                        </span>\r\n                        <span\r\n                            className={\r\n                                language === languages.EN\r\n                                    ? \"language-en active\"\r\n                                    : \"language-en\"\r\n                            }\r\n                            onClick={() =>\r\n                                this.handleChangeLanguage(languages.EN)\r\n                            }\r\n                        >\r\n                            EN\r\n                        </span>\r\n                    </div>\r\n                    <div\r\n                        className=\"btn btn-logout\"\r\n                        onClick={processLogout}\r\n                        title=\"Log out\"\r\n                    >\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        language: state.app.language,\r\n        userInforr: state.user.userInforr,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        processLogout: () => dispatch(actions.processLogout()),\r\n        changeLanguageAppRedux: (language) =>\r\n            dispatch(actions.changeLanguageApp(language)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\Auth\\Login.js",["950","951"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\HomePage.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\reducers\\adminReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\Navigator.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\constant.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\System\\UserManage.js",["952"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\System\\UserRedux.js",["953","954","955","956","957","958","959","960","961","962"],"import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { languages } from \"../../utils/constant\";\r\nimport \"./UserRedux.scss\";\r\nimport * as actions from \"../../../src/store/actions\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { create } from \"lodash\";\r\nimport { createUser } from \"../../../src/services/userServices\";\r\nimport {\r\n    getAllUsers,\r\n    deleteUser,\r\n    updateUser,\r\n} from \"../../services/userServices\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nclass UserRedux extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editFormRef = React.createRef();\r\n        this.state = {\r\n            genderArr: [],\r\n            positionArr: [],\r\n            roleArr: [],\r\n            previewImgURL: \"\",\r\n            isOpen: false,\r\n            email: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            phoneNumber: \"\",\r\n            gender: \"\",\r\n            role: \"\",\r\n            position: \"\",\r\n            avatar: \"\",\r\n            arrUsers: [],\r\n            isEditing: false,\r\n            userEditId: null,\r\n        };\r\n    }\r\n\r\n    // Thêm hàm scroll\r\n    scrollToEditForm = () => {\r\n        this.editFormRef.current?.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n        });\r\n    };\r\n    // gọi hàm bên redux\r\n    async componentDidMount() {\r\n        this.props.getGenderStart();\r\n        this.props.getPositionStart();\r\n        this.props.getRoleStart();\r\n        this.props.fetchAllUsers();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.genderRedux !== this.props.genderRedux) {\r\n            let arrGender = this.props.genderRedux;\r\n            this.setState({\r\n                genderArr: arrGender,\r\n                gender:\r\n                    arrGender && arrGender.length > 0 ? arrGender[0].key : \"\",\r\n            });\r\n        }\r\n\r\n        if (prevProps.positionRedux !== this.props.positionRedux) {\r\n            let arrPosition = this.props.positionRedux;\r\n            this.setState({\r\n                positionArr: arrPosition,\r\n                position:\r\n                    arrPosition && arrPosition.length > 0\r\n                        ? arrPosition[0].key\r\n                        : \"\",\r\n            });\r\n        }\r\n        if (prevProps.roleRedux !== this.props.roleRedux) {\r\n            let arrRole = this.props.roleRedux;\r\n            this.setState({\r\n                roleArr: arrRole,\r\n                role: arrRole && arrRole.length > 0 ? arrRole[0].key : \"\",\r\n            });\r\n        }\r\n\r\n        // Xử lý khi tạo user thành công hoặc thất bại\r\n        if (prevProps.success !== this.props.success) {\r\n            if (this.props.success && this.props.success.errCode === 0) {\r\n                // Reset form\r\n                this.setState({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    address: \"\",\r\n                    phoneNumber: \"\",\r\n                    gender: this.state.genderArr[0]?.key || \"\",\r\n                    role: this.state.roleArr[0]?.key || \"\",\r\n                    position: this.state.positionArr[0]?.key || \"\",\r\n                    avatar: \"\",\r\n                    previewImgURL: \"\",\r\n                });\r\n\r\n                toast.success(\"Tạo người dùng thành công!\");\r\n                // Refresh danh sách users\r\n                this.props.fetchAllUsers();\r\n            }\r\n        }\r\n\r\n        // Xử lý khi có lỗi\r\n        if (prevProps.error !== this.props.error && this.props.error) {\r\n            if (this.props.error.errCode === 1) {\r\n                toast.error(this.props.error.errMessage);\r\n            }\r\n        }\r\n    }\r\n    // khi cập nhập ảnh\r\n    handleOnchangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            // Validate file\r\n            const validTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\r\n            const maxSize = 16 * 1024 * 1024; // 16MB\r\n\r\n            if (!validTypes.includes(file.type)) {\r\n                toast.error(\"Vui lòng chọn file ảnh (jpg, png, gif)\");\r\n                return;\r\n            }\r\n\r\n            if (file.size > maxSize) {\r\n                toast.error(\"Kích thước ảnh tối đa 16MB\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const base64 = await this.getBase64(file);\r\n                const objectUrl = URL.createObjectURL(file);\r\n\r\n                this.setState({\r\n                    previewImgURL: objectUrl,\r\n                    avatar: base64,\r\n                });\r\n            } catch (error) {\r\n                toast.error(\"Lỗi xử lý ảnh\");\r\n                console.error(\"Error:\", error);\r\n            }\r\n        }\r\n    };\r\n    getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    };\r\n\r\n    triggerFileInput = () => {\r\n        document.getElementById(\"previewImg\").click();\r\n    };\r\n    // hiển thị ảnh khi ấn vào\r\n    openPreviewImage = () => {\r\n        if (!this.state.previewImgURL) return;\r\n        this.setState({ isOpen: true });\r\n    };\r\n    // nhấn nút submit để tạo người dùng\r\n    handleOnSubmit = () => {\r\n        let isVaild = this.checkVaildateInput();\r\n        if (isVaild === false) return;\r\n        console.log(\"check\", this.state);\r\n\r\n        // console.log(\"check\", email);\r\n        console.log(\"check props\", this.props);\r\n        this.props.createNewUser({\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            address: this.state.address,\r\n            phoneNumber: this.state.phoneNumber,\r\n            gender: this.state.gender,\r\n            position: this.state.position,\r\n            roleId: this.state.role,\r\n            image: this.state.avatar,\r\n        });\r\n        console.log(\"CHECK PROP\", this.props);\r\n\r\n        // alert(successMessage);\r\n    };\r\n    // kiểm tra người dùng đã nhập đủ thông tin chưa\r\n    checkVaildateInput = () => {\r\n        let isVaild = true;\r\n        let errcheck = [\r\n            \"email\",\r\n            \"password\",\r\n            \"firstName\",\r\n            \"lastName\",\r\n            \"address\",\r\n            \"phoneNumber\",\r\n            \"gender\",\r\n            \"role\",\r\n            \"position\",\r\n            \"avatar\",\r\n        ];\r\n        const fieldNames = {\r\n            email: \"Email\",\r\n            password: \"Mật khẩu\",\r\n            firstName: \"Tên\",\r\n            lastName: \"Họ\",\r\n            address: \"Địa chỉ\",\r\n            phoneNumber: \"Số điện thoại\",\r\n            gender: \"Giới tính\",\r\n            role: \"Vai trò\",\r\n            position: \"Chức vụ\",\r\n            avatar: \"Ảnh đại diện\",\r\n        };\r\n        for (let i = 0; i < errcheck.length; i++) {\r\n            let key = errcheck[i];\r\n            let value = this.state[key];\r\n            if (!value) {\r\n                isVaild = false;\r\n                toast.error(`Vui lòng nhập ${fieldNames[key]}`);\r\n                break;\r\n            }\r\n        }\r\n        return isVaild;\r\n    };\r\n    // lấy giá trị khi nhập vào ở các ô lưu vào state\r\n    onChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState(\r\n            {\r\n                ...copyState,\r\n            }\r\n            // () => {\r\n            //     console.log(\"anhtonton\", this.state);\r\n            // }\r\n        );\r\n    };\r\n\r\n    // xóa người dùng\r\n\r\n    handleDeleteUser = (user) => {\r\n        if (window.confirm(\"Bạn có chắc chắn muốn xóa người dùng này không?\")) {\r\n            this.props.deleteUser({\r\n                id: user.id,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n            });\r\n        }\r\n    };\r\n    // set các giá trị vào state để sửa thông tin người dùng\r\n\r\n    handleEditUser = (user) => {\r\n        console.log(\"check User \", user);\r\n        this.setState(\r\n            {\r\n                email: user.email,\r\n                password: \"********\", // Thay đổi thành dấu *\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                address: user.address,\r\n                phoneNumber: user.phonenumber,\r\n                gender: user.gender,\r\n                role: user.roleID,\r\n                position: user.positionId,\r\n                avatar: user.image,\r\n                previewImgURL:\r\n                    user.image && user.image.startsWith(\"data:image\")\r\n                        ? user.image\r\n                        : user.image\r\n                        ? `data:image/jpeg;base64,${user.image}`\r\n                        : \"\",\r\n                isEditing: true,\r\n                userEditId: user.id,\r\n            },\r\n            () => {\r\n                this.scrollToEditForm();\r\n            },\r\n            console.log(\r\n                \"check rolevs position\",\r\n                this.state.position,\r\n                this.state.role,\r\n                this.state.gender\r\n            )\r\n        );\r\n    };\r\n\r\n    // sửa thông tin người dùng\r\n\r\n    handleSubmitEditUser = () => {\r\n        if (!this.checkValidateEdit()) return;\r\n        let {\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            phoneNumber,\r\n            gender,\r\n            role,\r\n            position,\r\n            userEditId,\r\n            avatar,\r\n        } = this.state;\r\n    // Tạo object data để gửi lên server\r\n    const userData = {\r\n        id: userEditId,\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        address: address,\r\n        phoneNumber: phoneNumber,\r\n        gender: gender,        // Đảm bảo đúng format\r\n        roleId: role,         // Đảm bảo đúng format\r\n        positionId: position, // Đảm bảo đúng format\r\n        image: avatar,\r\n    };\r\n    console.log('Sending update data:', userData);\r\n    this.props.editUser(userData);\r\n\r\n        // reset state sau khi edit\r\n\r\n        // Reset form sau khi edit\r\n        this.setState({\r\n            email: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            phoneNumber: \"\",\r\n            gender: this.state.genderArr[0]?.key || \"\",\r\n            role: this.state.roleArr[0]?.key || \"\",\r\n            position: this.state.positionArr[0]?.key || \"\",\r\n            avatar: \"\",\r\n            previewImgURL: \"\",\r\n            isEditing: false,\r\n            userEditId: null,\r\n        });\r\n    };\r\n\r\n    // Thêm hàm validate cho edit\r\ncheckValidateEdit = () => {\r\n    let isValid = true;\r\n    const requiredFields = [\r\n        'firstName',\r\n        'lastName',\r\n        'address',\r\n        'phoneNumber',\r\n        'gender',\r\n        'role',\r\n        'position'\r\n    ];\r\n\r\n    const fieldNames = {\r\n        firstName: \"Tên\",\r\n        lastName: \"Họ\",\r\n        address: \"Địa chỉ\",\r\n        phoneNumber: \"Số điện thoại\",\r\n        gender: \"Giới tính\",\r\n        role: \"Vai trò\",\r\n        position: \"Chức vụ\"\r\n    };\r\n\r\n    for (let field of requiredFields) {\r\n        if (!this.state[field]) {\r\n            isValid = false;\r\n            toast.error(`Vui lòng nhập ${fieldNames[field]}`);\r\n            break;\r\n        }\r\n    }\r\n\r\n    return isValid;\r\n};\r\n    render() {\r\n        let genders = this.state.genderArr;\r\n        let language = this.props.language;\r\n        let isLoading = this.props.isLoading;\r\n        let positions = this.state.positionArr;\r\n        let roles = this.state.roleArr;\r\n        let {\r\n            email,\r\n            password,\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            phoneNumber,\r\n            gender,\r\n            role,\r\n            position,\r\n            avatar,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"manage-user\">\r\n                <div className=\"title\">\r\n                    <FormattedMessage id=\"manage-user.title\" />\r\n                </div>\r\n                <div className=\"user-redux-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"text-center\">\r\n                            {isLoading === true ? \"Loading infomation\" : \"\"}\r\n                        </div>\r\n                        <div ref={this.editFormRef} className=\"row\">\r\n                            <div className=\"mb-3\">\r\n                                <FormattedMessage id=\"manage-user.add-new-user\" />\r\n                            </div>\r\n                            <form>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"email\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.email\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            id=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            value={email}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"email\"\r\n                                                )\r\n                                            }\r\n                                            disabled={this.state.isEditing} // Thêm disabled\r\n                                            style={{\r\n                                                backgroundColor: this.state\r\n                                                    .isEditing\r\n                                                    ? \"#e9ecef\"\r\n                                                    : \"white\",\r\n                                            }} // Thêm style\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"password\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.password\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={password}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"password\"\r\n                                                )\r\n                                            }\r\n                                            disabled={this.state.isEditing} // Thêm disabled\r\n                                            style={{\r\n                                                backgroundColor: this.state\r\n                                                    .isEditing\r\n                                                    ? \"#e9ecef\"\r\n                                                    : \"white\",\r\n                                            }} // Thêm style\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"firstName\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.firstname\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"firstName\"\r\n                                            placeholder=\"Firstname\"\r\n                                            value={firstName}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"firstName\"\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"lastName\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.lastname\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"lastName\"\r\n                                            placeholder=\"Lastname\"\r\n                                            value={lastName}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"lastName\"\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"phonenumber\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.phonenumber\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"phonenumber\"\r\n                                            placeholder=\"Phonenumber\"\r\n                                            value={phoneNumber}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"phoneNumber\"\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <label\r\n                                            htmlFor=\"address\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.address\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"address\"\r\n                                            placeholder=\"1234 Main St\"\r\n                                            value={address}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"address\"\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"gender\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.gender\" />\r\n                                        </label>\r\n                                        <select\r\n                                            id=\"inputState\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"gender\"\r\n                                                )\r\n                                            }\r\n                                            value={this.state.gender}\r\n                                        >\r\n                                            {genders &&\r\n                                                genders.length > 0 &&\r\n                                                genders.map((item, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            key={index}\r\n                                                            value={item.key}\r\n                                                        >\r\n                                                            {language ===\r\n                                                            languages.VI\r\n                                                                ? item.valueVi\r\n                                                                : item.valueEn}\r\n                                                        </option>\r\n                                                    );\r\n                                                })}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"position\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.position\" />\r\n                                        </label>\r\n                                        <select\r\n                                            id=\"inputState\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"position\"\r\n                                                )\r\n                                            }\r\n                                            value={this.state.position}\r\n                                        >\r\n                                            {positions &&\r\n                                                positions.length > 0 &&\r\n                                                positions.map((item, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            key={index}\r\n                                                            value={item.key}\r\n                                                        >\r\n                                                            {language ===\r\n                                                            languages.VI\r\n                                                                ? item.valueVi\r\n                                                                : item.valueEn}\r\n                                                        </option>\r\n                                                    );\r\n                                                })}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"role\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.role\" />\r\n                                        </label>\r\n                                        <select\r\n                                            id=\"inputState\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"role\"\r\n                                                )\r\n                                            }\r\n                                            value={this.state.role}\r\n                                        >\r\n                                            {roles &&\r\n                                                roles.length > 0 &&\r\n                                                roles.map((item, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            key={index}\r\n                                                            value={item.key}\r\n                                                        >\r\n                                                            {language ===\r\n                                                            languages.VI\r\n                                                                ? item.valueVi\r\n                                                                : item.valueEn}\r\n                                                        </option>\r\n                                                    );\r\n                                                })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"avatar\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.avatar\" />\r\n                                        </label>\r\n                                        <div>\r\n                                            <input\r\n                                                id=\"previewImg\"\r\n                                                type=\"file\"\r\n                                                hidden\r\n                                                onChange={(event) =>\r\n                                                    this.handleOnchangeImage(\r\n                                                        event,\r\n                                                        \"avatar\"\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-primary\"\r\n                                                onClick={this.triggerFileInput}\r\n                                            >\r\n                                                Tải ảnh\r\n                                                <i className=\"fas fa-upload\"></i>\r\n                                            </button>\r\n                                            <div\r\n                                                onClick={() =>\r\n                                                    this.openPreviewImage()\r\n                                                }\r\n                                                className=\"preview-image\"\r\n                                                style={{\r\n                                                    backgroundImage: `url(${this.state.previewImgURL})`,\r\n                                                }}\r\n                                            ></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() =>\r\n                                        this.state.isEditing\r\n                                            ? this.handleSubmitEditUser()\r\n                                            : this.handleOnSubmit()\r\n                                    }\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id={\r\n                                            this.state.isEditing\r\n                                                ? \"Edit\"\r\n                                                : \"manage-user.submit\"\r\n                                        }\r\n                                    />\r\n                                </button>\r\n                            </form>\r\n\r\n                            {/* hiển thị danh sách user */}\r\n                            <div className=\"user-table-redux mt-4 \">\r\n                                {this.props.isLoadingUsers && (\r\n                                    <div className=\"text-center\">\r\n                                        <span>Đang tải dữ liệu...</span>\r\n                                    </div>\r\n                                )}\r\n                                <table class=\"table table-striped table-hover table-bordered\">\r\n                                    <thead class=\"table-dark custom-header\">\r\n                                        <tr>\r\n                                            <th style={{ width: \"25%\" }}>\r\n                                                Email\r\n                                            </th>\r\n                                            <th style={{ width: \"20%\" }}>\r\n                                                Firstname\r\n                                            </th>\r\n                                            <th style={{ width: \"20%\" }}>\r\n                                                Lastname\r\n                                            </th>\r\n                                            <th style={{ width: \"25%\" }}>\r\n                                                Address\r\n                                            </th>\r\n                                            <th style={{ width: \"10%\" }}>\r\n                                                Action\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.props.users &&\r\n                                        this.props.users.length > 0 ? (\r\n                                            this.props.users.map(\r\n                                                (item, index) => {\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            <td>\r\n                                                                {item.email}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {item.firstName}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {item.lastName}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {item.address}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <button\r\n                                                                    className=\"btn btn-warning mx-1\"\r\n                                                                    onClick={() =>\r\n                                                                        this.handleEditUser(\r\n                                                                            item\r\n                                                                        )\r\n                                                                    }\r\n                                                                >\r\n                                                                    <i className=\"fas fa-pencil-alt\"></i>\r\n                                                                </button>\r\n                                                                <button\r\n                                                                    className=\"btn btn-danger mx-1\"\r\n                                                                    onClick={() =>\r\n                                                                        this.handleDeleteUser(\r\n                                                                            item\r\n                                                                        )\r\n                                                                    }\r\n                                                                >\r\n                                                                    <i className=\"fas fa-trash\"></i>\r\n                                                                </button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                }\r\n                                            )\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td\r\n                                                    colSpan=\"5\"\r\n                                                    className=\"text-center\"\r\n                                                >\r\n                                                    Không có dữ liệu\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isOpen === true && (\r\n                    <Lightbox\r\n                        mainSrc={this.state.previewImgURL}\r\n                        onCloseRequest={() =>\r\n                            this.setState({\r\n                                isOpen: false,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        genderRedux: state.admin.genders,\r\n        isLoading: state.admin.isLoading,\r\n        positionRedux: state.admin.positions,\r\n        roleRedux: state.admin.roles,\r\n        success: state.admin.success,\r\n        error: state.admin.error,\r\n        users: state.admin.users,\r\n        isLoadingUsers: state.admin.isLoadingUsers,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n        createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n        // processLogout: () => dispatch(actions.processLogout()),\r\n        // changeLanguageAppRedux: (language) =>\r\n        //     dispatch(actions.changeLanguageApp(language)),\r\n        fetchAllUsers: () => dispatch(actions.fetchAllUsersStart()),\r\n        deleteUser: (userId) => dispatch(actions.deleteUserStart(userId)),\r\n        editUser: (data) => dispatch(actions.editUserStart(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\services\\userServices.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\Section\\Speciality.js",["963"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\Section\\Manual.js",["964","965","966","967"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\Section\\Medical.js",["968"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\Section\\FeaturedDoctors.js",["969"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { languages } from \"../../../utils/constant\";\r\nimport \"./FeaturedDoctors.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport * as actions from \"../../../store/actions\";\r\n// import medicalImg from \"../../../assets/FeaturedDoctors/1.jpg\";\r\n\r\nimport CardDoctor from \"../../../components/CardDoctor\";\r\n\r\nclass FeaturedDoctors extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctors();\r\n    }\r\n    render() {\r\n        const { isLoading, allDoctors, language } = this.props;\r\n        console.log(\"check allDoctor\", allDoctors)\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 4,\r\n            slidesToScroll: 2,\r\n            nextArrow: <div className=\"slick-next\"></div>,\r\n            prevArrow: <div className=\"slick-prev\"></div>,\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"section-doctors\">\r\n                    <div className=\"doctors-content\">\r\n                        <div className=\"doctors-header\">\r\n                            <div className=\"doctors-title mb-3 ml-1\">\r\n                                Bác sĩ nổi bật tuần qua\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-outline-primary\"\r\n                            >\r\n                                Tìm kiếm\r\n                            </button>\r\n                        </div>\r\n\r\n                        {isLoading ? (\r\n                            <div>Loading...</div>\r\n                        ) : (\r\n                            <Slider {...settings}>\r\n                                {allDoctors && allDoctors.map((doctor, index) => (\r\n                                    <div className=\"doctors-item\" key={doctor.id}>\r\n                                        <CardDoctor\r\n                                            imageUrl={doctor.image ? \r\n                                                doctor.image : \r\n                                                '/default-doctor.png'\r\n                                            }\r\n                                            name={language === languages.VI ? \r\n                                                `${doctor.lastName} ${doctor.firstName}` :\r\n                                                `${doctor.firstName} ${doctor.lastName}`\r\n                                            }\r\n                                            position={language === languages.VI ?\r\n                                                doctor.positionData.valueVi :\r\n                                                doctor.positionData.valueEn\r\n                                            }\r\n                                            id={doctor.id}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </Slider>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctors: state.admin.allDoctors,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeaturedDoctors);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\CommonUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\utils\\ToastUtil.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\ExampleCarouselImage.js",[],["970","971"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\CardDoctor.js",["972"],"import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport imgDoctor from \"../assets/doctors/1.png\";\r\nimport \"./CardDoctor.scss\";\r\n\r\nfunction BasicExample({ imageUrl, name, position, id }) {\r\n    const history = useHistory();\r\n\r\n    const handleViewDetail = () => {\r\n        history.push(`/get-detail-doctor-by-id/${id}`);\r\n    };\r\n    return (\r\n        <Card>\r\n            <Card.Img\r\n                variant=\"top\"\r\n                src={imageUrl}\r\n                className=\"doctor-image\"\r\n                onError={(e) => {\r\n                    e.target.src = \"/default-doctor.png\";\r\n                }}\r\n            />\r\n            <Card.Body>\r\n                <Card.Title>{name}</Card.Title>\r\n                <Card.Text>\r\n                    <p>Chức Vụ: {position}</p>\r\n                    <p>Chuyên Khoa: Thần Kinh</p>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" onClick={handleViewDetail}>Go somewhere</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default BasicExample;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\components\\Manuals.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\appActions.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\adminActions.js",["973"],"import actionTypes from \"./actionTypes\";\r\nimport { getAllCodeService } from \"../../services/userServices\";\r\nimport { createUser } from \"../../services/userServices\";\r\nimport { getAllUsers } from \"../../services/userServices\";\r\nimport { deleteUser } from \"../../services/userServices\";\r\nimport { updateUser } from \"../../services/userServices\";\r\nimport { ExitStatus } from \"typescript\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getTopDoctorsService } from \"../../services/userServices\";\r\n\r\n// chuc vu\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            // console.log(\"check res position\", res);\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data.data));\r\n            } else {\r\n                dispatch(fetchPositionFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log(\"fetchPositionStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: positionData,\r\n});\r\n\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAILED,\r\n});\r\n\r\n// role\r\nexport const fetchRoleStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_ROLE_START });\r\n\r\n            let res = await getAllCodeService(\"ROLE\");\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchRoleSuccess(res.data.data));\r\n            } else {\r\n                dispatch(fetchRoleFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchRoleFailed());\r\n            console.log(\"fetchRoleStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: roleData,\r\n});\r\n\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAILED,\r\n});\r\n// gioi tinh\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_GENDER_START });\r\n\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            // console.log(\"check res gender\", res);\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchGenderSuccess(res.data.data));\r\n            } else {\r\n                dispatch(fetchGenderFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchGenderFailed());\r\n            console.log(\"fetchGenderStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData,\r\n});\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED,\r\n});\r\n\r\n// tạo user mới\r\nexport const createNewUser = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            if (data.image) {\r\n                const base64Length =\r\n                    data.image.length - (data.image.indexOf(\",\") + 1);\r\n                const sizeInBytes = (base64Length * 3) / 4;\r\n                const sizeInMB = sizeInBytes / (1024 * 1024);\r\n\r\n                if (sizeInMB > 50) {\r\n                    toast.error(\"Kích thước ảnh không được vượt quá 16MB\");\r\n                    return dispatch(createUserFailed());\r\n                }\r\n            }\r\n            let res = await createUser(data);\r\n            // console.log(\"check res gender\", res);\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(createUserSuccess(res.data));\r\n                dispatch(fetchAllUsersStart());\r\n            } else {\r\n                dispatch(createUserFailed(res.data));\r\n            }\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 413) {\r\n                toast.error(\r\n                    \"Kích thước ảnh quá lớn. Vui lòng thử lại với ảnh nhỏ hơn.\"\r\n                );\r\n            } else {\r\n                toast.error(\"Lỗi tạo người dùng\");\r\n            }\r\n            dispatch(createUserFailed());\r\n            console.log(\"createUserFailed error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const createUserSuccess = (success) => {\r\n    console.log(\"Success:\", success); // Thực hiện kiểm tra ở đây\r\n    return {\r\n        type: actionTypes.CREATE_USER_SUCCESS,\r\n        success: success,\r\n    };\r\n};\r\n\r\nexport const createUserFailed = (error) => {\r\n    console.log(\"error:\", error);\r\n    return {\r\n        type: actionTypes.CREATE_USER_FAILED,\r\n        error: error,\r\n    };\r\n};\r\n\r\n// hiển thị toàn bộ danh sách user\r\n\r\nexport const fetchAllUsersStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_ALL_USERS_START });\r\n\r\n            let res = await getAllUsers(\"ALL\");\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchAllUsersSuccess(res.data.users));\r\n            } else {\r\n                dispatch(fetchAllUsersFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchAllUsersFailed());\r\n            console.log(\"fetchAllUsersStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchAllUsersSuccess = (users) => ({\r\n    type: actionTypes.FETCH_ALL_USERS_SUCCESS,\r\n    users: users,\r\n});\r\n\r\nexport const fetchAllUsersFailed = (error) => ({\r\n    type: actionTypes.FETCH_ALL_USERS_FAILED,\r\n    error: error,\r\n});\r\n\r\n// sửa thông tin người dùng\r\n\r\nexport const deleteUserStart = (userData) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await deleteUser(userData.id);\r\n            if (res && res.data.errCode === 0) {\r\n                toast.success(\r\n                    `Xóa người dùng ${userData.lastName} ${userData.lastName} thành công`\r\n                );\r\n                dispatch(deleteUserSuccess());\r\n                dispatch(fetchAllUsersStart());\r\n            } else {\r\n                toast.error(\"Xóa người dùng không thành công\");\r\n                dispatch(deleteUserFailed());\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Xóa người dùng không thành công\");\r\n            dispatch(deleteUserFailed());\r\n            console.log(\"deleteUser error\", error);\r\n        }\r\n    };\r\n};\r\nexport const deleteUserSuccess = () => ({\r\n    type: actionTypes.DELETE_USER_SUCCESS,\r\n});\r\nexport const deleteUserFailed = () => ({\r\n    type: actionTypes.DELETE_USER_FAILED,\r\n});\r\n\r\nexport const editUserStart = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            console.log(\"Action received data:\", data);\r\n            let res = await updateUser(data);\r\n            if (res && res.data.errCode === 0) {\r\n                toast.success(\"Cập nhật thông tin thành công!\");\r\n                dispatch(editUserSuccess());\r\n                dispatch(fetchAllUsersStart());\r\n            } else {\r\n                toast.error(res.data.errMessage);\r\n                dispatch(editUserFailed());\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Cập nhật thông tin thất bại!\");\r\n            dispatch(editUserFailed());\r\n            console.log(\"editUserFailed error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const editUserSuccess = () => ({\r\n    type: actionTypes.EDIT_USER_SUCCESS,\r\n});\r\n\r\nexport const editUserFailed = () => ({\r\n    type: actionTypes.EDIT_USER_FAILED,\r\n});\r\n\r\nexport const fetchAllDoctors = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_ALL_DOCTORS_START });\r\n\r\n            const response = await getTopDoctorsService();\r\n            console.log(\"API Response:\", response);\r\n            console.log(\"API Response.data:\", response.data);\r\n\r\n            if (response && response.data.errCode === 0) {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_DOCTORS_SUCCESS,\r\n                    doctors: response.data.data\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: actionTypes.FETCH_ALL_DOCTORS_FAILED\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Fetch doctors error:', error);\r\n            dispatch({\r\n                type: actionTypes.FETCH_ALL_DOCTORS_FAILED\r\n            });\r\n        }\r\n    };\r\n};\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\store\\actions\\userActions.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\System\\ModalUser.js",["974"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\services\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\services\\adminService.js",["975"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\axios.js",["976"],"import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true,\r\n    maxContentLength: 16 * 1024 * 1024,\r\n    maxBodyLength: 16 * 1024 * 1024,\r\n    timeout: 30000\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    (config) => {\r\n        if (config.data && config.data.image) {\r\n            config.timeout = 120000; // 2 phút cho requests có ảnh\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n    const error = new Error();\r\n    error.httpStatusCode = httpStatusCode;\r\n    error.statusCode = statusCode;\r\n    error.errorMessage = errorMessage;\r\n    error.problems = problems;\r\n    error.errorCode = errorCode + \"\";\r\n    return error;\r\n};\r\n\r\nexport const isSuccessStatusCode = (s) => {\r\n    // May be string or number\r\n    const statusType = typeof s;\r\n    return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n};\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n            return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n        }\r\n\r\n        // Return direct data to callback\r\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n            return data['d'];\r\n        }\r\n        // Handle special case\r\n        if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n            return null;\r\n        }\r\n        return response.data;\r\n    },\r\n    (error) => {\r\n        const { response } = error;\r\n        if (response == null) {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const { data } = response;\r\n\r\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n            return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n        }\r\n\r\n        if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n            return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n        }\r\n\r\n        return Promise.reject(createError(response.status));\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\config.js",["977"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\System\\MarkdownEditor.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\Patient\\Doctor\\DetailDoctor.js",["978"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { languages } from \"../../../utils/constant\";\r\nimport \"./DetailDoctor.scss\";\r\nimport { getDoctorDetailService } from \"../../../services/userServices\";\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nclass DetailDoctor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailDoctor: {},\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(\"check props\", this.props.match.params.id);\r\n        if (\r\n            this.props.match &&\r\n            this.props.match.params &&\r\n            this.props.match.params.id\r\n        ) {\r\n            try {\r\n                const res = await getDoctorDetailService(\r\n                    this.props.match.params.id\r\n                );\r\n                console.log(\"check res\", res);\r\n                if (res && res.data.errCode === 0) {\r\n                    this.setState({\r\n                        detailDoctor: res.data.data,\r\n                        loading: false,\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                console.error(\"Error fetching doctor details:\", e);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { detailDoctor, loading } = this.state;\r\n        const { language } = this.props;\r\n        console.log(\"check loading\", loading);\r\n        console.log(\"check detailDoctor\", detailDoctor);\r\n        if (loading) {\r\n            return <div className=\"loading\">Loading...</div>;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"home-header-container\">\r\n                    <div className=\"home-header-content mt\">\r\n                        <div className=\"left-content\">\r\n                            <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n                            <div className=\"header-logo\"></div>\r\n                        </div>\r\n                        <div className=\"center-content\">\r\n                            <div className=\"child-content\">\r\n                                <b>\r\n                                    <FormattedMessage id=\"home-header.speciality\" />\r\n                                </b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.search-doctor-speciality\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b>\r\n                                    <FormattedMessage id=\"home-header.health-facility\" />\r\n                                </b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.choose-hospital\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b>\r\n                                    <FormattedMessage id=\"home-header.doctor\" />\r\n                                </b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.choose-good-doctor\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b>\r\n                                    <FormattedMessage id=\"home-header.examination-package\" />\r\n                                </b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.general-health-check\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-content\">\r\n                            <div className=\"support\">\r\n                                <button type=\"button\" className=\"btn btn-info\">\r\n                                    <FormattedMessage id=\"home-header.support\" />\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"language-vi active\">VN</div>\r\n                            <div className=\"language-en\">EN</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"doctor-detail-container mt-50\">\r\n                    <div className=\"intro-doctor\">\r\n                        <div className=\"content-left\">\r\n                            <img src={detailDoctor.image} alt=\"Doctor\" />\r\n                        </div>\r\n                        <div className=\"content-right\">\r\n                            <div className=\"up\">\r\n                                {language === languages.VI\r\n                                    ? `${detailDoctor.lastName} ${detailDoctor.firstName}`\r\n                                    : `${detailDoctor.firstName} ${detailDoctor.lastName}`}\r\n                            </div>\r\n                            <div className=\"down\">\r\n                                {detailDoctor.doctorMarkdown && (\r\n                                    <span>\r\n                                        {\r\n                                            detailDoctor.doctorMarkdown\r\n                                                .description\r\n                                        }\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"schedule-doctor\">\r\n                        {/* Add schedule component here later */}\r\n                    </div>\r\n\r\n                    <div className=\"detail-info-doctor\">\r\n                        {detailDoctor.doctorMarkdown && (\r\n                            <div\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: detailDoctor.doctorMarkdown\r\n                                        .contentHTML,\r\n                                }}\r\n                            ></div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\5.font-end-react-fullstack\\React - Copy\\src\\containers\\HomePage\\HomeHeader.js",["979"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./HomeHeader.scss\";\r\nimport Slider from \"react-slick\";\r\nimport { FormattedMessage } from 'react-intl';\r\n// import HomeHeader from \"../../components/HomeHeader\";\r\n\r\nclass Headers extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"home-header-container\">\r\n                    <div className=\"home-header-content mt\">\r\n                        <div className=\"left-content\">\r\n                            <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n                            <div className=\"header-logo\"></div>\r\n                        </div>\r\n                        <div className=\"center-content\">\r\n                            <div className=\"child-content\">\r\n                                <b><FormattedMessage id=\"home-header.speciality\" /></b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.search-doctor-speciality\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b><FormattedMessage id=\"home-header.health-facility\" /></b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.choose-hospital\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b><FormattedMessage id=\"home-header.doctor\" /></b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.choose-good-doctor\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"child-content\">\r\n                                <b><FormattedMessage id=\"home-header.examination-package\" /></b>\r\n                                <div className=\"sub-title\">\r\n                                    <FormattedMessage id=\"home-header.general-health-check\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right-content\">\r\n                            <div className=\"support\">\r\n                                <button type=\"button\" className=\"btn btn-info\">\r\n                                    <FormattedMessage id=\"home-header.support\" />\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"language-vi active\">VN</div>\r\n                            <div className=\"language-en\">EN</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-header-banner\">\r\n                    <div className=\"title1\"><FormattedMessage id=\"home-header.platform\" /></div>\r\n                    <div className=\"title2\"><FormattedMessage id=\"home-header.care\" /></div>\r\n                    <div className=\"search\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                        <input type=\"text\" placeholder=\"Tìm kiếm\" />\r\n                    </div>\r\n                    <div className=\"services\">\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-stethoscope\"></i>\r\n                            <p><FormattedMessage id=\"home-header.specialist\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-phone\"></i>\r\n                            <p><FormattedMessage id=\"home-header.remote\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-notes-medical\"></i>\r\n                            <p><FormattedMessage id=\"home-header.general\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-vial\"></i>\r\n                            <p><FormattedMessage id=\"home-header.test\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-heart\"></i>\r\n                            <p><FormattedMessage id=\"home-header.mental\" /></p>\r\n                        </div>\r\n                        <div className=\"service-item\">\r\n                            <i className=\"fas fa-heart\"></i>\r\n                            <p><FormattedMessage id=\"home-header.dental\" /></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Headers);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\index.js",[],["980","981"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\serviceWorker.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\redux.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\App.js",["982"],"import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport { history } from \"../redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport CustomScrollbars from \"../components/CustomScrollbars\";\r\nimport {\r\n    userIsAuthenticated,\r\n    userIsNotAuthenticated,\r\n} from \"../hoc/authentication\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { path } from \"../utils\";\r\nimport Home from \"../routes/Home\";\r\n// import Login from '../routes/Login';\r\nimport Login from \"./Auth/Login\";\r\nimport System from \"../routes/System\";\r\nimport Profile from \"../routes/Profile\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\nimport Event from \"./Event/Event\";\r\nimport EventDetails from \"./Event/event-details\";\r\nimport EventRegistration from \"./EventRegistration/index\"\r\nimport EventRegistrationDetails from \"./EventRegistrationDetails/EventRegistrationDetails\"\r\nimport Recruitment from \"./Recruitment/index\";\r\nimport Contact from \"./Contact/Contact\";\r\nimport ForgotPassword from \"./Auth/Forgot_Password\";\r\nimport HelpRequest from \"./HelpRequest/index\";\r\nimport HelpRequestList from \"./HelpRequest/HelpRequestList\";\r\nclass App extends Component {\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars\r\n                                style={{ height: \"100vh\", width: \"100vw\" }}\r\n                            >\r\n                                <Switch>\r\n                                    <Route\r\n                                        path={path.HOME}\r\n                                        exact\r\n                                        component={Home}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.LOGIN}\r\n                                        component={userIsNotAuthenticated(\r\n                                            Login\r\n                                        )}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.SYSTEM}\r\n                                        component={userIsAuthenticated(System)}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.HOMEPAGE}\r\n                                        component={HomePage}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.EVENT}\r\n                                        component={Event}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.EVENT_DETAIL}\r\n                                        component={EventDetails}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.EVENT_REGISTRATION}\r\n                                        component={EventRegistration}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.EVENT_REGISTRATION_DETAILS}\r\n                                        component={EventRegistrationDetails}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.USER_PROFILE}\r\n                                        component={Profile}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.RECRUITMENT}\r\n                                        component={Recruitment}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.CONTACT}\r\n                                        component={Contact}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.FORGOT_PASSWORD}\r\n                                        component={ForgotPassword}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.HELP_REQUEST}\r\n                                        component={HelpRequest}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.HELP_REQUEST_LIST}\r\n                                        component={HelpRequestList}\r\n                                    />\r\n                         \r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        <ToastContainer\r\n                            position=\"top-right\"\r\n                            autoClose={5000}\r\n                            hideProgressBar={false}\r\n                            newestOnTop={false}\r\n                            closeOnClick\r\n                            rtl={false}\r\n                            pauseOnFocusLoss\r\n                            draggable\r\n                            pauseOnHover\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\hoc\\authentication.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\CustomToast.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\routes\\Home.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\routes\\System.js",["983","984"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport UserManage from \"../containers/System/UserManage\";\r\nimport UserRedux from \"../containers/System/UserRedux\";\r\nimport UserDisplay from \"../containers/System/UserDisplay\";\r\nimport EventManage from \"../containers/System/EventManage\";\r\nimport EventDescription from \"../containers/System/EventDescription\";\r\nimport UserDescription from \"../containers/System/UserDescription\";\r\nimport Header from \"../containers/Header/Header\";\r\nimport MarkdownEditor from \"../containers/System/MarkdownEditor\";\r\nimport EventDisplay from \"../containers/System/EventDisplay\";\r\nimport EventRegistrationManage from \"../containers/System/EventRegistrationManage\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass System extends Component {\r\n    componentDidMount() {\r\n        const { userInfo, history } = this.props;\r\n        // Kiểm tra nếu không phải là Admin thì chuyển hướng và hiển thị thông báo\r\n        if (userInfo && userInfo.roleId !== 'R1') {\r\n            history.push('/home');\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Kiểm tra thay đổi trong userInfo hoặc trạng thái đăng nhập\r\n        const { userInfo, isLoggedIn, history } = this.props;\r\n        \r\n        // Nếu vừa đăng nhập hoặc thông tin người dùng vừa thay đổi\r\n        if (isLoggedIn !== prevProps.isLoggedIn || userInfo !== prevProps.userInfo) {\r\n            // Kiểm tra lại quyền truy cập\r\n            if (!isLoggedIn || (userInfo && userInfo.roleId !== 'R1')) {\r\n                history.push('/home');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { systemMenuPath, isLoggedIn, userInfo } = this.props;\r\n        console.log(isLoggedIn)\r\n\r\n        \r\n        // Chuyển hướng về trang chủ nếu không phải là admin\r\n        if (!isLoggedIn) {\r\n            return <Redirect to=\"/home\" />;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {isLoggedIn && <Header />}\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route path=\"/system/user-manage\" component={UserManage} />\r\n                            <Route\r\n                                path=\"/system/user-redux\"\r\n                                component={UserRedux}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/user-display\"\r\n                                component={UserDisplay}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/event-manage\"\r\n                                component={EventManage}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/event-description\"\r\n                                component={EventDescription}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/markdown-editor\"\r\n                                component={MarkdownEditor}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/user-description\"\r\n                                component={UserDescription}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/event-display\"\r\n                                component={EventDisplay}\r\n                            />\r\n                            <Route\r\n                                path=\"/system/event-registration/:id\"\r\n                                component={EventRegistrationManage}\r\n                            />\r\n                            <Route\r\n                                component={() => {\r\n                                    return <Redirect to={systemMenuPath} />;\r\n                                }}\r\n                            />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInforr,  // Lấy thông tin người dùng từ Redux store\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Auth\\Login.js",["985","986","987","988","989","990","991"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport * as actions from \"../../store/actions\";\r\nimport \"./Login.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { languages } from \"../../utils\";\r\nimport { Form, Button, Container, Row, Col, Card, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faFacebookF, faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faEnvelope, faLock, faEye, faEyeSlash, faExclamationTriangle, faLeaf, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { handleLoginApi } from \"../../services/userServices\";\r\nimport logoImg from \"../../assets/images/logos/logo.png\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: \"\",\r\n            password: \"\",\r\n            errMessage: \"\",\r\n            showPassword: false,\r\n            isLoading: false,\r\n            rememberMe: false,\r\n        };\r\n    }\r\n\r\n    handleOnChangeUsername = (event) => {\r\n        this.setState({\r\n            userName: event.target.value,\r\n            errMessage: \"\",\r\n        });\r\n    };\r\n\r\n    handleOnChangePassword = (event) => {\r\n        this.setState({\r\n            password: event.target.value,\r\n            errMessage: \"\",\r\n        });\r\n    };\r\n\r\n    toggleShowPassword = () => {\r\n        this.setState({\r\n            showPassword: !this.state.showPassword,\r\n        });\r\n    };\r\n\r\n    toggleRememberMe = () => {\r\n        this.setState({\r\n            rememberMe: !this.state.rememberMe,\r\n        });\r\n    };\r\n\r\n    handleLogin = async () => {\r\n        this.setState({\r\n            errMessage: \"\",\r\n            isLoading: true,\r\n        });\r\n\r\n        // Kiểm tra form trước khi gửi\r\n        if (!this.state.userName || !this.state.password) {\r\n            this.setState({\r\n                errMessage: \"Vui lòng nhập email và mật khẩu\",\r\n                isLoading: false,\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let response = await handleLoginApi(this.state.userName, this.state.password);\r\n\r\n            this.setState({ isLoading: false });\r\n\r\n            if (response.data.errCode !== 0) {\r\n                this.setState({\r\n                    errMessage: response.data.message || \"Đăng nhập không thành công\",\r\n                });\r\n            } else {\r\n                this.props.userLoginSuccess(response.data.user);\r\n            }\r\n        } catch (error) {\r\n            this.setState({ isLoading: false });\r\n\r\n            if (error.response && error.response.data) {\r\n                this.setState({\r\n                    errMessage: error.response.data.message,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    errMessage: \"Không thể kết nối đến máy chủ\",\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            this.handleLogin();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { userName, password, errMessage, showPassword, isLoading, rememberMe } = this.state;\r\n\r\n        return (\r\n            <div className=\"login-page d-flex align-items-center min-vh-100\">\r\n                <div className=\"login-bg-shape\"></div>\r\n                <div className=\"login-wave\"></div>\r\n\r\n                <Container>\r\n                    <Row className=\"justify-content-center g-0\">\r\n                        <Col lg={12} className=\"shadow-lg rounded-3 overflow-hidden\">\r\n                            <Row className=\"g-0 h-100\">\r\n                                {/* Cột hình ảnh và thông điệp */}\r\n                                <Col lg={6} className=\"d-none d-lg-block p-0\">\r\n                                    <div className=\"login-welcome h-100 d-flex flex-column justify-content-center p-5 text-white\">\r\n                                        <div className=\"mb-4\">\r\n                                            <img src={logoImg} alt=\"CTES Logo\" className=\"login-logo\" />\r\n                                        </div>\r\n                                        <h2 className=\"welcome-heading\">Chào mừng trở lại!</h2>\r\n                                        <p className=\"welcome-text opacity-75\">\r\n                                            Đăng nhập để tham gia các sự kiện môi trường cùng CTES và theo dõi các hoạt động bảo vệ môi trường mới nhất\r\n                                        </p>\r\n                                        <div className=\"mt-4 welcome-features\">\r\n                                            <div className=\"feature-item mb-3\">\r\n                                                <span className=\"feature-icon\">\r\n                                                    <FontAwesomeIcon icon={faLeaf} />\r\n                                                </span>\r\n                                                <span>Tham gia các sự kiện môi trường</span>\r\n                                            </div>\r\n                                            <div className=\"feature-item mb-3\">\r\n                                                <span className=\"feature-icon\">\r\n                                                    <FontAwesomeIcon icon={faLeaf} />\r\n                                                </span>\r\n                                                <span>Đóng góp ý tưởng bảo vệ môi trường</span>\r\n                                            </div>\r\n                                            <div className=\"feature-item\">\r\n                                                <span className=\"feature-icon\">\r\n                                                    <FontAwesomeIcon icon={faLeaf} />\r\n                                                </span>\r\n                                                <span>Kết nối với cộng đồng yêu môi trường</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                {/* Cột form đăng nhập */}\r\n                                <Col lg={6} className=\"bg-white p-0\">\r\n                                    <div className=\"login-form-container p-4 p-md-5 h-100 d-flex flex-column justify-content-center\">\r\n                                        <div className=\"text-center mb-4 d-lg-none\">\r\n                                            <img src={logoImg} alt=\"CTES Logo\" className=\"login-logo-mobile mb-3\" />\r\n                                        </div>\r\n\r\n                                        <h3 className=\"card-title fw-bold text-center mb-4\">\r\n                                            <FontAwesomeIcon icon={faSignInAlt} className=\"me-2 text-primary\" />\r\n                                            Đăng nhập tài khoản\r\n                                        </h3>\r\n\r\n                                        {errMessage && (\r\n                                            <div className=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\r\n                                                <FontAwesomeIcon icon={faExclamationTriangle} className=\"me-2 flex-shrink-0\" />\r\n                                                <div>{errMessage}</div>\r\n                                            </div>\r\n                                        )}\r\n\r\n                                        <Form className=\"login-form\">\r\n                                            <Form.Group className=\"mb-4\" controlId=\"formEmail\">\r\n                                                <Form.Label className=\"fw-semibold\">Email đăng nhập</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Text className=\"bg-light border-end-0\">\r\n                                                        <FontAwesomeIcon icon={faEnvelope} className=\"text-primary\" />\r\n                                                    </InputGroup.Text>\r\n                                                    <Form.Control\r\n                                                        type=\"email\"\r\n                                                        placeholder=\"Nhập email của bạn\"\r\n                                                        value={userName}\r\n                                                        onChange={this.handleOnChangeUsername}\r\n                                                        onKeyDown={this.handleKeyDown}\r\n                                                        className=\"py-2 border-start-0\"\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group className=\"mb-4\" controlId=\"formPassword\">\r\n                                                <Form.Label className=\"fw-semibold\">Mật khẩu</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Text className=\"bg-light border-end-0\">\r\n                                                        <FontAwesomeIcon icon={faLock} className=\"text-primary\" />\r\n                                                    </InputGroup.Text>\r\n                                                    <Form.Control\r\n                                                        type={showPassword ? \"text\" : \"password\"}\r\n                                                        placeholder=\"Nhập mật khẩu của bạn\"\r\n                                                        value={password}\r\n                                                        onChange={this.handleOnChangePassword}\r\n                                                        onKeyDown={this.handleKeyDown}\r\n                                                        className=\"py-2 border-start-0 border-end-0\"\r\n                                                    />\r\n                                                    <Button variant=\"light\" onClick={this.toggleShowPassword} className=\"border border-start-0\">\r\n                                                        <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} className=\"text-secondary\" />\r\n                                                    </Button>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n\r\n                                            <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                                                <Form.Check\r\n                                                    type=\"checkbox\"\r\n                                                    id=\"rememberMe\"\r\n                                                    label=\"Ghi nhớ đăng nhập\"\r\n                                                    checked={rememberMe}\r\n                                                    onChange={this.toggleRememberMe}\r\n                                                    className=\"user-select-none\"\r\n                                                />\r\n                                                <Link to=\"/forgot-password\" className=\"forgot-link text-decoration-none\">\r\n                                                    Quên mật khẩu?\r\n                                                </Link>\r\n                                            </div>\r\n\r\n                                            <Button\r\n                                                variant=\"primary\"\r\n                                                className=\"login-btn w-100 py-2 mb-4 d-flex align-items-center justify-content-center\"\r\n                                                onClick={this.handleLogin}\r\n                                                disabled={isLoading}\r\n                                            >\r\n                                                {isLoading ? (\r\n                                                    <>\r\n                                                        <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" className=\"me-2\" />\r\n                                                        Đang xử lý...\r\n                                                    </>\r\n                                                ) : (\r\n                                                    \"Đăng nhập\"\r\n                                                )}\r\n                                            </Button>\r\n\r\n                                            <div className=\"text-center mb-4\">\r\n                                                <p className=\"mb-0\">\r\n                                                    Chưa có tài khoản?{\" \"}\r\n                                                    <a href=\"/register\" className=\"register-link text-decoration-none fw-semibold\">\r\n                                                        Liên hệ với BQL để nhận tài khoản\r\n                                                    </a>\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            {/* <div className=\"separator\">\r\n                                                <span>Hoặc đăng nhập với</span>\r\n                                            </div>\r\n\r\n                                            <div className=\"social-buttons\">\r\n                                                <Button variant=\"outline-primary\" className=\"social-btn\">\r\n                                                    <FontAwesomeIcon icon={faFacebookF} />\r\n                                                </Button>\r\n                                                <Button variant=\"outline-info\" className=\"social-btn\">\r\n                                                    <FontAwesomeIcon icon={faTwitter} />\r\n                                                </Button>\r\n                                                <Button variant=\"outline-danger\" className=\"social-btn\">\r\n                                                    <FontAwesomeIcon icon={faGoogle} />\r\n                                                </Button>\r\n                                                <Button variant=\"outline-dark\" className=\"social-btn\">\r\n                                                    <FontAwesomeIcon icon={faGithub} />\r\n                                                </Button>\r\n                                            </div> */}\r\n                                        </Form>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n        userLoginSuccess: (userInfor) => dispatch(actions.userLoginSuccess(userInfor)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Header\\Header.js",["992"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\reducers\\rootReducer.js",["993"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\HomePage.js",["994","995","996","997","998","999"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomeHeader from \"./HomeHeader\";\r\nimport Speciality from \"./Section/Speciality\";\r\nimport Medical from \"./Section/Medical\";\r\nimport FeaturedDoctors from \"./Section/FeaturedDoctors\";\r\nimport Manual from \"./Section/Manual\";\r\nimport Header from \"../../components/Header\";\r\nimport HomeSlider from \"./Section/SliderSection\";\r\nimport Event from \"./Section/EventSection\";\r\nimport Campus from \"./Section/CampusSection\";\r\nimport Course from \"./Section/CourseSection\";\r\nimport Footer from \"../../components/Footer/FooterTwo\";\r\nimport Blogs from \"./Section/BlogSection\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"../../assets/scss/main.scss\";\r\nclass HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header parentMenu=\"home\" topbarEnable=\"enable\" />\r\n                <HomeSlider />\r\n                <Event />\r\n                <Campus />\r\n                <Course/>\r\n                {/* <Blogs /> */}\r\n                <Footer />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Navigator.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\constant.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\reducers\\adminReducer.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\UserRedux.js",["1000","1001","1002","1003","1004","1005","1006"],"import React, { Component } from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { languages } from \"../../utils/constant\";\r\nimport \"./UserRedux.scss\";\r\nimport * as actions from \"../../../src/store/actions\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { create } from \"lodash\";\r\nimport { createUser } from \"../../../src/services/userServices\";\r\nimport {\r\n    getAllUsers,\r\n    deleteUser,\r\n    updateUser,\r\n} from \"../../services/userServices\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nclass UserRedux extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editFormRef = React.createRef();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            phoneNumber: \"\",\r\n            genderCode: \"\",\r\n            roleCode: \"\",\r\n            positionCode: \"\",\r\n            image: \"\",\r\n            showPassword: false,\r\n            previewImgURL: \"\", // Thêm state mới\r\n            isOpen: false, // Để control lightbox preview\r\n        };\r\n    }\r\n\r\n    // gọi hàm bên redux\r\n    async componentDidMount() {}\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        // Copy state hiện tại\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState({\r\n            ...copyState,\r\n        });\r\n    };\r\n\r\n    handleOnChangeImage = async (event) => {\r\n        let data = event.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await this.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file);\r\n            this.setState({\r\n                previewImgURL: objectUrl,\r\n                image: base64,\r\n            });\r\n        }\r\n    };\r\n\r\n    getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    };\r\n\r\n    openPreviewImage = () => {\r\n        if (!this.state.previewImgURL) return;\r\n        this.setState({\r\n            isOpen: true,\r\n        });\r\n    };\r\n\r\n    handleSaveUser = async () => {\r\n        let isValid = this.checkValidateInput(); // Uncomment validation\r\n        if (!isValid) return;\r\n\r\n        try {\r\n            let response = await createUser({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                address: this.state.address,\r\n                phoneNumber: this.state.phoneNumber,\r\n                genderCode: this.state.genderCode,\r\n                roleCode: this.state.roleCode,\r\n                positionCode: this.state.positionCode,\r\n                image: this.state.image,\r\n            });\r\n\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(\"Create new user successfully!\");\r\n                this.setState({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    address: \"\",\r\n                    phoneNumber: \"\",\r\n                    genderCode: \"\",\r\n                    roleCode: \"\",\r\n                    positionCode: \"\",\r\n                    image: \"\",\r\n                    previewImgURL: \"\",\r\n                });\r\n            } else {\r\n                toast.error(response.data.errMessage);\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Something went wrong...\");\r\n            console.error(\"Error creating user:\", error);\r\n        }\r\n    };\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        const requiredFields = {\r\n            email: \"Email\",\r\n            password: \"Password\",\r\n            firstName: \"First name\",\r\n            lastName: \"Last name\",\r\n            genderCode: \"Gender\",\r\n            roleCode: \"Role\",\r\n            positionCode: \"Position\",\r\n        };\r\n\r\n        for (let field in requiredFields) {\r\n            if (!this.state[field]) {\r\n                isValid = false;\r\n                toast.error(\r\n                    `Missing required parameter: ${requiredFields[field]}`\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Email validation\r\n        if (isValid && !/\\S+@\\S+\\.\\S+/.test(this.state.email)) {\r\n            isValid = false;\r\n            toast.error(\"Invalid email format\");\r\n        }\r\n\r\n        // Password validation (at least 6 characters)\r\n        if (isValid && this.state.password.length < 6) {\r\n            isValid = false;\r\n            toast.error(\"Password must be at least 6 characters\");\r\n        }\r\n\r\n        // Phone number validation (if provided)\r\n        if (\r\n            isValid &&\r\n            this.state.phoneNumber &&\r\n            !/^\\d{10,11}$/.test(this.state.phoneNumber)\r\n        ) {\r\n            isValid = false;\r\n            toast.error(\"Invalid phone number format\");\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n    render() {\r\n        console.log(\"check state\", this.state);\r\n        return (\r\n            <div className=\"user-redux-container\">\r\n                <div className=\"container-fluid px-5\">\r\n                    <div className=\"title text-center\">\r\n                        <h2>User Management</h2>\r\n                    </div>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                value={this.state.email}\r\n                                onChange={(event) =>\r\n                                    this.handleOnChangeInput(event, \"email\")\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">Password</label>\r\n                            <div className=\"input-group\">\r\n                                <input\r\n                                    type={\r\n                                        this.state.showPassword\r\n                                            ? \"text\"\r\n                                            : \"password\"\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                    value={this.state.password}\r\n                                    onChange={(event) =>\r\n                                        this.handleOnChangeInput(\r\n                                            event,\r\n                                            \"password\"\r\n                                        )\r\n                                    }\r\n                                />\r\n                                <span\r\n                                    className=\"input-group-text\"\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={() =>\r\n                                        this.setState({\r\n                                            showPassword:\r\n                                                !this.state.showPassword,\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    <i\r\n                                        className={\r\n                                            this.state.showPassword\r\n                                                ? \"fas fa-eye-slash\"\r\n                                                : \"fas fa-eye\"\r\n                                        }\r\n                                    ></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">First Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.firstName}\r\n                                onChange={(event) =>\r\n                                    this.handleOnChangeInput(event, \"firstName\")\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">Last Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.lastName}\r\n                                onChange={(event) =>\r\n                                    this.handleOnChangeInput(event, \"lastName\")\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-12\">\r\n                            <label className=\"form-label\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.address}\r\n                                onChange={(event) =>\r\n                                    this.handleOnChangeInput(event, \"address\")\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">Phone Number</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.phoneNumber}\r\n                                onChange={(event) =>\r\n                                    this.handleOnChangeInput(\r\n                                        event,\r\n                                        \"phoneNumber\"\r\n                                    )\r\n                                }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">Gender</label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                value={this.state.genderCode}\r\n                                onChange={(event) =>\r\n                                    this.handleOnChangeInput(\r\n                                        event,\r\n                                        \"genderCode\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <option value=\"\">Choose gender...</option>\r\n                                <option value=\"M\">Male</option>\r\n                                <option value=\"F\">Female</option>\r\n                                <option value=\"O\">Other</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">Role</label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                value={this.state.roleCode}\r\n                                onChange={(event) =>\r\n                                    this.handleOnChangeInput(event, \"roleCode\")\r\n                                }\r\n                            >\r\n                                <option value=\"\">Choose role...</option>\r\n                                <option value=\"R1\">Admin</option>\r\n                                <option value=\"R2\">Management</option>\r\n                                <option value=\"R3\">Volunteer</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">Position</label>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                value={this.state.positionCode}\r\n                                onChange={(event) =>\r\n                                    this.handleOnChangeInput(\r\n                                        event,\r\n                                        \"positionCode\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <option value=\"\">Choose position...</option>\r\n                                <option value=\"P1\">Captain</option>\r\n                                <option value=\"P2\">Management</option>\r\n                                <option value=\"P3\">Volunteer</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\">Image</label>\r\n                            <div className=\"preview-img-container\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className=\"form-control mb-3\"\r\n                                    onChange={(event) =>\r\n                                        this.handleOnChangeImage(event)\r\n                                    }\r\n                                    accept=\"image/*\"\r\n                                />\r\n                                {this.state.previewImgURL && (\r\n                                    <div\r\n                                        className=\"preview-image\"\r\n                                        style={{\r\n                                            backgroundImage: `url(${this.state.previewImgURL})`,\r\n                                        }}\r\n                                        onClick={() => this.openPreviewImage()}\r\n                                    ></div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                onClick={() => this.handleSaveUser()}\r\n                            >\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    {this.state.isOpen === true && (\r\n                        <Lightbox\r\n                            mainSrc={this.state.previewImgURL}\r\n                            onCloseRequest={() =>\r\n                                this.setState({ isOpen: false })\r\n                            }\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\userServices.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\CommonUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\ToastUtil.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\CardDoctor.js",["1007"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Manuals.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\userActions.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\appActions.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\store\\actions\\adminActions.js",["1008"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Header\\index.js",["1009","1010","1011","1012","1013","1014"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\n// Thêm import các service cho thông báo\r\nimport { getUserNotifications, markNotificationAsRead } from \"../../services/notificationServices\";\r\n\r\nimport MenuItems from \"./MenuItems\";\r\nimport { languages } from \"../../utils/constant\";\r\nimport normalLogo from \"../../assets/images/logos/logo.png\";\r\nimport stickyLogo from \"../../assets/images/logos/logo.png\";\r\nimport \"./index.scss\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuOpen: false,\r\n            isVisible: false,\r\n            userMenuOpen: false,\r\n            // Thêm state mới cho thông báo\r\n            notificationMenuOpen: false,\r\n            notifications: [],\r\n            unreadCount: 0,\r\n            isLoadingNotifications: false,\r\n            expandedNotificationId: null, // Thêm state mới để theo dõi thông báo đang mở rộng\r\n        };\r\n\r\n        // Tạo ref cho dropdown để xử lý click outside\r\n        this.dropdownRef = React.createRef();\r\n        // Thêm ref cho dropdown thông báo\r\n        this.notificationRef = React.createRef();\r\n    }\r\n\r\n    // ===== Lifecycle Methods =====\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.toggleVisibility);\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n\r\n        // Nếu đã đăng nhập, tải thông báo\r\n        if (this.props.isLoggedIn && this.props.userInforr?.id) {\r\n            this.loadNotifications();\r\n        }\r\n    }\r\n\r\n    // Thêm để cập nhật thông báo khi đăng nhập\r\n    componentDidUpdate(prevProps) {\r\n        if ((!prevProps.isLoggedIn && this.props.isLoggedIn) || (prevProps.userInforr?.id !== this.props.userInforr?.id && this.props.userInforr?.id)) {\r\n            this.loadNotifications();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.toggleVisibility);\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    // ===== Notification Methods =====\r\n    // Tải danh sách thông báo\r\n    loadNotifications = async () => {\r\n        if (!this.props.userInforr?.id) return;\r\n        console.log(\"Loading notifications for user ID:\", this.props.userInforr.id);\r\n        const userInforr = this.props.userInforr;\r\n        console.log(\"User ID:\", userInforr);\r\n        this.setState({ isLoadingNotifications: true });\r\n        try {\r\n            const response = await getUserNotifications(userInforr);\r\n\r\n            if (response && response.data.errCode === 0) {\r\n                const notifications = response.data.data;\r\n                console.log(\"Notifications:\", notifications);\r\n                console.log(\"Notification clicked:\", notifications[0].is_read);\r\n\r\n                // Đếm số thông báo chưa đọc\r\n                const unreadCount = notifications.filter((n) => !n.is_read).length;\r\n                console.log(\"Unread Count:\", unreadCount);\r\n                this.setState({\r\n                    notifications,\r\n                    unreadCount,\r\n                    isLoadingNotifications: false,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi tải thông báo:\", error);\r\n            this.setState({ isLoadingNotifications: false });\r\n        }\r\n    };\r\n\r\n    // Xử lý khi click vào thông báo\r\n    handleNotificationClick = async (notification, event) => {\r\n        // Nếu đang click vào nút xem thêm/thu gọn, không thực hiện các thao tác khác\r\n        if (event.target.classList.contains(\"expand-toggle\")) {\r\n            return;\r\n        }\r\n\r\n        // Nếu chưa đọc, đánh dấu là đã đọc\r\n        if (!notification.is_read) {\r\n            try {\r\n                const data = {\r\n                    notificationId: notification.id,\r\n                    userId: this.props.userInforr.id,\r\n                };\r\n                console.log(\"Marking notification as read:\", data);\r\n                const response = await markNotificationAsRead(data);\r\n                console.log(\"Phản hồi từ sever:\", response);\r\n                if (response && response.data.errCode === 0) {\r\n                    // Cập nhật state\r\n                    this.setState((prevState) => ({\r\n                        notifications: prevState.notifications.map((n) => (n.id === notification.id ? { ...n, is_read: true } : n)),\r\n                        unreadCount: Math.max(0, prevState.unreadCount - 1),\r\n                    }));\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi đánh dấu thông báo đã đọc:\", error);\r\n            }\r\n        }\r\n\r\n        // Đóng dropdown thông báo\r\n        this.setState({ notificationMenuOpen: false });\r\n\r\n        // Điều hướng nếu có link\r\n        if (notification.link) {\r\n            window.location.href = notification.link;\r\n        }\r\n    };\r\n\r\n    // Định dạng thời gian thông báo\r\n    formatNotificationTime = (timestamp) => {\r\n        const date = new Date(timestamp);\r\n        const now = new Date();\r\n        const diffInSeconds = Math.floor((now - date) / 1000);\r\n\r\n        if (diffInSeconds < 60) {\r\n            return \"Vừa xong\";\r\n        } else if (diffInSeconds < 3600) {\r\n            return `${Math.floor(diffInSeconds / 60)} phút trước`;\r\n        } else if (diffInSeconds < 86400) {\r\n            return `${Math.floor(diffInSeconds / 3600)} giờ trước`;\r\n        } else {\r\n            return date.toLocaleDateString(\"vi-VN\");\r\n        }\r\n    };\r\n\r\n    // ===== Header Visibility Controls =====\r\n    toggleVisibility = () => {\r\n        // Hiển thị sticky header sau khi cuộn 100px\r\n        if (window.pageYOffset > 100) {\r\n            this.setState({ isVisible: true });\r\n        } else {\r\n            this.setState({ isVisible: false });\r\n        }\r\n    };\r\n\r\n    // ===== Menu Controls =====\r\n    toggleMenu = () => {\r\n        this.setState((prevState) => ({\r\n            menuOpen: !prevState.menuOpen,\r\n        }));\r\n    };\r\n\r\n    // ===== User Menu Controls =====\r\n    toggleUserMenu = () => {\r\n        this.setState((prevState) => ({\r\n            userMenuOpen: !prevState.userMenuOpen,\r\n        }));\r\n    };\r\n\r\n    // Toggle thông báo menu\r\n    toggleNotificationMenu = () => {\r\n        this.setState((prevState) => ({\r\n            notificationMenuOpen: !prevState.notificationMenuOpen,\r\n        }));\r\n    };\r\n\r\n    handleClickOutside = (event) => {\r\n        // Đóng menu dropdown khi click ra ngoài\r\n        if (this.dropdownRef && this.dropdownRef.current && !this.dropdownRef.current.contains(event.target)) {\r\n            this.setState({ userMenuOpen: false });\r\n        }\r\n\r\n        // Đóng notification dropdown khi click ra ngoài\r\n        if (this.notificationRef && this.notificationRef.current && !this.notificationRef.current.contains(event.target)) {\r\n            this.setState({ notificationMenuOpen: false });\r\n        }\r\n    };\r\n\r\n    // Thêm hàm mới để toggle xem thêm/thu gọn thông báo\r\n    toggleNotificationExpand = (notificationId, event) => {\r\n        event.stopPropagation(); // Ngăn event bubbling lên đến notification item\r\n\r\n        this.setState((prevState) => ({\r\n            expandedNotificationId: prevState.expandedNotificationId === notificationId ? null : notificationId,\r\n        }));\r\n    };\r\n\r\n    // ===== Render Method =====\r\n    render() {\r\n        const { menuOpen, isVisible, userMenuOpen, notificationMenuOpen, notifications, unreadCount, isLoadingNotifications, expandedNotificationId } = this.state;\r\n\r\n        const { topbarEnable, headerClass, parentMenu, headerNormalLogo, headerStickyLogo, isLoggedIn, userInforr, language } = this.props;\r\n\r\n        return (\r\n            <header id=\"react-header\" className={headerClass ? headerClass : \"react-header react-header-three\"}>\r\n                <div className={isVisible ? \"header-area react-sticky\" : \"header-area\"}>\r\n                    {/* Topbar Area - Không thay đổi */}\r\n                    {topbarEnable && (\r\n                        <div className=\"topbar-area style1\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    {/* Contact Information */}\r\n                                    <div className=\"col-lg-7\">\r\n                                        <div className=\"topbar-contact\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <svg\r\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        width=\"24\"\r\n                                                        height=\"24\"\r\n                                                        viewBox=\"0 0 24 24\"\r\n                                                        fill=\"none\"\r\n                                                        stroke=\"currentColor\"\r\n                                                        strokeWidth=\"2\"\r\n                                                        strokeLinecap=\"round\"\r\n                                                        strokeLinejoin=\"round\"\r\n                                                        className=\"feather feather-phone\"\r\n                                                    >\r\n                                                        <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>\r\n                                                    </svg>\r\n                                                    <a href=\"tel:(+84)0123456789\"> (+84) 0123 456 789</a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <svg\r\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                        width=\"24\"\r\n                                                        height=\"24\"\r\n                                                        viewBox=\"0 0 24 24\"\r\n                                                        fill=\"none\"\r\n                                                        stroke=\"currentColor\"\r\n                                                        strokeWidth=\"2\"\r\n                                                        strokeLinecap=\"round\"\r\n                                                        strokeLinejoin=\"round\"\r\n                                                        className=\"feather feather-mail\"\r\n                                                    >\r\n                                                        <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\r\n                                                        <polyline points=\"22,6 12,13 2,6\"></polyline>\r\n                                                    </svg>\r\n                                                    <a href=\"mailto:info@ctes.org\">info@ctes.org</a>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Social Links */}\r\n                                    <div className=\"col-lg-5 text-right\">\r\n                                        <div className=\"toolbar-sl-share\">\r\n                                            <ul className=\"social-links\">\r\n                                                <li>\r\n                                                    <a href=\"#\" aria-label=\"Facebook\">\r\n                                                        <span aria-hidden=\"true\" className=\"social_facebook\"></span>\r\n                                                    </a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"#\" aria-label=\"Twitter\">\r\n                                                        <span aria-hidden=\"true\" className=\"social_twitter\"></span>\r\n                                                    </a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"#\" aria-label=\"LinkedIn\">\r\n                                                        <span aria-hidden=\"true\" className=\"social_linkedin\"></span>\r\n                                                    </a>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* ===== Menu Area ===== */}\r\n                    <div className=\"menu-part\">\r\n                        <div className=\"container\">\r\n                            <div className=\"react-main-menu\">\r\n                                <nav>\r\n                                    {/* Logo & Mobile Menu Toggle */}\r\n                                    <div className=\"menu-toggle\">\r\n                                        <div className=\"logo\">\r\n                                            {isVisible ? (\r\n                                                <Link to=\"/\" className=\"logo-text\">\r\n                                                    <img src={headerStickyLogo || stickyLogo} alt=\"CTES Logo\" />\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/\" className=\"logo-text\">\r\n                                                    <img src={headerNormalLogo || normalLogo} alt=\"CTES Logo\" />\r\n                                                </Link>\r\n                                            )}\r\n                                        </div>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            id=\"menu-btn\"\r\n                                            className={menuOpen ? \"mobile-menu-btn open\" : \"mobile-menu-btn\"}\r\n                                            onClick={this.toggleMenu}\r\n                                            aria-label=\"Toggle menu\"\r\n                                        >\r\n                                            <span className=\"icon-bar\"></span>\r\n                                            <span className=\"icon-bar\"></span>\r\n                                            <span className=\"icon-bar\"></span>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Main Menu Content */}\r\n                                    <div className={menuOpen ? \"react-inner-menus menu-open\" : \"react-inner-menus\"}>\r\n                                        {/* Navigation Items */}\r\n                                        <ul id=\"backmenu\" className=\"react-menus react-sub-shadow\">\r\n                                            <MenuItems parentMenu={parentMenu} />\r\n                                        </ul>\r\n\r\n                                        {/* User Actions Area - Chỉnh sửa */}\r\n                                        <div className=\"header-actions\">\r\n                                            {!isLoggedIn ? (\r\n                                                // Login Button - Không thay đổi\r\n                                                <div className=\"login-button\">\r\n                                                    <Link to=\"/login\">\r\n                                                        <i className=\"fas fa-sign-in-alt\"></i> Đăng nhập\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {/* Thêm Bell Notification */}\r\n                                                    <div className=\"notification-dropdown\" ref={this.notificationRef}>\r\n                                                        <button className=\"notification-btn\" onClick={this.toggleNotificationMenu} aria-label=\"Thông báo\">\r\n                                                            <i className=\"fas fa-bell\"></i>\r\n                                                            {unreadCount > 0 && <span className=\"notification-badge\">{unreadCount > 99 ? \"99+\" : unreadCount}</span>}\r\n                                                        </button>\r\n\r\n                                                        {/* Dropdown thông báo */}\r\n                                                        {notificationMenuOpen && (\r\n                                                            <div className=\"notification-dropdown-menu\">\r\n                                                                <div className=\"notification-header\">\r\n                                                                    <h5>Thông báo</h5>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"notification-body\">\r\n                                                                    {isLoadingNotifications ? (\r\n                                                                        <div className=\"loading-notifications\">\r\n                                                                            <p>Đang tải thông báo...</p>\r\n                                                                        </div>\r\n                                                                    ) : notifications.length > 0 ? (\r\n                                                                        notifications.slice(0, notifications.length).map((notification) => (\r\n                                                                            <div\r\n                                                                                key={notification.id}\r\n                                                                                className={`notification-item ${!notification.is_read ? \"unread\" : \"\"}`}\r\n                                                                                onClick={(e) => this.handleNotificationClick(notification, e)}\r\n                                                                            >\r\n                                                                                <div className=\"notification-icon\">\r\n                                                                                    {notification.type === \"event_created\" && <i className=\"fas fa-calendar-plus\"></i>}\r\n                                                                                    {notification.type === \"help_request\" && <i className=\"fas fa-hands-helping\"></i>}\r\n                                                                                    {notification.type === \"event_updated\" && <i className=\"fas fa-calendar-check\"></i>}\r\n                                                                                    {notification.type === \"event_summary\" && <i className=\"fas fa-star\"></i>}\r\n                                                                                    {notification.type === \"event_canceled\" && <i className=\"fas fa-calendar-times\"></i>}\r\n                                                                                    {![\r\n                                                                                        \"event_created\",\r\n                                                                                        \"help_request\",\r\n                                                                                        \"event_updated\",\r\n                                                                                        \"event_summary\",\r\n                                                                                        \"event_canceled\",\r\n                                                                                    ].includes(notification.type) && <i className=\"fas fa-bell\"></i>}\r\n                                                                                </div>\r\n                                                                                <div className=\"notification-content\">\r\n                                                                                    <h6>{notification.title}</h6>\r\n                                                                                    <p className={expandedNotificationId === notification.id ? \"expanded\" : \"\"}>\r\n                                                                                        {notification.message}\r\n                                                                                    </p>\r\n                                                                                    {/* Thêm nút \"Xem thêm\" hoặc \"Thu gọn\" */}\r\n                                                                                    {notification.message && notification.message.length > 75 && (\r\n                                                                                        <button\r\n                                                                                            className=\"expand-toggle\"\r\n                                                                                            onClick={(e) => this.toggleNotificationExpand(notification.id, e)}\r\n                                                                                        >\r\n                                                                                            {expandedNotificationId === notification.id ? \"Thu gọn\" : \"Xem thêm\"}\r\n                                                                                        </button>\r\n                                                                                    )}\r\n                                                                                    <small>{this.formatNotificationTime(notification.created_at)}</small>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : (\r\n                                                                        <div className=\"no-notifications\">\r\n                                                                            <p>Không có thông báo nào</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                </div>\r\n\r\n                                                                {/* <div className=\"notification-footer\">\r\n                                                                    <Link to=\"/notifications\" className=\"view-all\" onClick={() => this.setState({ notificationMenuOpen: false })}>\r\n                                                                        Xem tất cả thông báo\r\n                                                                    </Link>\r\n                                                                </div> */}\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    {/* User Dropdown - Không thay đổi */}\r\n                                                    <div className=\"user-dropdown\" ref={this.dropdownRef}>\r\n                                                        <div className=\"dropdown\">\r\n                                                            <button\r\n                                                                className=\"btn btn-secondary dropdown-toggle\"\r\n                                                                type=\"button\"\r\n                                                                onClick={this.toggleUserMenu}\r\n                                                                aria-label=\"User menu\"\r\n                                                            >\r\n                                                                {userInforr?.lastName || \"User\"}\r\n                                                                {userInforr?.image ? (\r\n                                                                    <img src={userInforr.image} alt=\"User Avatar\" className=\"dropdown-avatar\" />\r\n                                                                ) : (\r\n                                                                    <span className=\"dropdown-avatar-placeholder\">\r\n                                                                        {userInforr?.firstName?.charAt(0) || userInforr?.lastName?.charAt(0) || \"U\"}\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </button>\r\n\r\n                                                            {/* User Dropdown Menu */}\r\n                                                            {userMenuOpen && (\r\n                                                                <div className=\"dropdown-menu show\">\r\n                                                                    <Link to={`/user-profile/profile/${this.props.userInforr?.id}`} className=\"dropdown-item\" onClick={() => this.setState({ userMenuOpen: false })}>\r\n                                                                        <i className=\"fas fa-user\"></i> Hồ sơ cá nhân\r\n                                                                    </Link>\r\n\r\n                                                                    {/* Admin Option - Only For Admins */}\r\n                                                                    {userInforr?.roleId === \"R1\" && (\r\n                                                                        <Link\r\n                                                                            to=\"/system/user-display\"\r\n                                                                            className=\"dropdown-item\"\r\n                                                                            onClick={() => this.setState({ userMenuOpen: false })}\r\n                                                                        >\r\n                                                                            <i className=\"fas fa-cogs\"></i> Quản trị hệ thống\r\n                                                                        </Link>\r\n                                                                    )}\r\n\r\n                                                                    <div className=\"dropdown-divider\"></div>\r\n\r\n                                                                    {/* Logout Option */}\r\n                                                                    <a\r\n                                                                        className=\"dropdown-item\"\r\n                                                                        onClick={() => {\r\n                                                                            this.props.processLogout();\r\n                                                                            this.setState({ userMenuOpen: false });\r\n                                                                            window.location.href = \"/home\";\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <i className=\"fas fa-sign-out-alt\"></i> Đăng xuất\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\n// Redux Connection\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    userInforr: state.user.userInforr,\r\n    language: state.app.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n    changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Header\\MenuItems.js",["1015","1016","1017","1018","1019"],"import React, { useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst MenuItems = (props) => {\r\n    const location = useLocation();\r\n    const postURL = location.pathname.split(\"/\");\r\n    const pathLength = Number(postURL.length);\r\n    const currentPath = postURL[1];\r\n\r\n    const [page, setPage] = useState(false);\r\n    const [home, setHome] = useState(false);\r\n    const [event, setEvent] = useState(false);\r\n    const [profile, setProfile] = useState(false);\r\n    const [blog, setBlog] = useState(false);\r\n    const [helpRequest, setHelpRequest] = useState(false);\r\n\r\n    const openMobileMenu = (menu) => {\r\n        // Close all menus first\r\n        setHome(false);\r\n        setPage(false);\r\n        setEvent(false);\r\n        setProfile(false);\r\n        setBlog(false);\r\n        setHelpRequest(false);\r\n\r\n        // Open the selected menu\r\n        switch (menu) {\r\n            case \"home\":\r\n                setHome(true);\r\n                break;\r\n            case \"event\":\r\n                setEvent(true);\r\n                break;\r\n            case \"profile\":\r\n                setProfile(true);\r\n                break;\r\n            case \"blog\":\r\n                setBlog(true);\r\n                break;\r\n            case \"helpRequest\":\r\n                setHelpRequest(true);\r\n                break;\r\n            case \"page\":\r\n                setPage(true);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    // Helper to check if current path matches exactly\r\n    const isActive = (path) => location.pathname === path;\r\n\r\n    // Helper to check if current path starts with a prefix\r\n    const isActivePrefix = (prefix) => currentPath === prefix;\r\n\r\n    return (\r\n        <>\r\n            <li className={isActive(\"/home\") || location.pathname === \"/\" ? \"menu-active\" : \"\"}>\r\n                <Link to=\"/home\">Home</Link>\r\n            </li>\r\n\r\n            <li className={isActive(\"/event\") ? \"menu-active\" : \"\"}>\r\n                <Link to=\"/event\">Events</Link>\r\n            </li>\r\n\r\n            <li className={isActivePrefix(\"user-profile\") ? \"has-sub menu-active\" : \"has-sub\"}>\r\n                <Link to=\"#\" className={profile ? \"hash menu-active\" : \"hash\"} onClick={() => openMobileMenu(\"profile\")}>\r\n                    Profile\r\n                    <span className=\"arrow\"></span>\r\n                </Link>\r\n                <ul className={profile ? \"sub-menu sub-menu-open\" : \"sub-menu\"}>\r\n                    <li className={isActive(\"/user-profile/manage-list\") ? \"menu-active\" : \"\"}>\r\n                        <Link to=\"/user-profile/manage-list\">Ban Quản Lí</Link>\r\n                    </li>\r\n                    <li className={isActive(\"/user-profile\") ? \"menu-active\" : \"\"}>\r\n                        <Link to=\"/user-profile\">Tình Nguyện Viên</Link>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n\r\n            {/* <li className={isActivePrefix(\"blog\") ? \"has-sub menu-active\" : \"has-sub\"}>\r\n                <Link to=\"#\" className={blog ? \"hash menu-active\" : \"hash\"} onClick={() => openMobileMenu(\"blog\")}>\r\n                    Blog\r\n                    <span className=\"arrow\"></span>\r\n                </Link>\r\n                <ul className={blog ? \"sub-menu sub-menu-open\" : \"sub-menu\"}>\r\n                    <li className={isActive(\"/blog\") ? \"menu-active\" : \"\"}>\r\n                        <Link to=\"/blog\">Blog</Link>\r\n                    </li>\r\n                    <li className={currentPath === \"blog\" && pathLength > 2 ? \"menu-active\" : \"\"}>\r\n                        <Link to=\"/blog/1\">Blog Single</Link>\r\n                    </li>\r\n                </ul>\r\n            </li> */}\r\n\r\n            <li className={isActivePrefix(\"help-request\") || isActivePrefix(\"help-request-list\") ? \"has-sub menu-active\" : \"has-sub\"}>\r\n                <Link to=\"#\" className={helpRequest ? \"hash menu-active\" : \"hash\"} onClick={() => openMobileMenu(\"helpRequest\")}>\r\n                    HelpRequest\r\n                    <span className=\"arrow\"></span>\r\n                </Link>\r\n                <ul className={helpRequest ? \"sub-menu sub-menu-open\" : \"sub-menu\"}>\r\n                    <li className={isActive(\"/help-request\") ? \"menu-active\" : \"\"}>\r\n                        <Link to=\"/help-request\">Tạo yêu cầu</Link>\r\n                    </li>\r\n                    <li className={isActive(\"/help-request-list\") ? \"menu-active\" : \"\"}>\r\n                        <Link to=\"/help-request-list\">Danh sách yêu cầu</Link>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n\r\n            <li className={isActive(\"/contact\") ? \"menu-active\" : \"\"}>\r\n                <Link to=\"/contact\">Contact</Link>\r\n            </li>\r\n            <li className={isActive(\"/contact\") ? \"menu-active\" : \"\"}>\r\n                <Link to=\"/recruitment\">Recruitment</Link>\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MenuItems;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\SectionTitle\\index.js",["1020"],"import React from 'react';\r\n\r\n\r\nimport lineImg from '../../assets/images/line.png';\r\n\r\nconst SectionTitle = (props) => {\r\n    const { sectionClass, titleClass, Title, shapeImg } = props;\r\n\r\n    return (\r\n        <div className={sectionClass ? sectionClass : 'react__title__section text-center'}>\r\n            <h2 className={titleClass ? titleClass : 'react__tittle'}>{Title ? Title : 'Title'}</h2>\r\n            <img src={shapeImg ? shapeImg : lineImg} alt=\"image\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionTitle;","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\index.js",[],["1021","1022"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\HomeMain.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\AboutSection.js",["1023"],"import { Link } from 'react-router-dom';\r\n\r\n// Image\r\nimport aboutImg from '../../assets/images/about/ab.png';\r\nimport aboutBadge from '../../assets/images/about/badge.png';\r\n\r\nconst About = () => {\r\n\r\n    return (\r\n        <div className=\"about__area about__area_one p-relative pt---10 pb---120\">\r\n            <div className=\"container\">                        \r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"about__image\">\r\n                            <img src={aboutImg} alt=\"About\" />\r\n                            <img className=\"react__shape__ab\" src={aboutBadge} alt=\"Shape Image\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"about__content\">\r\n                            <h2 className=\"about__title wow animate__fadeInUp\" data-wow-duration=\"0.3s\">Welcome to <br/> <em>Echooling LMS Platform</em></h2>\r\n                            <p className=\"about__paragraph wow animate__fadeInUp\" data-wow-duration=\"0.5s\">Education is both the act of teaching knowledge to others and<br/> the act of receiving knowledge from someone else.</p>\r\n                            <p className=\"about__paragraph2 wow animate__fadeInUp\" data-wow-duration=\"0.7s\"> Have questions?  <Link to=\"#\"> Get Free Guide </Link></p>\r\n                            <p className=\"wow animate__fadeInUp\" data-wow-duration=\"0.6s\">Education also refers to the knowledge received through schooling instruction <br/>and to the institution of teaching as a whole. The main purpose of education <br/>is the integral development of a person.</p>\r\n                            <ul className=\"wow animate__fadeInUp\" data-wow-duration=\"0.9s\">\r\n                                <li><Link to=\"/about\" className=\"more-about\"> Read More <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg></Link></li>\r\n                                <li className=\"last-li\">\r\n                                    <em>Get Support</em>\r\n                                    <Link to=\"mailto:support@react.com\">support@react.com</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\ServiceSection.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\CourseSection.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\SliderSection.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\CampusSection.js",["1024","1025","1026","1027","1028"],"import React  from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SectionTitle from '../../../components/SectionTitle'\r\nimport campusImg1 from '../../../assets/images/campus/1.svg'\r\nimport campusImg2 from '../../../assets/images/campus/2.svg'\r\nimport campusImg3 from '../../../assets/images/campus/3.svg'\r\nimport campusImg4 from '../../../assets/images/campus/4.png'\r\nimport campusShape from '../../../assets/images/campus/shape.png'\r\n\r\nconst Campus = () => {\r\n\r\n    return (\r\n        <div className=\"campus_sec pt---100 pb---110\">\r\n            <div className=\"container\">\r\n                <SectionTitle Title=\"Tiêu chí hướng tới\" />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-7\">\r\n                        <div className=\"about__content\">\r\n                            <ul>\r\n                                <li className=\"wow animate__fadeInUp\" data-wow-duration=\"0.3s\">\r\n                                    <div className=\"icon\">\r\n                                        <img src={campusImg1} alt=\"image\" />\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <h4>Học Tập</h4>\r\n                                        <p>Why I say old chap that is spiffing he legged <br/>it in my flat easy peasy.</p>\r\n                                    </div>\r\n                                    <Link to=\"#\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg></Link>\r\n                                </li>\r\n                                <li className=\"wow animate__fadeInUp\" data-wow-duration=\"0.3s\">\r\n                                    <div className=\"icon\">\r\n                                        <img src={campusImg2} alt=\"image\" />\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <h4>Tinh nguyện</h4>\r\n                                        <p>Why I say old chap that is spiffing he legged <br/>it in my flat easy peasy.</p>\r\n                                    </div>\r\n                                    <Link to=\"#\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg></Link>\r\n                                </li>\r\n                                <li className=\"wow animate__fadeInUp\" data-wow-duration=\"0.3s\">\r\n                                    <div className=\"icon\">\r\n                                        <img src={campusImg3} alt=\"image\" />\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <h4>Giải trí và Kết nối</h4>\r\n                                        <p>Why I say old chap that is spiffing he legged <br/>it in my flat easy peasy.</p>\r\n                                    </div>\r\n                                    <Link to=\"#\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg></Link>\r\n                                </li>\r\n                            </ul>  \r\n                        </div>                              \r\n                    </div>\r\n                    <div className=\"col-lg-5\">                                \r\n                        <div className=\"about__image\">\r\n                            <img src={campusImg4} alt=\"image\" />\r\n                            <img className=\"shape-1\" src={campusShape} alt=\"image\" />\r\n                        </div>                                \r\n                    </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Link to=\"/contact\" className=\"more-about\"> Thêm về chúng tôi <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Campus;","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\BlogSection.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\EventSection.js",["1029","1030"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\n// import SectionTitle from '../../components/SectionTitle'\r\nimport SectionTitle from \"../../../components/SectionTitle/index.js\";\r\nimport SingleEvent from \"../../../components/Event/SingleEvent\";\r\nimport { toast } from \"react-toastify\";\r\nimport events from \"../../../data/Events.json\";\r\nimport { getRecentEvents } from \"../../../services/eventServices\";\r\nconst Event = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    const fetchEvents = async () => {\r\n        try {\r\n            const response = await getRecentEvents();\r\n            if (response && response.data && response.data.errCode === 0) {\r\n                setEvents(response.data.data);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching events:\", error);\r\n            toast.error(\"Không thể tải danh sách sự kiện\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    const eventSettings = {\r\n        dots: true,\r\n        arrows: false,\r\n        infinite: true,\r\n        centerMode: false,\r\n        slidesToShow: 3,\r\n        slidesToScroll: 1,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1199,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 767,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    arrows: false,\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    if (loading) return <div>Loading...</div>;\r\n    return (\r\n        <div className=\"react-upcoming__event blog__area\">\r\n            <div className=\"container\">\r\n                <SectionTitle Title=\"Upcoming Events\" />\r\n                <div\r\n                    className=\"event-slider owl-carousel wow animate__fadeInUp\"\r\n                    data-wow-duration=\"0.3s\"\r\n                >\r\n                    <Slider {...eventSettings}>\r\n                        {events\r\n                            .map((data, index) => {\r\n                                return (\r\n                                    <SingleEvent\r\n                                        key={data.id}\r\n                                        eventID={data.id}\r\n                                        eventImg={data.eventMarkdown?.image || ''}\r\n                                        eventTitle={data.name}\r\n                                        eventDate={data.date}\r\n                                        eventLocation={data.address}\r\n                                        eventType={data.eventType?.valueVi}\r\n                                        eventStatus={data.status?.valueVi}\r\n                                        eventDescription={data.eventMarkdown?.description}\r\n                                        eventCost={data.cost}\r\n                                        eventQuantityMember={data.quantityMember}\r\n                                        eventBtnText=\"Xem chi tiết\"\r\n                                    />\r\n                                );\r\n                            })\r\n                            .slice(0, 6)}\r\n                    </Slider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Event;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\CounterSection.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\TestimonialSection.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Event\\SingleEvent.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Course\\SingleCourse.js",["1031"],"import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport \"./SingleCourse.scss\"\r\nimport defaultAvatar from '../../assets/images/404.png';\r\n\r\nconst SingleCourse = (props) => {\r\n    const { \r\n        itemClass, \r\n        personID, \r\n        avatar, \r\n        firstName, \r\n        lastName, \r\n        role, \r\n        description, \r\n        contactInfo \r\n    } = props;\r\n\r\n    // Có thể thêm xử lý HTML content nếu cần\r\n    const renderMarkdown = () => {\r\n        if (props.markdownContent) {\r\n            return <div className=\"markdown-content\" dangerouslySetInnerHTML={{ __html: props.markdownContent }} />;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <div className={itemClass ? itemClass : 'person__item mb-30'}>\r\n            <div className=\"person__thumb\">\r\n                <Link to={`/user-profile/profile/${personID}`}>\r\n                    <img \r\n                        src={avatar || defaultAvatar} \r\n                        alt={`${firstName} ${lastName}`} \r\n                        className=\"person-avatar\"\r\n                    />\r\n                </Link>\r\n            </div>\r\n            <div className=\"person__inner\">\r\n                <div className=\"person-role\">\r\n                    <span>{role || 'Thành viên'}</span>\r\n                </div>\r\n                <h3 className=\"person-name\">\r\n                    <Link to={`/user-profile/profile/${personID}`}>\r\n                        {firstName && lastName ? `${firstName} ${lastName}` : 'Chưa có thông tin'}\r\n                    </Link>\r\n                </h3>\r\n                <div className=\"person-description\">\r\n                    <p>{description || 'Chưa cập nhật thông tin mô tả'}</p>\r\n                </div>\r\n                {/* {renderMarkdown()} */}\r\n                <div className=\"person__card-info d-flex align-items-center\">\r\n                    <div className=\"person__card-info--contact\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-mail\">\r\n                            <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path>\r\n                            <polyline points=\"22,6 12,13 2,6\"></polyline>\r\n                        </svg>\r\n                        <span>{contactInfo?.email || 'Chưa cập nhật email'}</span>\r\n                    </div>                                            \r\n                    <div className=\"person__social-links\">\r\n                        {contactInfo?.phone && (\r\n                            <a href={`tel:${contactInfo.phone}`} className=\"phone-link\" title=\"Gọi điện\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-phone\">\r\n                                    <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"></path>\r\n                                </svg>\r\n                            </a>\r\n                        )}\r\n                        {/* Có thể thêm các liên kết mạng xã hội khác tại đây */}\r\n                    </div>\r\n                </div>\r\n            </div>                                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleCourse;","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Footer\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Footer\\FooterTwo.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Blog\\SinglePost.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\ModalUser.js",["1032","1033","1034","1035"],"import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    getAllUsers,\r\n    deleteUser,\r\n    updateUser,\r\n    createUser,\r\n} from \"../../services/userServices\";\r\nclass ModalEditUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            phoneNumber: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            genderCode: \"\",\r\n            roleCode: \"\",\r\n            positionCode: \"\",\r\n            image: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = this.props.currentUser;\r\n        if (user) {\r\n            this.setState({\r\n                email: user.email,\r\n                password: \"********\", // Masked password\r\n                phoneNumber: user.phoneNumber || \"\",\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                address: user.address || \"\",\r\n                genderCode: user.genderCode || \"\",\r\n                roleCode: user.roleCode || \"\",\r\n                positionCode: user.positionCode || \"\",\r\n                image: user.image || \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    // Add componentDidUpdate to handle new user data\r\n    componentDidUpdate(prevProps) {\r\n        if (\r\n            this.props.currentUser !== prevProps.currentUser &&\r\n            this.props.currentUser\r\n        ) {\r\n            const user = this.props.currentUser;\r\n            this.setState({\r\n                email: user.email || \"\",\r\n                password: \"********\",\r\n                phoneNumber: user.phoneNumber || \"\",\r\n                firstName: user.firstName || \"\",\r\n                lastName: user.lastName || \"\",\r\n                address: user.address || \"\",\r\n                genderCode: user.genderCode || \"\",\r\n                roleCode: user.roleCode || \"\",\r\n                positionCode: user.positionCode || \"\",\r\n                image: user.image || \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    resetState = () => {\r\n        this.setState({\r\n            email: \"\",\r\n            password: \"\",\r\n            phoneNumber: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            genderCode: \"\",\r\n            roleCode: \"\",\r\n            positionCode: \"\",\r\n            image: \"\",\r\n        });\r\n    };\r\n\r\n    handleOnChangeInput = (event, id) => {\r\n        // Only allow changes for editable fields\r\n        if (![\"email\", \"password\", \"phoneNumber\"].includes(id)) {\r\n            this.setState({\r\n                [id]: event.target.value,\r\n            });\r\n        }\r\n    };\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        const requiredFields = [\"firstName\", \"lastName\"];\r\n\r\n        for (let field of requiredFields) {\r\n            if (!this.state[field]) {\r\n                isValid = false;\r\n                toast.error(`Missing parameter: ${field}`);\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    handleSaveUser = () => {\r\n        if (!this.checkValidateInput()) return;\r\n        console.log(\"check id\", this.props.currentUser.id)\r\n        const editableData = {\r\n            id: this.props.currentUser.id, // Important: Include ID for update\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            address: this.state.address,\r\n            genderCode: this.state.genderCode,\r\n            roleCode: this.state.roleCode,\r\n            positionCode: this.state.positionCode,\r\n            // image: this.state.image,\r\n        };\r\n\r\n        this.props.handleUpdateUser(editableData);\r\n        console.log(\"check editableData\", editableData)\r\n\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.toggleModal();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                show={this.props.isOpen}\r\n                onHide={this.handleClose}\r\n                size=\"lg\"\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit User Information</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"container\">\r\n                        {/* Non-editable fields */}\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-md-4\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control bg-light\"\r\n                                    value={this.state.email}\r\n                                    disabled\r\n                                    style={{ cursor: \"not-allowed\" }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <label>Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control bg-light\"\r\n                                    value={this.state.password}\r\n                                    disabled\r\n                                    style={{ cursor: \"not-allowed\" }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <label>Phone Number</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control bg-light\"\r\n                                    value={this.state.phoneNumber}\r\n                                    disabled\r\n                                    style={{ cursor: \"not-allowed\" }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Editable fields */}\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-md-6\">\r\n                                <label>First Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.firstName}\r\n                                    onChange={(event) =>\r\n                                        this.handleOnChangeInput(\r\n                                            event,\r\n                                            \"firstName\"\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <label>Last Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.lastName}\r\n                                    onChange={(event) =>\r\n                                        this.handleOnChangeInput(\r\n                                            event,\r\n                                            \"lastName\"\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-12\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.address}\r\n                                    onChange={(event) =>\r\n                                        this.handleOnChangeInput(\r\n                                            event,\r\n                                            \"address\"\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <label>Gender</label>\r\n                                <select\r\n                                    className=\"form-select\"\r\n                                    value={this.state.genderCode}\r\n                                    onChange={(event) =>\r\n                                        this.handleOnChangeInput(\r\n                                            event,\r\n                                            \"genderCode\"\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    <option value=\"\">Choose gender...</option>\r\n                                    <option value=\"M\">Male</option>\r\n                                    <option value=\"F\">Female</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <label>Role</label>\r\n                                <select\r\n                                    className=\"form-select\"\r\n                                    value={this.state.roleCode}\r\n                                    onChange={(event) =>\r\n                                        this.handleOnChangeInput(\r\n                                            event,\r\n                                            \"roleCode\"\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    <option value=\"\">Choose role...</option>\r\n                                    <option value=\"R1\">Admin</option>\r\n                                    <option value=\"R2\">Management</option>\r\n                                    <option value=\"R3\">Volunteer</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"col-md-4\">\r\n                                <label>Position</label>\r\n                                <select\r\n                                    className=\"form-select\"\r\n                                    value={this.state.positionCode}\r\n                                    onChange={(event) =>\r\n                                        this.handleOnChangeInput(\r\n                                            event,\r\n                                            \"positionCode\"\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    <option value=\"\">Choose position...</option>\r\n                                    <option value=\"P1\">Captain</option>\r\n                                    <option value=\"P2\">Management</option>\r\n                                    <option value=\"P3\">Volunteer</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={this.handleSaveUser}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalEditUser;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\HomeHeader.js",["1036","1037"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./HomeHeader.scss\";\r\nimport Manuals from \"../../components/Manuals\";\r\nimport { Link } from 'react-router-dom';\r\n// import ModalVideo from 'react-modal-video';\r\nimport Slider from \"react-slick\";\r\nimport { FormattedMessage } from 'react-intl';\r\n// import HomeHeader from \"../../components/HomeHeader\";\r\n\r\nclass Headers extends Component {\r\n    \r\n    render() {\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n            nextArrow: <div className=\"slick-next\"></div>,\r\n            prevArrow: <div className=\"slick-prev\"></div>,\r\n        };\r\n    \r\n        return (\r\n            \r\n            <React.Fragment>\r\n                <div className=\"section-doctors\">\r\n                    <div className=\"doctors-content\">\r\n                        <div className=\"doctors-header\">\r\n                            <div className=\"doctors-title mb-3 ml-1\">\r\n                                Bác sĩ nổi bật tuần qua\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-outline-primary\">Tìm kiếm</button>\r\n                        </div>\r\n\r\n                        <Slider {...settings}>\r\n\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                            <div className=\"doctors-item\">\r\n                            <Manuals/>\r\n                            </div>\r\n                        </Slider>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Headers);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\MarkdownEditor.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\Manual.js",["1038","1039","1040","1041"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\FeaturedDoctors.js",["1042"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\Medical.js",["1043"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HomePage\\Section\\Speciality.js",["1044"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\UserDisplay.js",["1045"],"import React, { Component } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./UserDisplay.scss\";\r\nimport {\r\n    getAllUsers,\r\n    deleteUser,\r\n    updateUser,\r\n    createUser,\r\n} from \"../../services/userServices\";\r\nimport ModalEditUser from \"./ModalUser\";\r\nimport { toast } from \"react-toastify\";\r\nclass UserDisplay extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            isOpenModalEdit: false,\r\n            currentUser: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await getAllUsers();\r\n            if (response && response.data.errCode === 0) {\r\n                this.setState({\r\n                    users: response.data.data,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching users:\", error);\r\n        }\r\n    }\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            isOpenModalEdit: true,\r\n            currentUser: user,\r\n        });\r\n    };\r\n    toggleModalEdit = () => {\r\n        this.setState({\r\n            isOpenModalEdit: false,\r\n            currentUser: null, // Clear current user when closing\r\n        });\r\n    };\r\n    handleDeleteUser = async (userId) => {\r\n        try {\r\n            // Find the user in the current users list\r\n            const userToDelete = this.state.users.find(user => user.id === userId);\r\n            const fullName = `${userToDelete.firstName} ${userToDelete.lastName}`;\r\n    \r\n            if (window.confirm(`Are you sure you want to delete user: ${fullName}?`)) {\r\n                let response = await deleteUser(userId);\r\n                if (response && response.data.errCode === 0) {\r\n                    toast.success(`Deleted user ${fullName} successfully!`);\r\n                    await this.getAllUsersFromReact();\r\n                } else {\r\n                    toast.error(`Failed to delete user ${fullName}: ${response.data.errMessage}`);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            toast.error('Something went wrong while deleting the user');\r\n            console.error('Error deleting user:', error);\r\n        }\r\n    };\r\n// Thêm hàm handleUpdateUser\r\n    handleUpdateUser = async (userData) => {\r\n        try {\r\n            let response = await updateUser(userData);\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(\"Cập nhật người dùng thành công!\");\r\n                await this.getAllUsersFromReact();\r\n                this.toggleModalEdit(); // Đóng modal sau khi cập nhật\r\n            } else {\r\n                toast.error(response.data.errMessage || \"Lỗi cập nhật người dùng\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error updating user:\", error);\r\n            toast.error(\"Đã xảy ra lỗi khi cập nhật\");\r\n        }\r\n    };\r\n    getAllUsersFromReact = async () => {\r\n        try {\r\n            const response = await getAllUsers();\r\n            if (response && response.data.errCode === 0) {\r\n                this.setState({\r\n                    users: response.data.data,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching users:\", error);\r\n        }\r\n    };\r\n    render() {\r\n        const { users } = this.state;\r\n        return (\r\n            <div className=\"user-display-container\">\r\n                <div className=\"title text-center mb-4\">\r\n                    <h2>Quản lý người dùng</h2>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-light\">\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Email</th>\r\n                                <th>Họ</th>\r\n                                <th>Tên</th>\r\n                                <th>Địa chỉ</th>\r\n                                <th>Số điện thoại</th>\r\n                                <th>Giới tính</th>\r\n                                <th>Chức vụ</th>\r\n                                <th>Vị trí</th>\r\n                                <th>Thao tác</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users &&\r\n                                users.map((user, index) => (\r\n                                    <tr key={user.id}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.firstName}</td>\r\n                                        <td>{user.lastName}</td>\r\n                                        <td>{user.address || \"N/A\"}</td>\r\n                                        <td>{user.phoneNumber || \"N/A\"}</td>\r\n                                        <td>\r\n                                            {user.genderData?.valueVi || \"N/A\"}\r\n                                        </td>\r\n                                        <td>\r\n                                            {user.roleData?.valueVi || \"N/A\"}\r\n                                        </td>\r\n                                        <td>\r\n                                            {user.positionData?.valueVi ||\r\n                                                \"N/A\"}\r\n                                        </td>\r\n                                        <td>\r\n                                            <button\r\n                                                className=\"btn btn-warning btn-sm me-2\"\r\n                                                onClick={() =>\r\n                                                    this.handleEditUser(user)\r\n                                                }\r\n                                            >\r\n                                                <FaEdit />\r\n                                            </button>\r\n                                            <button\r\n                                                className=\"btn btn-danger btn-sm\"\r\n                                                onClick={() =>\r\n                                                    this.handleDeleteUser(\r\n                                                        user.id\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <FaTrash />\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <ModalEditUser\r\n                    isOpen={this.state.isOpenModalEdit}\r\n                    toggleModal={this.toggleModalEdit}\r\n                    currentUser={this.state.currentUser}\r\n                    handleUpdateUser={this.handleUpdateUser}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDisplay);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\uploadImageToGithub.js",["1046"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\EventManage.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\index.js",[],["1047","1048"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\adminService.js",["1049"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\axios.js",["1050"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\config.js",["1051"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\eventServices.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\EventDescription.js",["1052","1053","1054","1055"],"import React, { Component } from \"react\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createEventDescription, getEventById } from \"../../services/eventServices\";\r\nimport { getAllEvents } from \"../../services/eventServices\";\r\nimport { getAllCodes } from \"../../services/userServices\";\r\nimport { languages } from \"../../utils/constant\";\r\nimport * as actions from \"../../../src/store/actions\";\r\nimport Select from \"react-select\";\r\nimport \"./EventDescription.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass EventDescription extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contentMarkdown: \"\",\r\n            contentHTML: \"\",\r\n            description: \"\",\r\n            selectedPosition: null,\r\n            selectedEvent: null,\r\n            image: \"\",\r\n            positions: [],\r\n            events: [],\r\n            isLoading: false,\r\n            isLoadingEvent: false,\r\n            hasExistingData: false,\r\n            originalEventData: null\r\n        };\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        try {\r\n            await this.fetchEvents();\r\n            \r\n            // Kiểm tra nếu có eventId từ URL (trong trường hợp chỉnh sửa)\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            const eventId = urlParams.get('id');\r\n            \r\n            if (eventId) {\r\n                await this.handleEventSelection({ value: eventId });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error in componentDidMount:\", error);\r\n            toast.error(\"Error loading initial data\");\r\n        } finally {\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n    \r\n    fetchEvents = async () => {\r\n        try {\r\n            const response = await getAllEvents();\r\n            \r\n            if (response && response.data && response.data.errCode === 0) {\r\n                const events = response.data.data;\r\n                \r\n                this.setState({\r\n                    events: this.buildSelectOptions(events)\r\n                });\r\n            } else {\r\n                toast.error(\"Failed to fetch events\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching events:\", error);\r\n            toast.error(\"Error loading events\");\r\n        }\r\n    }\r\n\r\n    buildSelectOptions = (items) => {\r\n        return items.map(item => ({\r\n            value: item.id,\r\n            label: item.name\r\n        }));\r\n    };\r\n    \r\n    // Hàm mới để xử lý sự kiện khi người dùng chọn một event\r\n    handleEventSelection = async (selectedEvent) => {\r\n        this.setState({ \r\n            selectedEvent,\r\n            isLoadingEvent: true,\r\n            hasExistingData: false\r\n        });\r\n        \r\n        if (selectedEvent) {\r\n            try {\r\n                const response = await getEventById(selectedEvent.value);\r\n                \r\n                if (response && response.data && response.data.errCode === 0) {\r\n                    const eventData = response.data.data;\r\n                    const eventMarkdown = eventData.eventMarkdown;\r\n                    \r\n                    // Lưu dữ liệu gốc để so sánh sau này\r\n                    this.setState({ originalEventData: eventData });\r\n                    \r\n                    // Kiểm tra xem event đã có mô tả chưa\r\n                    if (eventMarkdown) {\r\n                        this.setState({\r\n                            contentMarkdown: eventMarkdown.contentMarkdown || \"\",\r\n                            contentHTML: eventMarkdown.contentHTML || \"\",\r\n                            description: eventMarkdown.description || \"\",\r\n                            image: eventMarkdown.image || \"\",\r\n                            hasExistingData: true\r\n                        });\r\n                        \r\n                        toast.info(\"Đã tải thông tin mô tả sẵn có của sự kiện\");\r\n                    } else {\r\n                        // Nếu chưa có mô tả thì reset form\r\n                        this.setState({\r\n                            contentMarkdown: \"\",\r\n                            contentHTML: \"\",\r\n                            description: \"\",\r\n                            image: \"\"\r\n                        });\r\n                        \r\n                        toast.info(\"Sự kiện chưa có mô tả chi tiết. Vui lòng tạo mới.\");\r\n                    }\r\n                } else {\r\n                    toast.error(response?.data?.errMessage || \"Không thể tải thông tin sự kiện\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching event details:\", error);\r\n                toast.error(\"Lỗi khi tải thông tin sự kiện\");\r\n            } finally {\r\n                this.setState({ isLoadingEvent: false });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html\r\n        });\r\n    };\r\n    \r\n    handleImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onloadend = () => {\r\n                this.setState({ image: reader.result });\r\n            };\r\n        }\r\n    };\r\n\r\n    handleSaveContent = async () => {\r\n        const { contentHTML, contentMarkdown, description, \r\n                 selectedEvent, image, hasExistingData } = this.state;\r\n\r\n        if (!selectedEvent) {\r\n            toast.error(\"Vui lòng chọn một sự kiện\");\r\n            return;\r\n        }\r\n        \r\n        if (!contentMarkdown.trim()) {\r\n            toast.warning(\"Vui lòng nhập nội dung chi tiết\");\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n        \r\n        try {\r\n            const data = {\r\n                contentHTML,\r\n                contentMarkdown,\r\n                description,\r\n                eventId: selectedEvent.value,\r\n                image\r\n            };\r\n            \r\n            // Nếu đã có dữ liệu, thêm id để update\r\n            if (hasExistingData && this.state.originalEventData?.eventMarkdown?.id) {\r\n                data.id = this.state.originalEventData.eventMarkdown.id;\r\n            }\r\n            \r\n            const response = await createEventDescription(data);\r\n\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(hasExistingData ? \"Cập nhật mô tả thành công!\" : \"Tạo mô tả thành công!\");\r\n                \r\n                // Reload event data to get the latest changes\r\n                await this.handleEventSelection(selectedEvent);\r\n            } else {\r\n                toast.error(response.data.errMessage || \"Có lỗi xảy ra khi lưu\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error saving content:\", error);\r\n            toast.error(\"Lỗi khi lưu nội dung\");\r\n        } finally {\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n    \r\n    renderEventPreview() {\r\n        const { originalEventData } = this.state;\r\n        console.log(\"originalEventData\", originalEventData);\r\n        if (!originalEventData) return null;\r\n        \r\n        return (\r\n            <div className=\"event-preview mb-4 p-3 border rounded bg-light\">\r\n                <h5 className=\"border-bottom pb-2 mb-3\">Thông tin sự kiện</h5>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <p><strong>Tên:</strong> {originalEventData.name}</p>\r\n                        <p><strong>Loại Sự Kiện:</strong> {originalEventData.eventType?.valueVi || \"N/A\"}</p>\r\n                        <p><strong>Ngày:</strong> {new Date(originalEventData.date).toLocaleDateString('vi-VN')}</p>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <p><strong>Địa điểm:</strong> {originalEventData.address || \"N/A\"}</p>\r\n                        <p><strong>Chi phí:</strong> {originalEventData.cost ? `${originalEventData.cost.toLocaleString()} VNĐ` : \"Miễn phí\"}</p>\r\n                        <p><strong>Trạng thái:</strong> {originalEventData.status?.valueVi || \"N/A\"}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        const { selectedEvent, events, isLoading, isLoadingEvent, hasExistingData, image } = this.state;\r\n\r\n        return (\r\n            <div className=\"event-description-container p-4\">\r\n                <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                    <h2>Chỉnh sửa mô tả sự kiện</h2>\r\n                    {hasExistingData && (\r\n                        <span className=\"badge bg-info\">Đã có mô tả</span>\r\n                    )}\r\n                </div>\r\n                \r\n                {isLoading ? (\r\n                    <div className=\"text-center my-5\">\r\n                        <Spinner color=\"primary\" /> \r\n                        <p className=\"mt-2\">Đang tải dữ liệu...</p>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-md-6\">\r\n                                <label className=\"form-label\">Chọn sự kiện:</label>\r\n                                <Select\r\n                                    value={selectedEvent}\r\n                                    onChange={this.handleEventSelection}\r\n                                    options={events}\r\n                                    className=\"basic-select\"\r\n                                    placeholder=\"Chọn sự kiện để mô tả\"\r\n                                    isSearchable={true}\r\n                                    isDisabled={isLoadingEvent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {isLoadingEvent ? (\r\n                            <div className=\"text-center my-3\">\r\n                                <Spinner size=\"sm\" color=\"primary\" /> \r\n                                <span className=\"ms-2\">Đang tải thông tin sự kiện...</span>\r\n                            </div>\r\n                        ) : selectedEvent ? (\r\n                            <>\r\n                                {this.renderEventPreview()}\r\n                                \r\n                                <div className=\"mb-4\">\r\n                                    <label className=\"form-label\">Mô tả ngắn:</label>\r\n                                    <textarea\r\n                                        className=\"form-control\"\r\n                                        rows=\"3\"\r\n                                        value={this.state.description}\r\n                                        onChange={(e) => this.setState({ description: e.target.value })}\r\n                                        placeholder=\"Nhập mô tả ngắn về sự kiện...\"\r\n                                    ></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"mb-4\">\r\n                                    <label className=\"form-label\">Hình ảnh đại diện:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mb-2\"\r\n                                        value={this.state.image}\r\n                                        onChange={(e) => this.setState({ image: e.target.value })}\r\n                                        placeholder=\"Nhập URL hình ảnh\"\r\n                                    />\r\n                                    \r\n                                    {image && (\r\n                                        <div className=\"mt-2 text-center border p-2\">\r\n                                            <img \r\n                                                src={image} \r\n                                                alt=\"Preview\" \r\n                                                style={{ maxHeight: '200px' }} \r\n                                                className=\"img-thumbnail\"\r\n                                                onError={(e) => {\r\n                                                    e.target.onerror = null;\r\n                                                    e.target.src = 'https://via.placeholder.com/400x200?text=Hình+ảnh+không+tồn+tại';\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"markdown-editor mb-4\">\r\n                                    <label className=\"form-label\">Nội dung chi tiết:</label>\r\n                                    <MdEditor\r\n                                        style={{ height: \"500px\" }}\r\n                                        renderHTML={(text) => mdParser.render(text)}\r\n                                        onChange={this.handleEditorChange}\r\n                                        value={this.state.contentMarkdown}\r\n                                    />\r\n                                </div>\r\n\r\n                                <button\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={this.handleSaveContent}\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {isLoading ? (\r\n                                        <>\r\n                                            <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                            Đang lưu...\r\n                                        </>\r\n                                    ) : hasExistingData ? (\r\n                                        \"Cập nhật mô tả\"\r\n                                    ) : (\r\n                                        \"Tạo mô tả mới\"\r\n                                    )}\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"alert alert-info\">\r\n                                <i className=\"fas fa-info-circle me-2\"></i>\r\n                                Vui lòng chọn một sự kiện để bắt đầu chỉnh sửa mô tả\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    language: state.app.language\r\n});\r\n\r\nexport default connect(mapStateToProps)(EventDescription);","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\pages\\event\\index.js",[],["1056","1057"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\pages\\event\\EventMain.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\ScrollTop\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Breadcrumb\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\pages\\event\\event-details.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Breadcrumb\\EventBreadcrumbs.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\pages\\event\\EventDetailsMain.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Event\\Event.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Event\\EventMain.js",["1058"],"import React, { useState, useEffect } from 'react';\r\nimport { getRecentEvents, getAllEvents } from '../../services/eventServices';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SingleEvent from '../../components/Event/SingleEvent';\r\n\r\n\r\nconst EventMain = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    const fetchEvents = async () => {\r\n        try {\r\n            const response = await getAllEvents();\r\n            if (response && response.data && response.data.errCode === 0) {\r\n                setEvents(response.data.data);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching events:\", error);\r\n            toast.error(\"Không thể tải danh sách sự kiện\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    return (\r\n        <div className=\"react-upcoming__event react-upcoming__event_page blog__area pt---100 pb---112\">\r\n            <div className=\"container\">  \r\n                <div className=\"row align-items-center back-vertical-middle shorting__course3 mb-50\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"all__icons\">                                   \r\n                            <div className=\"result-count\">Các Hoạt Động Của Đội</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 text-right\">                                \r\n                        <select className=\"from-control\">\r\n                            <option>Event Type: All</option>\r\n                            <option>Sort by popularity</option>\r\n                            <option>Sort by average rating</option>\r\n                            <option>Sort by lates</option>\r\n                            <option>Sort by price: low to high</option>\r\n                            <option>Sort by price: high to low</option>\r\n                        </select>\r\n                    </div>\r\n                </div>                      \r\n                <div className=\"row\">\r\n                    {events.map((data, index) => {\r\n                        return (\r\n                            <div className=\"col-lg-3\">\r\n                                <SingleEvent\r\n                                      key={data.id}\r\n                                      eventID={data.id}\r\n                                      eventImg={data.eventMarkdown?.image || ''}\r\n                                      eventTitle={data.name}\r\n                                      eventDate={data.date}\r\n                                      eventLocation={data.address}\r\n                                      eventType={data.eventType?.valueVi}\r\n                                      eventStatus={data.status?.valueVi}\r\n                                      eventDescription={data.eventMarkdown?.description}\r\n                                      eventCost={data.cost}\r\n                                      eventQuantityMember={data.quantityMember}\r\n                                      eventBtnText=\"Xem chi tiết\"\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }).slice(0, 12)}\r\n                </div>  \r\n                <ul className=\"back-pagination pt---20\">\r\n                    <li><Link to=\"#\">1</Link></li>\r\n                    <li><Link to=\"#\">2</Link></li>\r\n                    <li className=\"back-next\"><Link to=\"#\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-arrow-right\"><line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line><polyline points=\"12 5 19 12 12 19\"></polyline></svg></Link></li>\r\n                </ul>                                          \r\n            </div>\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default EventMain;","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Event\\event-details.js",["1059"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Breadcrumb from \"../../components/Breadcrumb/EventBreadcrumbs\";\r\nimport EventDetailsMain from \"./EventDetailsMain\";\r\nimport ScrollToTop from \"../../components/ScrollTop\";\r\nimport { getRecentEvents, getAllEvents } from \"../../services/eventServices\";\r\nimport { toast } from \"react-toastify\";\r\nimport Logo from \"../../assets/images/logos/logo2.png\";\r\nimport \"./EventDetails.scss\"; // Tạo file CSS mới cho component này\r\n\r\nclass EventDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            event: null,\r\n            isLoading: true,\r\n            eventNotFound: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // Lấy ID từ URL params\r\n        const { match } = this.props;\r\n        const eventId = match.params.id;\r\n        \r\n        if (eventId) {\r\n            await this.fetchEventDetail(eventId);\r\n        }\r\n    }\r\n\r\n    fetchEventDetail = async (eventId) => {\r\n        try {\r\n            // Gọi API lấy thông tin sự kiện\r\n            const response = await getAllEvents();\r\n            \r\n            if (response && response.data.errCode === 0) {\r\n                const eventData = response.data.data.find(\r\n                    (e) => e.id === Number(eventId)\r\n                );\r\n                \r\n                if (eventData) {\r\n                    this.setState({\r\n                        event: eventData,\r\n                        isLoading: false,\r\n                    });\r\n                } else {\r\n                    // Đánh dấu sự kiện không tìm thấy thay vì chuyển hướng ngay\r\n                    this.setState({\r\n                        eventNotFound: true,\r\n                        isLoading: false,\r\n                    });\r\n                    toast.error(\"Không tìm thấy sự kiện\");\r\n                    \r\n                    // Trì hoãn chuyển hướng để toast hiển thị\r\n                    setTimeout(() => {\r\n                        this.props.history.push(\"/event\");\r\n                    }, 2000);\r\n                }\r\n            } else {\r\n                toast.error(\"Không thể tải thông tin sự kiện\");\r\n                this.setState({ isLoading: false });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            toast.error(\"Đã xảy ra lỗi khi tải thông tin sự kiện\");\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n\r\n    renderLoading = () => {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Đang tải...</span>\r\n                </div>\r\n                <p className=\"loading-text\">Đang tải thông tin sự kiện...</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderEventNotFound = () => {\r\n        return (\r\n            <div className=\"event-not-found\">\r\n                <div className=\"container\">\r\n                    <div className=\"error-container\">\r\n                        <div className=\"error-icon\">\r\n                            <i className=\"fas fa-exclamation-triangle\"></i>\r\n                        </div>\r\n                        <h3>Không tìm thấy sự kiện</h3>\r\n                        <p>Sự kiện bạn đang tìm kiếm không tồn tại hoặc đã bị xóa.</p>\r\n                        <p>Đang chuyển hướng về trang sự kiện...</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderEventContent = () => {\r\n        const { event } = this.state;\r\n        console.log(\"Event Data:\", event);\r\n        // console.log(\"Event Details:\", event);\r\n        return (\r\n            <div className=\"course-single\">\r\n                <Header\r\n                    parentMenu=\"event\"\r\n                    headerNormalLogo={Logo}\r\n                    headerStickyLogo={Logo}\r\n                />\r\n                <div className=\"react-wrapper\">\r\n                    <div className=\"react-wrapper-inner\">\r\n                        <Breadcrumb\r\n                            eventID={event.id}\r\n                            eventImg={event.eventMarkdown?.image}\r\n                            eventBannerImg={event.eventMarkdown?.image}\r\n                            eventDate={event.date}\r\n                            eventStartTime={event.startTime || \"08:00\"}\r\n                            eventEndTime={event.endTime || \"17:00\"}\r\n                            eventCategory={event.eventType?.valueVi || \"Sự kiện\"}\r\n                            eventTitle={event.name}\r\n                            eventLocation={event.address}\r\n                        />\r\n\r\n                        <EventDetailsMain\r\n                            eventID={event.id}\r\n                            eventImg={event.eventMarkdown?.image}\r\n                            eventBannerImg={event.eventMarkdown?.image}\r\n                            eventDate={event.date}\r\n                            eventStartTime={event.startTime || \"08:00\"}\r\n                            eventEndTime={event.endTime || \"17:00\"}\r\n                            eventCategory={event.eventType?.valueVi}\r\n                            eventTitle={event.name}\r\n                            eventLocation={event.address}\r\n                            eventCost={event.cost || \"0\"}\r\n                            eventStatus={event.statusCode}\r\n                            eventHost={\"CTES\"}\r\n                            eventTotalSlot={event.quantityMember || 0}\r\n                            eventBookedSlot={event.registrationCount || 0}\r\n                            eventContactNo={event.contactPerson || \"0123456789\"}\r\n                            eventDescription={event.eventMarkdown?.description}\r\n                            eventContent={event.eventMarkdown?.contentHTML}\r\n                        />\r\n\r\n                        <ScrollToTop />\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { isLoading, event, eventNotFound } = this.state;\r\n\r\n        // Hiển thị loading\r\n        if (isLoading) {\r\n            return this.renderLoading();\r\n        }\r\n        \r\n        // Hiển thị thông báo không tìm thấy sự kiện\r\n        if (eventNotFound || !event) {\r\n            return this.renderEventNotFound();\r\n        }\r\n        \r\n        // Hiển thị chi tiết sự kiện\r\n        return this.renderEventContent();\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDetails);","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Event\\EventDetailsMain.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\UserManage.js",["1060"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistration\\index.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistration\\ContactMain.js",[],["1061","1062"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistration\\ContactInfo.js",["1063","1064","1065","1066","1067","1068"],"import React from 'react';\r\n\r\n\r\nimport infoImg1 from '../../assets/images/contact/2.png'\r\nimport infoImg2 from '../../assets/images/contact/3.png'\r\nimport infoImg3 from '../../assets/images/contact/4.png'\r\n\r\nconst ContactInfo = (props) => {\r\n    const { contactBoxClass } = props;\r\n    return (\r\n        <ul className=\"address-sec\">\r\n            <li>\r\n                <em className=\"icon\"><img src={infoImg1} alt=\"image\" /></em>\r\n                <span className=\"text\"><em>Address</em> 1800 Abbot Kinney Blvd. Unit D<br/> & E Venice</span>\r\n            </li>\r\n            <li>\r\n                <em className=\"icon\"><img src={infoImg2} alt=\"image\" /></em>\r\n                <span className=\"text\"><em>Contact</em> <a href=\"#\">Mobile: (+88) - 1990 - 6886</a> <a href=\"#\">Mail: contact@echooling.com</a></span>\r\n            </li>\r\n            <li>\r\n                <em className=\"icon\"><img src={infoImg3} alt=\"image\" /></em>\r\n                <span className=\"text\"><em>Hour of operation</em> Monday - Friday: 09:00 - 20:00 <br/>Sunday & Junday: 10:30 - 22:00</span>\r\n            </li>\r\n        </ul>\r\n    );\r\n\r\n}\r\n\r\nexport default ContactInfo;","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistration\\ContactForm.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistrationDetails\\EventRegistrationDetails.js",["1069"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\EventRegistrationDetails\\EventRegistrationList.js",["1070"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./EventRegistrationList.scss\"; // Tạo file SCSS riêng cho component\r\nimport { updateEventRegistration } from \"../../services/eventServices\";\r\nimport { getEventRegistrationsById } from \"../../services/eventServices\";\r\nimport { deleteEventRegistration } from \"../../services/eventServices\";\r\n\r\nclass EventRegistrationList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expandedRow: null,\r\n            searchTerm: \"\",\r\n            isEditing: false,\r\n            editingRegistration: null,\r\n            showConfirmDelete: false,\r\n            deleteId: null,\r\n        };\r\n    }\r\n    // 1. Hàm mở modal chỉnh sửa\r\n    handleEditRegistration = (registration) => {\r\n        if (!this.canModifyRegistration(registration)) {\r\n            toast.warning(\"Bạn không có quyền chỉnh sửa đăng ký này!\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            isEditing: true,\r\n            editingRegistration: { ...registration },\r\n        });\r\n\r\n        console.log(this.state.editingRegistration);\r\n    };\r\n    // Hàm đóng modal chỉnh sửa\r\n    handleCloseEdit = () => {\r\n        this.setState({\r\n            isEditing: false,\r\n            editingRegistration: null,\r\n        });\r\n    };\r\n\r\n    // 3. Hàm cập nhật thông tin đang chỉnh sửa\r\n    handleEditChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState((prevState) => ({\r\n            editingRegistration: {\r\n                ...prevState.editingRegistration,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    handleSaveEdit = async () => {\r\n        try {\r\n            const { editingRegistration } = this.state;\r\n            // Gọi API cập nhật thông tin đăng ký\r\n            // Giả định bạn có service updateEventRegistration\r\n            const response = await updateEventRegistration(editingRegistration);\r\n            console.log(\"check response updateEventRegistration\", response);\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(\"Cập nhật thông tin đăng ký thành công\");\r\n                if (this.props.onRefreshData) {\r\n                    await this.props.onRefreshData();\r\n                }\r\n\r\n                this.handleCloseEdit();\r\n            } else {\r\n                toast.error(response.data.errMessage || \"Cập nhật không thành công\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi cập nhật thông tin đăng ký:\", error);\r\n            toast.error(\"Đã xảy ra lỗi khi cập nhật thông tin\");\r\n        }\r\n    };\r\n\r\n    // Thêm hàm kiểm tra quyền cho phép chỉnh sửa hoặc xóa đăng ký\r\n    canModifyRegistration = (registration) => {\r\n        const { userInforr } = this.props;\r\n\r\n        // Nếu không có thông tin người dùng đăng nhập, không cho phép chỉnh sửa\r\n        if (!userInforr) return false;\r\n\r\n        // Admin (roleId = R1) có thể chỉnh sửa tất cả\r\n        if (userInforr.roleId === \"R1\") return true;\r\n\r\n        // Người dùng thường chỉ được chỉnh sửa đăng ký của chính mình\r\n        return userInforr.id === registration.userId;\r\n    };\r\n    // // 1. Hàm mở modal chỉnh sửa\r\n    // handleEditRegistration = (registration) => {\r\n    //     if (!this.canModifyRegistration(registration)) {\r\n    //         toast.warning(\"Bạn không có quyền chỉnh sửa đăng ký này!\");\r\n    //         return;\r\n    //     }\r\n    //     this.setState({\r\n    //         isEditing: true,\r\n    //         editingRegistration: { ...registration },\r\n    //     });\r\n    // };\r\n    // 5. Hàm xác nhận xóa đăng ký\r\n    handleConfirmDelete = (registration) => {\r\n        this.setState({\r\n            showConfirmDelete: true,\r\n            deleteId: { ...registration },\r\n        });\r\n        console.log(this.state.deleteId);\r\n    };\r\n\r\n    // 6. Hàm hủy xóa đăng ký\r\n    handleCancelDelete = () => {\r\n        this.setState({\r\n            showConfirmDelete: false,\r\n            deleteId: null,\r\n        });\r\n    };\r\n\r\n    // 7. Hàm thực hiện xóa đăng ký\r\n    handleDeleteRegistration = async () => {\r\n        try {\r\n            const { deleteId } = this.state;\r\n            console.log(\"check state\", this.state);\r\n            // Gọi API xóa đăng ký\r\n            // Giả định bạn có service deleteEventRegistration\r\n            const response = await deleteEventRegistration(deleteId);\r\n\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(\"Xóa đăng ký thành công\");\r\n\r\n                // Cập nhật lại danh sách đăng ký trong props\r\n                // Hoặc gọi lại API để lấy danh sách mới\r\n                if (this.props.onRefreshData) {\r\n                    this.props.onRefreshData();\r\n                }\r\n\r\n                this.handleCancelDelete();\r\n            } else {\r\n                toast.error(response.data.errMessage || \"Xóa đăng ký không thành công\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi xóa đăng ký:\", error);\r\n            toast.error(\"Đã xảy ra lỗi khi xóa đăng ký\");\r\n        }\r\n    };\r\n\r\n    // Toggle mở rộng hàng\r\n    toggleRow = (id) => {\r\n        this.setState((prevState) => ({\r\n            expandedRow: prevState.expandedRow === id ? null : id,\r\n        }));\r\n    };\r\n\r\n    // Format date\r\n    formatDate = (dateString) => {\r\n        return new Date(dateString).toLocaleDateString(\"vi-VN\");\r\n    };\r\n\r\n    // Format cost to VND\r\n    formatCost = (cost) => {\r\n        if (!cost) return \"0 VND\";\r\n        return new Intl.NumberFormat(\"vi-VN\", {\r\n            style: \"currency\",\r\n            currency: \"VND\",\r\n        }).format(parseFloat(cost));\r\n    };\r\n\r\n    // Lọc danh sách đăng ký\r\n    getFilteredRegistrations = () => {\r\n        const { eventRegistrationData } = this.props;\r\n        const { searchTerm } = this.state;\r\n\r\n        if (!eventRegistrationData || !Array.isArray(eventRegistrationData) || eventRegistrationData.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        return eventRegistrationData.filter((reg) => {\r\n            // Tìm kiếm theo tên, email hoặc số điện thoại\r\n            if (searchTerm) {\r\n                const searchLower = searchTerm.toLowerCase();\r\n                return reg.name.toLowerCase().includes(searchLower) || reg.email.toLowerCase().includes(searchLower) || reg.phoneNumber.includes(searchLower);\r\n            }\r\n\r\n            return true;\r\n        });\r\n    };\r\n\r\n    // Xử lý thay đổi bộ lọc\r\n    handleFilterChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    render() {\r\n        const { eventData, eventRegistrationData } = this.props;\r\n        const { expandedRow, searchTerm, isEditing, editingRegistration, showConfirmDelete } = this.state;\r\n\r\n        // console.log(\"check edit\", this.props);\r\n        if (!eventData || !eventRegistrationData) {\r\n            return (\r\n                <div className=\"loading-container\">\r\n                    <div className=\"spinner-border text-primary\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Đang tải...</span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const filteredRegistrations = this.getFilteredRegistrations();\r\n        console.log(\"check filteredRegistrations\", filteredRegistrations);\r\n        return (\r\n            <div className=\"event-registration-container\">\r\n                <div className=\"container-fuild\">\r\n                    {/* Bộ lọc danh sách đăng ký */}\r\n                    <div className=\"registration-filter-container \">\r\n                        <h3>Danh sách người đăng ký ({filteredRegistrations.length})</h3>\r\n                    </div>\r\n\r\n                    {/* Bảng danh sách người đăng ký */}\r\n                    <div className=\"registration-table-container\">\r\n                        <div className=\"card-header\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Tìm kiếm:</label>\r\n                                                <div className=\"search-input\">\r\n                                                    <i className=\"fas fa-search\"></i>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Tên, email, số điện thoại...\"\r\n                                                        name=\"searchTerm\"\r\n                                                        value={searchTerm}\r\n                                                        onChange={this.handleFilterChange}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <button className=\"btn btn-success\">\r\n                                    <i className=\"fas fa-file-excel\"></i> Xuất Excel\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"table-responsive\">\r\n                                {filteredRegistrations.length > 0 ? (\r\n                                    <table className=\"table table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">#</th>\r\n                                                <th scope=\"col\">Người đăng ký</th>\r\n                                                <th scope=\"col\">Email</th>\r\n                                                <th scope=\"col\">Số điện thoại</th>\r\n                                                <th scope=\"col\">Ngày đăng ký</th>\r\n                                                <th scope=\"col\">Trạng thái</th>\r\n                                                <th scope=\"col\">Phương thức</th>\r\n                                                <th scope=\"col\">Chi tiết</th>\r\n                                                <th scope=\"col\">Điểm danh</th>\r\n                                                <th scope=\"col\">Ngày điểm danh</th>\r\n                                                <th scope=\"col\" style={{ width: \"150px\" }}>\r\n                                                    Thao tác\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {filteredRegistrations.map((registration, index) => (\r\n                                                <React.Fragment key={registration.id}>\r\n                                                    <tr>\r\n                                                        <td>{index + 1}</td>\r\n                                                        <td>{registration.name}</td>\r\n                                                        <td>{registration.email}</td>\r\n                                                        <td>{registration.phoneNumber}</td>\r\n                                                        <td>{this.formatDate(registration.registeredAt)}</td>\r\n                                                        <td>\r\n                                                            <span className={`status-badge ${registration.statusCostCode === \"PS1\" ? \"paid\" : \"unpaid\"}`}>\r\n                                                                {registration.statusCost.valueVi}\r\n                                                            </span>\r\n                                                        </td>\r\n                                                        <td>{registration.payMethod.valueVi}</td>\r\n                                                        <td>\r\n                                                            <button className=\"btn btn-sm btn-outline-primary\" onClick={() => this.toggleRow(registration.id)}>\r\n                                                                <i className={`fas fa-chevron-${expandedRow === registration.id ? \"up\" : \"down\"}`}></i>\r\n                                                            </button>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <div className=\"attendance-toggle\">\r\n                                                                <div className=\"form-check form-switch\">\r\n                                                                    <input\r\n                                                                        className=\"form-check-input\"\r\n                                                                        type=\"checkbox\"\r\n                                                                        id={`attendance-${registration.id}`}\r\n                                                                        checked={registration.attendanceStatus === 1}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {registration.attendanceTime\r\n                                                                ? this.formatDate(registration.attendanceTime) +\r\n                                                                  \" \" +\r\n                                                                  new Date(registration.attendanceTime).toLocaleTimeString(\"vi-VN\", { hour: \"2-digit\", minute: \"2-digit\" })\r\n                                                                : \"-\"}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {this.canModifyRegistration(registration) ? (\r\n                                                                <>\r\n                                                                    <button\r\n                                                                        className=\"btn btn-sm btn-primary me-1\"\r\n                                                                        title=\"Chỉnh sửa\"\r\n                                                                        onClick={() => this.handleEditRegistration(registration)}\r\n                                                                    >\r\n                                                                        <i className=\"fas fa-edit\"></i>\r\n                                                                    </button>\r\n                                                                    <button className=\"btn btn-sm btn-danger\" title=\"Xóa\" onClick={() => this.handleConfirmDelete(registration)}>\r\n                                                                        <i className=\"fas fa-trash\"></i>\r\n                                                                    </button>\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                <button\r\n                                                                    className=\"btn btn-sm btn-secondary\"\r\n                                                                    title=\"Không có quyền chỉnh sửa\"\r\n                                                                    // disabled\r\n                                                                    onClick={() => this.handleEditRegistration(registration)}\r\n                                                                >\r\n                                                                    <i className=\"fas fa-lock\"></i>\r\n                                                                </button>\r\n                                                            )}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    {expandedRow === registration.id && (\r\n                                                        <tr className=\"expanded-row\">\r\n                                                            <td colSpan=\"8\">\r\n                                                                <div className=\"expanded-content\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col-md-6\">\r\n                                                                            <div className=\"user-info\">\r\n                                                                                <h5>Thông tin người dùng</h5>\r\n                                                                                <ul>\r\n                                                                                    <li>\r\n                                                                                        <strong>ID:</strong> {registration.userId}\r\n                                                                                    </li>\r\n                                                                                    <li>\r\n                                                                                        <strong>Họ:</strong> {registration.User?.firstName || \"-\"}\r\n                                                                                    </li>\r\n                                                                                    <li>\r\n                                                                                        <strong>Tên:</strong> {registration.User?.lastName || \"-\"}\r\n                                                                                    </li>\r\n                                                                                    <li>\r\n                                                                                        <strong>Địa chỉ:</strong> {registration.User?.address || \"-\"}\r\n                                                                                    </li>\r\n                                                                                </ul>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-md-6\">\r\n                                                                            <div className=\"note-info\">\r\n                                                                                <h5>Ghi chú</h5>\r\n                                                                                <div className=\"note-content\">\r\n                                                                                    {registration.notes ? registration.notes : <em>Không có ghi chú</em>}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </React.Fragment>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                ) : (\r\n                                    <div className=\"no-results\">\r\n                                        <i className=\"fas fa-search\"></i>\r\n                                        <p>Không tìm thấy kết quả phù hợp với bộ lọc.</p>\r\n                                        {eventRegistrationData.length === 0 && <p>Chưa có người đăng ký tham gia sự kiện này.</p>}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Modal chỉnh sửa đăng ký */}\r\n                {isEditing && editingRegistration && (\r\n                    <div className=\"modal-backdrop edit-modal-backdrop\">\r\n                        <div className=\"edit-modal\">\r\n                            <div className=\"edit-modal-content\">\r\n                                <div className=\"edit-modal-header\">\r\n                                    <h4>Chỉnh sửa thông tin đăng ký</h4>\r\n                                    <button type=\"button\" className=\"close-btn\" onClick={this.handleCloseEdit}>\r\n                                        <i className=\"fas fa-times\"></i>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"edit-modal-body\">\r\n                                    <form>\r\n                                        <div className=\"row mb-3\">\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <label>Họ tên:</label>\r\n                                                <input type=\"text\" name=\"name\" className=\"form-control\" value={editingRegistration.name} onChange={this.handleEditChange} />\r\n                                            </div>\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <label>Email:</label>\r\n                                                <input type=\"email\" name=\"email\" className=\"form-control\" value={editingRegistration.email} onChange={this.handleEditChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row mb-3\">\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <label>Số điện thoại:</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"phoneNumber\"\r\n                                                    className=\"form-control\"\r\n                                                    value={editingRegistration.phoneNumber}\r\n                                                    onChange={this.handleEditChange}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <label>Ngày đăng ký:</label>\r\n                                                <div className=\"input-with-icon disabled-field\">\r\n                                                    <input\r\n                                                        type=\"date\"\r\n                                                        name=\"registeredAt\"\r\n                                                        className=\"form-control\"\r\n                                                        value={editingRegistration.registeredAt ? new Date(editingRegistration.registeredAt).toISOString().split(\"T\")[0] : \"\"}\r\n                                                        disabled\r\n                                                    />\r\n                                                </div>\r\n                                                <small className=\"text-muted\">Ngày đăng ký không thể thay đổi</small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row mb-3\">\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <label>Trạng thái thanh toán:</label>\r\n                                                <select name=\"statusCostCode\" className=\"form-select\" value={editingRegistration.statusCostCode} onChange={this.handleEditChange}>\r\n                                                    <option value=\"PS1\">Đã thanh toán</option>\r\n                                                    <option value=\"PS2\">Chưa thanh toán</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <label>Phương thức thanh toán:</label>\r\n                                                <select name=\"payMethodCode\" className=\"form-select\" value={editingRegistration.payMethodCode} onChange={this.handleEditChange}>\r\n                                                    <option value=\"PM1\">Tiền mặt</option>\r\n                                                    <option value=\"PM2\">Chuyển khoản</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"mb-3\">\r\n                                            <label>Ghi chú:</label>\r\n                                            <textarea\r\n                                                name=\"notes\"\r\n                                                className=\"form-control\"\r\n                                                value={editingRegistration.notes || \"\"}\r\n                                                onChange={this.handleEditChange}\r\n                                                rows=\"3\"\r\n                                            ></textarea>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"edit-modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleCloseEdit}>\r\n                                        Hủy\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSaveEdit}>\r\n                                        Lưu thay đổi\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Modal xác nhận xóa */}\r\n                {showConfirmDelete && (\r\n                    <div className=\"modal-backdrop delete-modal-backdrop\">\r\n                        <div className=\"delete-confirm-modal\">\r\n                            <div className=\"delete-modal-content\">\r\n                                <div className=\"delete-modal-header\">\r\n                                    <h4>Xác nhận xóa</h4>\r\n                                </div>\r\n                                <div className=\"delete-modal-body\">\r\n                                    <p>Bạn có chắc chắn muốn xóa đăng ký này không?</p>\r\n                                    <p>Hành động này không thể hoàn tác.</p>\r\n                                </div>\r\n                                <div className=\"delete-modal-footer\">\r\n                                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleCancelDelete}>\r\n                                        Hủy\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.handleDeleteRegistration}>\r\n                                        Xóa\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        userInforr: state.user.userInforr,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EventRegistrationList);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Breadcrumb\\BlogBreadcrumbs.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\UserDescription.js",["1071","1072","1073"],"import React, { Component } from \"react\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createUserDescription } from \"../../services/userServices\";\r\nimport { getAllUsers } from \"../../services/userServices\";\r\nimport { getAllCodes } from \"../../services/userServices\";\r\nimport { languages } from \"../../utils/constant\";\r\nimport * as actions from \"../../../src/store/actions\";\r\nimport Select from \"react-select\";\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass UserDescription extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contentMarkdown: \"\",\r\n            contentHTML: \"\",\r\n            description: \"\",\r\n            selectedPosition: null,\r\n            selectedUser: null,\r\n            image: \"\",\r\n            positions: [],\r\n            users: []\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await getAllUsers();\r\n            console.log(\"API Response:\", response); // Kiểm tra response\r\n    \r\n            if (response && response.data && response.data.errCode === 0) {\r\n                const users = response.data.data;\r\n                console.log(\"Users data:\", users); // Kiểm tra data\r\n                \r\n                this.setState({\r\n                    users: this.buildSelectOptions(users)\r\n                });\r\n            } else {\r\n                toast.error(\"Failed to fetch event types\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n            toast.error(\"Error loading data\");\r\n        }\r\n    }\r\n\r\n    buildSelectOptions = (items) => {\r\n        return items.map(item => ({\r\n            value: item.id,\r\n            label: `${item.firstName} ${item.lastName || ''}`.trim()// Trim whitespace\r\n        }));\r\n    };\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html\r\n        });\r\n    };\r\n    handleImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            this.setState({ image: reader.result });\r\n        };\r\n    };\r\n\r\n    handleSaveContent = async () => {\r\n        const { contentHTML, contentMarkdown, description, \r\n                 selectedUser, image } = this.state;\r\n\r\n        if (!selectedUser) {\r\n            toast.error(\"Please select an event\");\r\n            return;\r\n        }\r\n        console.log(\"check state\", this.state)\r\n\r\n        try {\r\n            const response = await createUserDescription({\r\n                contentHTML,\r\n                contentMarkdown,\r\n                description,\r\n                userId: selectedUser.value,\r\n                image\r\n            });\r\n\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(\"Save description successfully!\");\r\n                this.setState({\r\n                    contentMarkdown: \"\",\r\n                    contentHTML: \"\",\r\n                    description: \"\",\r\n                    selectedPosition: null,\r\n                    selectedUser: null,\r\n                    image: \"\"\r\n                });\r\n            } else {\r\n                toast.error(response.data.errMessage);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error saving content:\", error);\r\n            toast.error(\"Error saving content\");\r\n        }\r\n    };\r\n    render() {\r\n        console.log(\"check state\", this.state)\r\n        const { selectedUser, users } = this.state;\r\n\r\n        return (\r\n            <div className=\"event-description-container p-4\">\r\n                <h2 className=\"text-center mb-4\">User Description Editor</h2>\r\n                \r\n                <div className=\"row mb-4\">\r\n                    <div className=\"col-md-6\">\r\n                        <label className=\"form-label\">users:</label>\r\n                        <Select\r\n                            value={selectedUser}\r\n                            onChange={(option) => this.setState({ selectedUser: option })}\r\n                            options={users}\r\n                            className=\"basic-select\"\r\n                            placeholder=\"Select users\"\r\n                            isSearchable={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-4\">\r\n                    <label className=\"form-label\">Short Description:</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        rows=\"3\"\r\n                        value={this.state.description}\r\n                        onChange={(e) => this.setState({ description: e.target.value })}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                <div className=\"mb-4\">\r\n                    <label className=\"form-label\">Featured Image:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={this.state.image}\r\n                        accept=\"image/*\"\r\n                        onChange={(e) => this.setState({ image: e.target.value })}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"markdown-editor mb-4\">\r\n                    <label className=\"form-label\">Detailed Description:</label>\r\n                    <MdEditor\r\n                        style={{ height: \"500px\" }}\r\n                        renderHTML={(text) => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={this.state.contentMarkdown}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.handleSaveContent}\r\n                >\r\n                    Save Description\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    language: state.app.language\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserDescription);","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\routes\\Profile.js",["1074","1075","1076","1077","1078","1079"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport ManageList from \"../containers/UserProfile/ManageList\"\r\nimport UserList from \"../containers/UserProfile/UserList\"\r\nimport UserProfile from \"../containers/UserProfile/UserProfile\"\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass System extends Component {\r\n    componentDidMount() {\r\n        const { userInfo, history } = this.props;\r\n        // Kiểm tra nếu không phải là Admin thì chuyển hướng và hiển thị thông báo\r\n        // if (userInfo && userInfo.roleId !== 'R1') {\r\n        //     history.push('/home');\r\n        // }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Kiểm tra thay đổi trong userInfo hoặc trạng thái đăng nhập\r\n        const { userInfo, isLoggedIn, history } = this.props;\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        console.log(isLoggedIn)\r\n        \r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"system-container\">\r\n                    <div className=\"system-list\">\r\n                        <Switch>\r\n                            <Route\r\n                                path=\"/user-profile/manage-list\"\r\n                                component={ManageList}\r\n                            />\r\n                            <Route\r\n                                path=\"/user-profile/profile/:id\"\r\n                                component={UserProfile}\r\n                            />\r\n                            <Route\r\n                                path=\"/user-profile\"\r\n                                component={UserList}\r\n                            />\r\n                          \r\n                            <Route\r\n                                component={() => {\r\n                                    return <Redirect to=\"/user-profile\" />;\r\n                                }}\r\n                            />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInfo: state.user.userInforr,  // Lấy thông tin người dùng từ Redux store\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(System);","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\ManageList.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\ManageListMain.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Course\\SingleCourseList.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Course\\SingleCourseThree.js",["1080"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\UserList.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\UserListMain.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\UserProfile.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\UserProfile\\UserProfileMain.js",["1081","1082","1083","1084"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUp from \"react-countup\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport \"./UserProfileMain.scss\"; // Import file SCSS mới\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faExclamationTriangle, faFacebook, faTwitter, faLinkedin } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass UserProfileMain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewedCounter: false,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Hiển thị trạng thái đang tải\r\n     * @returns {JSX.Element} Component hiển thị loading\r\n     */\r\n    renderLoading = () => {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Đang tải...</span>\r\n                </div>\r\n                <p className=\"mt-3\">Đang tải thông tin chi tiết...</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Hiển thị thông báo lỗi\r\n     * @returns {JSX.Element} Component thông báo lỗi\r\n     */\r\n    renderError = () => {\r\n        return (\r\n            <div className=\"error-container\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    <FontAwesomeIcon icon={faExclamationTriangle} className=\"me-2\" />\r\n                    {this.props.error || \"Không tìm thấy thông tin người dùng\"}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Hiển thị thống kê người dùng với hiệu ứng đếm\r\n     * @param {Array} stats - Mảng các thông số thống kê\r\n     * @returns {JSX.Element} Component thống kê người dùng\r\n     */\r\n    renderUserStats = (stats) => {\r\n        const { viewedCounter } = this.state;\r\n\r\n        return (\r\n            <div className=\"stats-area mt-4\">\r\n                <ul className=\"row\">\r\n                    {stats.map((stat, index) => (\r\n                        <li key={index} className=\"col-12 mb-3\">\r\n                            <div className=\"count__content\">\r\n                                <div className=\"text\">\r\n                                    <VisibilitySensor\r\n                                        partialVisibility\r\n                                        offset={{ bottom: 200 }}\r\n                                        onChange={(isVisible) => {\r\n                                            if (isVisible && !this.state.viewedCounter) {\r\n                                                this.setState({ viewedCounter: true });\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        {({ isVisible }) => (\r\n                                            <div>\r\n                                                <CountUp start={0} end={isVisible || viewedCounter ? stat.countNum : 0} duration={2.5} suffix={stat.countSubtext} redraw={false}>\r\n                                                    {({ countUpRef }) => <span className=\"counter\" ref={countUpRef}></span>}\r\n                                                </CountUp>\r\n                                                <p>{stat.countTitle}</p>\r\n                                            </div>\r\n                                        )}\r\n                                    </VisibilitySensor>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { loading, error, userInfo } = this.props;\r\n\r\n        // Hiển thị trạng thái loading\r\n        if (loading) {\r\n            return (\r\n                <div className=\"profile-container\">\r\n                    <div className=\"container\">{this.renderLoading()}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Hiển thị lỗi nếu có\r\n        if (error || !userInfo) {\r\n            return (\r\n                <div className=\"profile-container\">\r\n                    <div className=\"container\">{this.renderError()}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Dữ liệu thống kê người dùng\r\n        const userStats = [\r\n            {\r\n                countNum: 85,\r\n                countTitle: \"Điểm tích lũy\",\r\n                countSubtext: \"%\",\r\n            },\r\n            {\r\n                countNum: 24,\r\n                countTitle: \"Hoạt động đã tham gia\",\r\n                countSubtext: \"\",\r\n            },\r\n            {\r\n                countNum: 3,\r\n                countTitle: \"Năm kinh nghiệm\",\r\n                countSubtext: \"+\",\r\n            },\r\n        ];\r\n\r\n        // Lấy thông tin từ userInfo\r\n        const { firstName, lastName, image, positionData, roleData, email, phoneNumber, userMarkdown, genderData } = userInfo;\r\n\r\n        // Xử lý dữ liệu hiển thị\r\n        const fullName = `${firstName || \"\"} ${lastName || \"\"}`.trim();\r\n        const description = userMarkdown?.description || \"Chưa có thông tin mô tả\";\r\n        const userDetails = userMarkdown?.contentHTML || \"<p>Chưa có thông tin chi tiết</p>\";\r\n        const position = positionData?.valueVi || roleData?.valueVi || \"Thành viên\";\r\n\r\n        return (\r\n            <div className=\"profile-container\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {/* Cột trái - Hình ảnh và thống kê người dùng */}\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"profile-card\">\r\n                                {/* Hình ảnh người dùng */}\r\n                                <div className=\"user-image-container\">\r\n                                    {image ? (\r\n                                        <img\r\n                                            src={image}\r\n                                            alt={fullName}\r\n                                            className=\"img-fluid\"\r\n                                            onError={(e) => {\r\n                                                e.target.onerror = null;\r\n                                                e.target.src = require(\"../../assets/images/instructors/1.jpg\");\r\n                                            }}\r\n                                        />\r\n                                    ) : (\r\n                                        <img src={require(\"../../assets/images/instructors/1.jpg\")} alt=\"Ảnh mặc định\" className=\"img-fluid\" />\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Nút theo dõi sử dụng Bootstrap thay vì SVG */}\r\n                                <div className=\"text-center mb-4\">\r\n                                    <Link to=\"#\" className=\"follow-button\">\r\n                                        <span>Theo dõi</span>\r\n                                        <i className=\"bi bi-plus-lg plus-icon\"></i>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                {/* Phần thống kê người dùng */}\r\n                                {this.renderUserStats(userStats)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Cột phải - Thông tin chi tiết người dùng */}\r\n                        <div className=\"col-lg-8\">\r\n                            <div className=\"user-details\">\r\n                                <ul className=\"user-section\">\r\n                                    <li className=\"user\">\r\n                                        <span className=\"name\">Họ Và Tên:</span>\r\n                                        <em>{fullName}</em>\r\n                                    </li>\r\n                                    <li>\r\n                                        <span className=\"name\">Chức Vụ:</span>\r\n                                        <em>{position}</em>\r\n                                    </li>\r\n                                    {genderData && (\r\n                                        <li>\r\n                                            <span className=\"name\">Giới tính:</span>\r\n                                            <em>{genderData.valueVi || \"Chưa cập nhật\"}</em>\r\n                                        </li>\r\n                                    )}\r\n                                    <li>\r\n                                        <span className=\"name\">Điện thoại:</span>\r\n                                        <em>{phoneNumber || \"Chưa cập nhật\"}</em>\r\n                                    </li>\r\n                                    <li>\r\n                                        <span className=\"name\">Email:</span>\r\n                                        <em>{email || \"Chưa cập nhật\"}</em>\r\n                                    </li>\r\n                                    <li className=\"social\">\r\n                                        <span className=\"name\">Liên hệ:</span>\r\n                                        <em>\r\n                                            {/* Sử dụng biểu tượng từ Bootstrap */}\r\n                                            <Link to=\"#\">\r\n                                                <i className=\"bi bi-facebook\"></i>\r\n                                            </Link>\r\n                                            <Link to=\"#\">\r\n                                                <i className=\"bi bi-twitter\"></i>\r\n                                            </Link>\r\n                                            <Link to=\"#\">\r\n                                                <i className=\"bi bi-linkedin\"></i>\r\n                                            </Link>\r\n                                        </em>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                {/* Phần giới thiệu */}\r\n                                <h3>Giới thiệu</h3>\r\n                                <p>{description}</p>\r\n\r\n                                {/* Phần thông tin chi tiết */}\r\n                                <h3>Thông tin chi tiết</h3>\r\n                                <div dangerouslySetInnerHTML={{ __html: userDetails }}></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfileMain;\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Recruitment\\index.js",["1085"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Breadcrumb from \"../../components/Breadcrumb/EventBreadcrumbs\";\r\nimport ScrollToTop from \"../../components/ScrollTop\";\r\nimport Logo from \"../../assets/images/logos/logo2.png\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Recruitment.scss\";\r\n\r\nclass Recruitment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {\r\n                fullName: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                studentId: \"\",\r\n                department: \"\",\r\n                course: \"\",\r\n                reason: \"\",\r\n                experience: \"\",\r\n                expectation: \"\",\r\n                timeCommitment: \"\",\r\n                reference: \"\",\r\n            },\r\n            isSubmitting: false\r\n        };\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ isSubmitting: true });\r\n\r\n        // Giả lập API call\r\n        setTimeout(() => {\r\n            toast.success(\"Đăng ký thành công! Chúng tôi sẽ liên hệ với bạn sớm nhất.\");\r\n            this.setState({\r\n                isSubmitting: false,\r\n                formData: {\r\n                    fullName: \"\",\r\n                    email: \"\",\r\n                    phone: \"\",\r\n                    studentId: \"\",\r\n                    department: \"\",\r\n                    course: \"\",\r\n                    reason: \"\",\r\n                    experience: \"\",\r\n                    expectation: \"\",\r\n                    timeCommitment: \"\",\r\n                    reference: \"\",\r\n                }\r\n            });\r\n        }, 1500);\r\n    }\r\n\r\n    render() {\r\n        const { formData, isSubmitting } = this.state;\r\n\r\n        return(\r\n            <div className=\"recruitment-container\">\r\n                <Header \r\n                    />\r\n                <Breadcrumb\r\n                    eventBannerImg=\"https://raw.githubusercontent.com/Trantoan12022004/host_image_page_anhtonton/main/images/tuyenthanhvien.jpg\"\r\n                    eventCategory=\"Sự kiện\"\r\n                    eventDate=\"2023-10-01\"\r\n                    eventStartTime=\"09:00\"\r\n                    eventEndTime=\"17:00\"\r\n                    eventTitle=\"TUYỂN THÀNH VIÊN K17\"\r\n                    eventLocation=\"D3-HUST\"\r\n                />\r\n                \r\n                {/* Phần nội dung chính */}\r\n                <div className=\"recruitment-content\">\r\n                    <div className=\"container\">\r\n                        {/* Phần mô tả */}\r\n                        <div className=\"recruitment-description\">\r\n                            <h2>Đơn Đăng Ký Tuyển Thành Viên K17</h2>\r\n                            <p>\r\n                                Chào mừng các bạn đến với sự kiện tuyển thành viên K17 của chúng tôi! \r\n                                Đây là cơ hội tuyệt vời để bạn gia nhập vào một cộng đồng năng động và sáng tạo. \r\n                                Vui lòng điền đầy đủ thông tin bên dưới để hoàn tất đăng ký.\r\n                            </p>\r\n                        </div>\r\n                        \r\n                        {/* Form đăng ký */}\r\n                        <div className=\"recruitment-form-container\">\r\n                            <form onSubmit={this.handleSubmit} className=\"recruitment-form\">\r\n                                {/* Phần 1: Thông tin cá nhân */}\r\n                                <div className=\"form-section\">\r\n                                    <h3>Thông tin cá nhân</h3>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"fullName\">Họ và tên <span className=\"required\">*</span></label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            id=\"fullName\" \r\n                                            name=\"fullName\" \r\n                                            value={formData.fullName}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Email <span className=\"required\">*</span></label>\r\n                                        <input \r\n                                            type=\"email\" \r\n                                            id=\"email\" \r\n                                            name=\"email\" \r\n                                            value={formData.email}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"phone\">Số điện thoại <span className=\"required\">*</span></label>\r\n                                        <input \r\n                                            type=\"tel\" \r\n                                            id=\"phone\" \r\n                                            name=\"phone\" \r\n                                            value={formData.phone}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {/* Phần 2: Thông tin học tập */}\r\n                                <div className=\"form-section\">\r\n                                    <h3>Thông tin học tập</h3>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"studentId\">Mã số sinh viên <span className=\"required\">*</span></label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            id=\"studentId\" \r\n                                            name=\"studentId\" \r\n                                            value={formData.studentId}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"department\">Khoa/Viện <span className=\"required\">*</span></label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            id=\"department\" \r\n                                            name=\"department\" \r\n                                            value={formData.department}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"course\">Khóa <span className=\"required\">*</span></label>\r\n                                        <select \r\n                                            id=\"course\" \r\n                                            name=\"course\" \r\n                                            value={formData.course}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                        >\r\n                                            <option value=\"\">-- Chọn khóa --</option>\r\n                                            <option value=\"K67\">K67</option>\r\n                                            <option value=\"K68\">K68</option>\r\n                                            <option value=\"K69\">K69</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {/* Phần 3: Câu hỏi */}\r\n                                <div className=\"form-section\">\r\n                                    <h3>Thông tin bổ sung</h3>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"reason\">Lý do bạn muốn tham gia CLB chúng tôi? <span className=\"required\">*</span></label>\r\n                                        <textarea \r\n                                            id=\"reason\" \r\n                                            name=\"reason\" \r\n                                            value={formData.reason}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                            rows=\"3\"\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"experience\">Bạn đã có kinh nghiệm gì trước đây?</label>\r\n                                        <textarea \r\n                                            id=\"experience\" \r\n                                            name=\"experience\" \r\n                                            value={formData.experience}\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control\"\r\n                                            rows=\"3\"\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"expectation\">Bạn mong đợi điều gì khi tham gia CLB? <span className=\"required\">*</span></label>\r\n                                        <textarea \r\n                                            id=\"expectation\" \r\n                                            name=\"expectation\" \r\n                                            value={formData.expectation}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                            rows=\"3\"\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"timeCommitment\">Bạn có thể dành bao nhiêu thời gian cho CLB mỗi tuần? <span className=\"required\">*</span></label>\r\n                                        <select \r\n                                            id=\"timeCommitment\" \r\n                                            name=\"timeCommitment\" \r\n                                            value={formData.timeCommitment}\r\n                                            onChange={this.handleInputChange}\r\n                                            required \r\n                                            className=\"form-control\"\r\n                                        >\r\n                                            <option value=\"\">-- Chọn thời gian --</option>\r\n                                            <option value=\"1-3\">1-3 giờ</option>\r\n                                            <option value=\"4-6\">4-6 giờ</option>\r\n                                            <option value=\"7-10\">7-10 giờ</option>\r\n                                            <option value=\"10+\">Trên 10 giờ</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"reference\">Bạn biết về CLB chúng tôi từ đâu?</label>\r\n                                        <select \r\n                                            id=\"reference\" \r\n                                            name=\"reference\" \r\n                                            value={formData.reference}\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control\"\r\n                                        >\r\n                                            <option value=\"\">-- Chọn nguồn --</option>\r\n                                            <option value=\"Facebook\">Facebook</option>\r\n                                            <option value=\"Friends\">Bạn bè giới thiệu</option>\r\n                                            <option value=\"School\">Trường học</option>\r\n                                            <option value=\"Event\">Sự kiện của CLB</option>\r\n                                            <option value=\"Other\">Khác</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                {/* Nút gửi đơn */}\r\n                                <div className=\"form-submit\">\r\n                                    <button \r\n                                        type=\"submit\" \r\n                                        className=\"btn btn-primary submit-button\"\r\n                                        disabled={isSubmitting}\r\n                                    >\r\n                                        {isSubmitting ? 'Đang gửi...' : 'Gửi đơn đăng ký'}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <Footer />\r\n                <ScrollToTop />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInforr: state.user.userInforr,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Recruitment);","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HelpRequest\\index.js",["1086","1087","1088"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Breadcrumb from \"../../components/Breadcrumb/EventBreadcrumbs\";\r\nimport ScrollToTop from \"../../components/ScrollTop\";\r\nimport Logo from \"../../assets/images/logos/logo2.png\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\"; // Thêm import axios\r\nimport \"./HelpRequest.scss\";\r\nimport { createHelpRequest } from \"../../services/userServices\";\r\nimport { createNotification } from \"../../services/notificationServices\";\r\n\r\nclass HelpRequest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {\r\n                fullName: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                organization: \"\", // Thêm trường này\r\n                helpType: \"\",\r\n                urgencyLevel: \"\",\r\n                availableTime: \"\",\r\n                contactMethod: \"\",\r\n                problemDetail: \"\",\r\n                attemptedSolutions: \"\",\r\n                additionalInfo: \"\",\r\n            },\r\n            isSubmitting: false,\r\n        };\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [name]: value,\r\n            },\r\n        });\r\n    };\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({ isSubmitting: true });\r\n\r\n        try {\r\n            // Transform camelCase to snake_case for API compatibility\r\n            const apiData = {\r\n                full_name: this.state.formData.fullName,\r\n                email: this.state.formData.email,\r\n                phone: this.state.formData.phone,\r\n                organization: this.state.formData.organization,\r\n                help_type: this.state.formData.helpType,\r\n                urgency_level: this.state.formData.urgencyLevel,\r\n                available_time: this.state.formData.availableTime,\r\n                contact_method: this.state.formData.contactMethod,\r\n                problem_detail: this.state.formData.problemDetail,\r\n                attempted_solutions: this.state.formData.attemptedSolutions,\r\n                additional_info: this.state.formData.additionalInfo,\r\n            };\r\n\r\n            // Call API with transformed data\r\n            const response = await createHelpRequest(apiData);\r\n\r\n            // Check response from API\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(\"Yêu cầu đã gửi thành công! Chúng tôi sẽ phản hồi sớm nhất có thể.\");\r\n                // Lấy ID của sự kiện mới tạo từ response\r\n                const newHelpRequestId = response.data.id;\r\n\r\n                // Tạo thông báo cho tất cả người dùng về sự kiện mới\r\n                await this.createNotification(newHelpRequestId);\r\n                // Reset form\r\n                this.setState({\r\n                    formData: {\r\n                        fullName: \"\",\r\n                        email: \"\",\r\n                        phone: \"\",\r\n                        organization: \"\",\r\n                        helpType: \"\",\r\n                        urgencyLevel: \"\",\r\n                        availableTime: \"\",\r\n                        contactMethod: \"\",\r\n                        problemDetail: \"\",\r\n                        attemptedSolutions: \"\",\r\n                        additionalInfo: \"\",\r\n                    },\r\n                });\r\n            } else {\r\n                // Show error message from API\r\n                toast.error(response.data.errMessage || \"Có lỗi xảy ra khi gửi yêu cầu.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error submitting help request:\", error);\r\n            toast.error(error.response?.data?.message || \"Có lỗi xảy ra khi gửi yêu cầu. Vui lòng thử lại sau!\");\r\n        } finally {\r\n            this.setState({ isSubmitting: false });\r\n        }\r\n    };\r\n    // Hàm mới để tạo thông báo sự kiện\r\n    createNotification = async (helpRequestId) => {\r\n        try {\r\n            const notificationData = {\r\n                title: \"Nhận yêu cầu trợ giúp mới\",\r\n                message: `Yêu cầu trợ giúp từ \"${this.state.formData.fullName}\"`,\r\n                type: \"help_request\",\r\n                link: `/help-request-list`, // Đường dẫn đến chi tiết yêu cầu trợ giúp\r\n                created_by: this.state.formData.fullName, // ID của người tạo sự kiện (admin)\r\n                reference_id: helpRequestId,\r\n                reference_type: \"HELP_REQUEST\",\r\n                role_code: \"R1\",\r\n            }; \r\n\r\n            const response = await createNotification(notificationData);\r\n                if (response && response.errCode === 0) {\r\n                console.log(\"Thông báo sự kiện đã được tạo thành công:\", response.data);\r\n            } else {\r\n                console.error(\"Lỗi khi tạo thông báo:\", response.errMessage);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi tạo thông báo sự kiện:\", error);\r\n            // Không hiển thị lỗi cho người dùng vì đây là tính năng phụ\r\n        }\r\n    };\r\n    render() {\r\n        const { formData, isSubmitting } = this.state;\r\n        console.log(\"state:\", this.state); // Log form data to console for debugging\r\n\r\n        return (\r\n            <div className=\"help-request-container\">\r\n                <Header />\r\n                <Breadcrumb\r\n                    eventBannerImg=\"https://raw.githubusercontent.com/Trantoan12022004/host_image_page_anhtonton/main/images/helprequest.jpg\"\r\n                    eventCategory=\"Hỗ Trợ\"\r\n                    eventTitle=\"YÊU CẦU TRỢ GIÚP\"\r\n                    eventLocation=\"Trực tuyến\"\r\n                />\r\n\r\n                {/* Phần nội dung chính */}\r\n                <div className=\"help-request-content\">\r\n                    <div className=\"container\">\r\n                        {/* Phần mô tả */}\r\n                        <div className=\"help-request-description\">\r\n                            <h2>Mẫu Yêu Cầu Trợ Giúp</h2>\r\n                            <p>\r\n                                Bạn đang gặp khó khăn và cần sự hỗ trợ? Đừng lo lắng, chúng tôi luôn sẵn sàng giúp đỡ bạn. Hãy điền đầy đủ thông tin vào mẫu dưới đây để chúng tôi\r\n                                có thể hiểu rõ vấn đề và hỗ trợ bạn một cách hiệu quả nhất.\r\n                            </p>\r\n                        </div>\r\n\r\n                        {/* Form yêu cầu trợ giúp */}\r\n                        <div className=\"help-request-form-container\">\r\n                            <form onSubmit={this.handleSubmit} className=\"help-request-form\">\r\n                                {/* Phần 1: Thông tin cá nhân */}\r\n                                <div className=\"form-section\">\r\n                                    <h3>Thông tin liên hệ</h3>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"fullName\">\r\n                                            Họ và tên <span className=\"required\">*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"fullName\"\r\n                                            name=\"fullName\"\r\n                                            value={formData.fullName}\r\n                                            onChange={this.handleInputChange}\r\n                                            required\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Nguyễn Văn A\"\r\n                                        />\r\n                                        <small className=\"form-text text-muted\">Nhập đầy đủ họ tên để chúng tôi dễ dàng xưng hô</small>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">\r\n                                            Email <span className=\"required\">*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            value={formData.email}\r\n                                            onChange={this.handleInputChange}\r\n                                            required\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"example@mail.com\"\r\n                                        />\r\n                                        <small className=\"form-text text-muted\">Chúng tôi sẽ liên hệ qua email này</small>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"organization\">\r\n                                            Tổ chức <span className=\"required\">*</span>{\" \"}\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"organization\"\r\n                                            name=\"organization\"\r\n                                            value={formData.organization} // Sửa từ formData.phone thành formData.organization\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Tên tổ chức (nếu có)\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"phone\">\r\n                                            Số điện thoại <span className=\"required\">*</span>\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"tel\"\r\n                                            id=\"phone\"\r\n                                            name=\"phone\"\r\n                                            value={formData.phone} // Sửa từ formData.studentId thành formData.phone\r\n                                            onChange={this.handleInputChange}\r\n                                            required\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"0363870102\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Phần 2: Thông tin yêu cầu trợ giúp */}\r\n                                <div className=\"form-section\">\r\n                                    <h3>Chi tiết yêu cầu</h3>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"helpType\">\r\n                                            Loại hỗ trợ cần thiết <span className=\"required\">*</span>\r\n                                        </label>\r\n                                        <select id=\"helpType\" name=\"helpType\" value={formData.helpType} onChange={this.handleInputChange} required className=\"form-control\">\r\n                                            <option value=\"\">-- Chọn loại hỗ trợ --</option>\r\n                                            <option value=\"academic\">Học tập / Bài tập</option>\r\n                                            <option value=\"financial\">Tài chính / Học phí</option>\r\n                                            <option value=\"mental\">Tâm lý / Tư vấn</option>\r\n                                            <option value=\"technical\">Kỹ thuật / CNTT</option>\r\n                                            <option value=\"facility\">Cơ sở vật chất</option>\r\n                                            <option value=\"documents\">Thủ tục hành chính</option>\r\n                                            <option value=\"other\">Khác</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"urgencyLevel\">\r\n                                            Mức độ khẩn cấp <span className=\"required\">*</span>\r\n                                        </label>\r\n                                        <select\r\n                                            id=\"urgencyLevel\"\r\n                                            name=\"urgencyLevel\"\r\n                                            value={formData.urgencyLevel}\r\n                                            onChange={this.handleInputChange}\r\n                                            required\r\n                                            className=\"form-control\"\r\n                                        >\r\n                                            <option value=\"\">-- Chọn mức độ --</option>\r\n                                            <option value=\"low\">Thấp - Có thể đợi vài ngày</option>\r\n                                            <option value=\"medium\">Trung bình - Cần giải quyết trong tuần</option>\r\n                                            <option value=\"high\">Cao - Cần giải quyết trong 24h</option>\r\n                                            <option value=\"urgent\">Rất cao - Cần giải quyết ngay</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"problemDetail\">\r\n                                            Mô tả chi tiết vấn đề <span className=\"required\">*</span>\r\n                                        </label>\r\n                                        <textarea\r\n                                            id=\"problemDetail\"\r\n                                            name=\"problemDetail\"\r\n                                            value={formData.problemDetail}\r\n                                            onChange={this.handleInputChange}\r\n                                            required\r\n                                            className=\"form-control\"\r\n                                            rows=\"4\"\r\n                                            placeholder=\"Vui lòng mô tả chi tiết vấn đề bạn đang gặp phải...\"\r\n                                        ></textarea>\r\n                                        <small className=\"form-text text-muted\">Càng chi tiết càng giúp chúng tôi hỗ trợ tốt hơn</small>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"attemptedSolutions\">Bạn đã thử giải quyết như thế nào?</label>\r\n                                        <textarea\r\n                                            id=\"attemptedSolutions\"\r\n                                            name=\"attemptedSolutions\"\r\n                                            value={formData.attemptedSolutions}\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control\"\r\n                                            rows=\"3\"\r\n                                            placeholder=\"Các biện pháp bạn đã thử...\"\r\n                                        ></textarea>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Phần 3: Thông tin liên hệ và bổ sung */}\r\n                                <div className=\"form-section\">\r\n                                    <h3>Thông tin bổ sung</h3>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"availableTime\">Thời gian thuận tiện để liên hệ</label>\r\n                                        <select id=\"availableTime\" name=\"availableTime\" value={formData.availableTime} onChange={this.handleInputChange} className=\"form-control\">\r\n                                            <option value=\"\">-- Chọn thời gian --</option>\r\n                                            <option value=\"morning\">Buổi sáng (8h-12h)</option>\r\n                                            <option value=\"afternoon\">Buổi chiều (13h-17h)</option>\r\n                                            <option value=\"evening\">Buổi tối (18h-21h)</option>\r\n                                            <option value=\"anytime\">Bất kỳ lúc nào</option>\r\n                                            <option value=\"weekend\">Chỉ cuối tuần</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"contactMethod\">Phương thức liên hệ ưa thích</label>\r\n                                        <select id=\"contactMethod\" name=\"contactMethod\" value={formData.contactMethod} onChange={this.handleInputChange} className=\"form-control\">\r\n                                            <option value=\"\">-- Chọn phương thức --</option>\r\n                                            <option value=\"email\">Email</option>\r\n                                            <option value=\"phone\">Điện thoại</option>\r\n                                            <option value=\"messenger\">Facebook Messenger</option>\r\n                                            <option value=\"zalo\">Zalo</option>\r\n                                            <option value=\"meeting\">Gặp trực tiếp</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"additionalInfo\">Thông tin bổ sung khác</label>\r\n                                        <textarea\r\n                                            id=\"additionalInfo\"\r\n                                            name=\"additionalInfo\"\r\n                                            value={formData.additionalInfo}\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control\"\r\n                                            rows=\"3\"\r\n                                            placeholder=\"Bất kỳ thông tin nào khác mà bạn muốn chia sẻ...\"\r\n                                        ></textarea>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group form-check\">\r\n                                        <input type=\"checkbox\" className=\"form-check-input\" id=\"confirmCheck\" required />\r\n                                        <label className=\"form-check-label\" htmlFor=\"confirmCheck\">\r\n                                            Tôi xác nhận thông tin trên là chính xác và đồng ý với <a href=\"#\">chính sách bảo mật</a> của đơn vị <span className=\"required\">*</span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Nút gửi đơn */}\r\n                                <div className=\"form-submit\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary submit-button\" disabled={isSubmitting}>\r\n                                        {isSubmitting ? (\r\n                                            <>\r\n                                                <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                Đang xử lý...\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                Gửi yêu cầu trợ giúp\r\n                                                <i className=\"bi bi-send-fill ms-2\"></i>\r\n                                            </>\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Footer />\r\n                <ScrollToTop />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInforr: state.user.userInforr,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HelpRequest);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\HelpRequest\\HelpRequestList.js",["1089"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Breadcrumb from \"../../components/Breadcrumb/EventBreadcrumbs\";\r\nimport ScrollToTop from \"../../components/ScrollTop\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport \"./HelpRequest.scss\";\r\nimport { getAllHelpRequests } from \"../../services/userServices\";\r\n\r\nclass HelpRequestList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            helpRequests: [],\r\n            isLoading: true,\r\n            filters: {\r\n                status: \"all\",\r\n                urgencyLevel: \"all\",\r\n                helpType: \"all\",\r\n                searchText: \"\",\r\n            },\r\n            selectedRequest: null,\r\n            showDetailModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchHelpRequests();\r\n    }\r\n\r\n    fetchHelpRequests = async () => {\r\n        try {\r\n            this.setState({ isLoading: true });\r\n            // Gọi API để lấy danh sách yêu cầu hỗ trợ\r\n            const response = await getAllHelpRequests();\r\n            \r\n            if (response && response.data.errCode === 0) {\r\n                this.setState({\r\n                    helpRequests: response.data.data || [],\r\n                });\r\n                console.log(\"Dữ liệu yêu cầu hỗ trợ:\", response.data.data);\r\n            } else {\r\n                toast.error(\"Không thể tải danh sách yêu cầu\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching help requests:\", error);\r\n            toast.error(\"Đã xảy ra lỗi khi tải danh sách yêu cầu\");\r\n        } finally {\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n\r\n    handleViewDetail = (request) => {\r\n        this.setState({\r\n            selectedRequest: request,\r\n            showDetailModal: true\r\n        });\r\n    };\r\n\r\n    handleCloseModal = () => {\r\n        this.setState({\r\n            showDetailModal: false,\r\n            selectedRequest: null\r\n        });\r\n    };\r\n\r\n    // Hiển thị badge trạng thái\r\n    renderStatusBadge = (status) => {\r\n        let badgeClass = \"\";\r\n        let statusText = \"\";\r\n\r\n        switch (status) {\r\n            case \"pending\":\r\n                badgeClass = \"badge-warning\";\r\n                statusText = \"Chờ xử lý\";\r\n                break;\r\n            case \"processing\":\r\n                badgeClass = \"badge-info\";\r\n                statusText = \"Đang xử lý\";\r\n                break;\r\n            case \"resolved\":\r\n                badgeClass = \"badge-success\";\r\n                statusText = \"Đã giải quyết\";\r\n                break;\r\n            case \"rejected\":\r\n                badgeClass = \"badge-danger\";\r\n                statusText = \"Từ chối\";\r\n                break;\r\n            default:\r\n                badgeClass = \"badge-secondary\";\r\n                statusText = \"Không xác định\";\r\n        }\r\n\r\n        return <span className={`status-badge ${badgeClass}`}>{statusText}</span>;\r\n    };\r\n\r\n    // Hiển thị mức độ khẩn cấp\r\n    renderUrgencyBadge = (urgencyLevel) => {\r\n        let badgeClass = \"\";\r\n        let urgencyText = \"\";\r\n\r\n        switch (urgencyLevel) {\r\n            case \"low\":\r\n                badgeClass = \"badge-info\";\r\n                urgencyText = \"Thấp\";\r\n                break;\r\n            case \"medium\":\r\n                badgeClass = \"badge-primary\";\r\n                urgencyText = \"Trung bình\";\r\n                break;\r\n            case \"high\":\r\n                badgeClass = \"badge-warning\";\r\n                urgencyText = \"Cao\";\r\n                break;\r\n            case \"urgent\":\r\n                badgeClass = \"badge-danger\";\r\n                urgencyText = \"Rất cao\";\r\n                break;\r\n            default:\r\n                badgeClass = \"badge-secondary\";\r\n                urgencyText = \"Không xác định\";\r\n        }\r\n\r\n        return <span className={`urgency-badge ${badgeClass}`}>{urgencyText}</span>;\r\n    };\r\n\r\n    // Chuyển đổi help_type thành văn bản tiếng Việt\r\n    renderHelpType = (helpType) => {\r\n        switch (helpType) {\r\n            case \"academic\":\r\n                return \"Học tập / Bài tập\";\r\n            case \"financial\":\r\n                return \"Tài chính / Học phí\";\r\n            case \"mental\":\r\n                return \"Tâm lý / Tư vấn\";\r\n            case \"technical\":\r\n                return \"Kỹ thuật / CNTT\";\r\n            case \"facility\":\r\n                return \"Cơ sở vật chất\";\r\n            case \"documents\":\r\n                return \"Thủ tục hành chính\";\r\n            case \"other\":\r\n                return \"Khác\";\r\n            default:\r\n                return helpType;\r\n        }\r\n    };\r\n\r\n    // Modal chi tiết yêu cầu\r\n    renderDetailModal() {\r\n        const { selectedRequest, showDetailModal } = this.state;\r\n        if (!selectedRequest) return null;\r\n\r\n        return (\r\n            <div className={`help-request-modal ${showDetailModal ? 'show' : ''}`}>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>Chi tiết yêu cầu</h3>\r\n                        <button className=\"close-button\" onClick={this.handleCloseModal}>&times;</button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"request-info\">\r\n                            <h4>Thông tin người yêu cầu</h4>\r\n                            <p><strong>Họ tên:</strong> {selectedRequest.full_name}</p>\r\n                            <p><strong>Email:</strong> {selectedRequest.email}</p>\r\n                            <p><strong>Số điện thoại:</strong> {selectedRequest.phone}</p>\r\n                            <p><strong>Tổ chức:</strong> {selectedRequest.organization || 'Không có'}</p>\r\n                        </div>\r\n                        \r\n                        <div className=\"request-details\">\r\n                            <h4>Thông tin yêu cầu</h4>\r\n                            <p><strong>Loại hỗ trợ:</strong> {this.renderHelpType(selectedRequest.help_type)}</p>\r\n                            <p><strong>Mức độ khẩn cấp:</strong> {this.renderUrgencyBadge(selectedRequest.urgency_level)}</p>\r\n                            <p><strong>Trạng thái:</strong> {this.renderStatusBadge(selectedRequest.status)}</p>\r\n                            <p><strong>Thời gian liên hệ:</strong> {this.renderAvailableTime(selectedRequest.available_time)}</p>\r\n                            <p><strong>Phương thức liên hệ:</strong> {this.renderContactMethod(selectedRequest.contact_method)}</p>\r\n                            <p><strong>Ngày tạo:</strong> {new Date(selectedRequest.created_at).toLocaleString('vi-VN')}</p>\r\n                        </div>\r\n                        \r\n                        <div className=\"problem-details\">\r\n                            <h4>Mô tả vấn đề</h4>\r\n                            <p>{selectedRequest.problem_detail}</p>\r\n                            \r\n                            {selectedRequest.attempted_solutions && (\r\n                                <>\r\n                                    <h4>Giải pháp đã thử</h4>\r\n                                    <p>{selectedRequest.attempted_solutions}</p>\r\n                                </>\r\n                            )}\r\n                            \r\n                            {selectedRequest.additional_info && (\r\n                                <>\r\n                                    <h4>Thông tin bổ sung</h4>\r\n                                    <p>{selectedRequest.additional_info}</p>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAvailableTime = (time) => {\r\n        const timeMap = {\r\n            'morning': 'Buổi sáng (8h-12h)',\r\n            'afternoon': 'Buổi chiều (13h-17h)',\r\n            'evening': 'Buổi tối (18h-21h)',\r\n            'anytime': 'Bất kỳ lúc nào',\r\n            'weekend': 'Chỉ cuối tuần'\r\n        };\r\n        return timeMap[time] || time || 'Không xác định';\r\n    };\r\n\r\n    renderContactMethod = (method) => {\r\n        const methodMap = {\r\n            'email': 'Email',\r\n            'phone': 'Điện thoại',\r\n            'messenger': 'Facebook Messenger',\r\n            'zalo': 'Zalo',\r\n            'meeting': 'Gặp trực tiếp'\r\n        };\r\n        return methodMap[method] || method || 'Không xác định';\r\n    };\r\n\r\n    render() {\r\n        const { helpRequests, isLoading } = this.state;\r\n\r\n        return (\r\n            <div className=\"help-request-list-container\">\r\n                <Header />\r\n                <Breadcrumb\r\n                    eventBannerImg=\"https://raw.githubusercontent.com/Trantoan12022004/host_image_page_anhtonton/main/images/helprequest.jpg\"\r\n                    eventCategory=\"Hỗ Trợ\"\r\n                    eventTitle=\"DANH SÁCH YÊU CẦU HỖ TRỢ\"\r\n                    eventLocation=\"Trực tuyến\"\r\n                />\r\n                \r\n                <div className=\"help-request-list-content\">\r\n                    <div className=\"container\">\r\n                        <div className=\"section-title text-center\">\r\n                            <h2>Danh sách yêu cầu hỗ trợ</h2>\r\n                        </div>\r\n\r\n                        {isLoading ? (\r\n                            <div className=\"loading-spinner\">\r\n                                <div className=\"spinner\"></div>\r\n                                <p>Đang tải dữ liệu...</p>\r\n                            </div>\r\n                        ) : helpRequests.length > 0 ? (\r\n                            <div className=\"requests-table-container\">\r\n                                <table className=\"requests-table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>STT</th>\r\n                                            <th>Họ và tên</th>\r\n                                            <th>Loại hỗ trợ</th>\r\n                                            <th>Mức độ khẩn cấp</th>\r\n                                            <th>Trạng thái</th>\r\n                                            <th>Ngày tạo</th>\r\n                                            <th>Thao tác</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {helpRequests.map((request, index) => (\r\n                                            <tr key={request.id}>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{request.full_name}</td>\r\n                                                <td>{this.renderHelpType(request.help_type)}</td>\r\n                                                <td>{this.renderUrgencyBadge(request.urgency_level)}</td>\r\n                                                <td>{this.renderStatusBadge(request.status)}</td>\r\n                                                <td>{new Date(request.created_at).toLocaleDateString('vi-VN')}</td>\r\n                                                <td>\r\n                                                    <button \r\n                                                        className=\"btn-view-detail\"\r\n                                                        onClick={() => this.handleViewDetail(request)}\r\n                                                    >\r\n                                                        Xem chi tiết\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"no-data-message\">\r\n                                <p>Không có yêu cầu hỗ trợ nào được tìm thấy.</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                \r\n                {this.renderDetailModal()}\r\n                \r\n                <Footer />\r\n                <ScrollToTop />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Đảm bảo bạn thêm hàm này vào userServices.js\r\n// export const getAllHelpRequests = () => {\r\n//     return axios.get('/api/v1/help-requests');\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInforr: state.user.userInforr,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HelpRequestList);","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\EventDisplay.js",["1090","1091","1092","1093"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./EventDisplay.scss\";\r\nimport { getAllEvents, deleteEvent, updateEvent } from \"../../services/eventServices\";\r\nimport { createNotification } from \"../../services/notificationServices\";\r\nimport { toast } from \"react-toastify\";\r\nimport ModalEditEvent from \"./ModalEditEvent\";\r\nimport moment from \"moment\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nclass EventDisplay extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n            isOpenModalEdit: false,\r\n            eventId: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n         const { match } = this.props;\r\n         console.log(\"match\", match);\r\n        await this.fetchEvents();\r\n    }\r\n\r\n    // Thêm các hàm xử lý modal\r\n    handleEditEvent = (eventId) => {\r\n        this.setState({\r\n            isOpenModalEdit: true,\r\n            eventId: eventId,\r\n        });\r\n    };\r\n\r\n    handleCloseModalEdit = () => {\r\n        this.setState({\r\n            isOpenModalEdit: false,\r\n            eventId: null,\r\n        });\r\n    };\r\n\r\n    // Hàm xử lý sau khi cập nhật thành công\r\n    handleEditEventSuccess = () => {\r\n        this.fetchEvents(); // Lấy lại danh sách sự kiện sau khi cập nhật\r\n        this.handleCloseModalEdit(); // Đóng modal\r\n    };\r\n\r\n    // Hàm mới để tạo thông báo khi sự kiện bị hủy\r\n    createCancellationNotification = async (event) => {\r\n        try {\r\n            const userId = this.props.userInforr?.id;\r\n\r\n            if (!userId) {\r\n                console.error(\"Không có thông tin người dùng để tạo thông báo\");\r\n                return;\r\n            }\r\n\r\n            const notificationData = {\r\n                title: \"Thông báo hủy sự kiện\",\r\n                message: `Sự kiện \"${event.name}\" được dự kiến diễn ra vào ngày ${event.date} tại ${event.address} đã bị hủy bỏ.`,\r\n                type: \"event_updated\",\r\n                reference_id: event.id,\r\n                reference_type: \"EVENT\",\r\n                link: `/event`, // Dẫn về trang danh sách sự kiện\r\n                created_by: userId, // ID của admin thực hiện thao tác\r\n                send_to_all: true, // Gửi cho tất cả người dùng\r\n            };\r\n\r\n            const response = await createNotification(notificationData);\r\n            // Kiểm tra phản hồi từ server\r\n            console.log(\"response createNotification\", response);\r\n\r\n            if (response && response.data.errCode === 0) {\r\n                console.log(\"Thông báo hủy sự kiện đã được gửi thành công:\", response.data.data);\r\n            } else {\r\n                console.error(\"Lỗi khi gửi thông báo hủy sự kiện:\", response.derrMessage);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi tạo thông báo hủy sự kiện:\", error);\r\n        }\r\n    };\r\n\r\n    // Sửa lại hàm handleDeleteEvent để gửi thông báo\r\n    handleDeleteEvent = async (event) => {\r\n        try {\r\n            const fullName = `${event.name}`;\r\n\r\n            // Sử dụng SweetAlert2 để xác nhận\r\n            const result = await Swal.fire({\r\n                title: \"Xác nhận xóa\",\r\n                html: `Bạn có chắc chắn muốn xóa sự kiện <strong>${fullName}</strong>?`,\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonText: \"Xóa\",\r\n                cancelButtonText: \"Hủy\",\r\n                confirmButtonColor: \"#d33\",\r\n                cancelButtonColor: \"#3085d6\",\r\n                reverseButtons: true,\r\n            });\r\n\r\n            if (result.isConfirmed) {\r\n                let response = await deleteEvent(event);\r\n                if (response && response.data.errCode === 0) {\r\n                    // Gửi thông báo hủy sự kiện tới người dùng\r\n                    await this.createCancellationNotification(event);\r\n\r\n                    Swal.fire(\"Thành công\", `Đã xóa sự kiện ${fullName}!`, \"success\");\r\n                    await this.fetchEvents();\r\n                } else {\r\n                    Swal.fire(\"Thất bại\", `Xóa thất bại: ${response.data.errMessage}`, \"error\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\"Lỗi\", \"Có lỗi xảy ra khi xóa sự kiện\", \"error\");\r\n            console.error(\"Lỗi khi xóa sự kiện:\", error);\r\n        }\r\n    };\r\n\r\n    fetchEvents = async () => {\r\n        try {\r\n            const response = await getAllEvents();\r\n            console.log(\"response\", response);\r\n            if (response && response.data.errCode === 0) {\r\n                this.setState({\r\n                    events: response.data.data || [],\r\n                });\r\n            } else {\r\n                toast.error(response.data.errMessage || \"Có lỗi khi lấy danh sách sự kiện\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy danh sách sự kiện:\", error);\r\n            toast.error(\"Không thể kết nối đến server\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { events, isOpenModalEdit, eventId } = this.state;\r\n        console.log(\"events\", events);\r\n\r\n        return (\r\n            <div className=\"event-display-container\">\r\n                <div className=\"title text-center\">\r\n                    <h2>Quản lý sự kiện</h2>\r\n                </div>\r\n                <div className=\"table-container\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">Tên sự kiện</th>\r\n                                <th scope=\"col\">Loại sự kiện</th>\r\n                                <th scope=\"col\">Ngày diễn ra</th>\r\n                                <th scope=\"col\">Địa điểm</th>\r\n                                <th scope=\"col\">Số thành viên</th>\r\n                                <th scope=\"col\">Chi phí</th>\r\n                                <th scope=\"col\">Trạng thái</th>\r\n                                <th scope=\"col\">Thao tác</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {events && events.length > 0 ? (\r\n                                events.map((event, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{event.id}</td>\r\n                                            <td>{event.name}</td>\r\n                                            <td>{event.eventType.valueVi}</td>\r\n                                            <td>{event.date}</td>\r\n                                            <td>{event.address}</td>\r\n                                            <td>{event.quantityMember}</td>\r\n                                            <td>{event.cost}</td>\r\n                                            <td>{event.status.valueVi}</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-primary\" onClick={() => this.handleEditEvent(event.id)} title=\"Chỉnh sửa\">\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                </button>\r\n                                                <button className=\"btn btn-info\" onClick={() => this.setState({ isOpenModalEdit: true, currentEvent: event })} title=\"Thông báo\">\r\n                                                    <i className=\"fas fa-bell\"></i>\r\n                                                </button>\r\n                                                <button className=\"btn btn-danger\" onClick={() => this.handleDeleteEvent(event)} title=\"Xóa\">\r\n                                                    <i className=\"fas fa-trash\"></i>\r\n                                                </button>\r\n                                                <Link to={`/system/event-registration/${event.id}`}>\r\n                                                    <button className=\"btn btn-primary\">\r\n                                                        <i className=\"fas fa-chart-bar\"></i>\r\n                                                    </button>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })\r\n                            ) : (\r\n                                <tr>\r\n                                    <td colSpan=\"9\" className=\"text-center\">\r\n                                        Không có sự kiện nào\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    {/* Thêm Modal */}\r\n                    {isOpenModalEdit && (\r\n                        <ModalEditEvent isOpen={isOpenModalEdit} eventId={eventId} closeModal={this.handleCloseModalEdit} onSuccess={this.handleEditEventSuccess} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userInforr: state.user.userInforr, // Thêm userInforr từ Redux store\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDisplay);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\ModalEditEvent.js",["1094","1095"],"import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { connect } from \"react-redux\"; // Thêm connect để lấy thông tin người dùng\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport { getEventById, updateEvent } from \"../../services/eventServices\";\r\nimport { getAllCodes } from \"../../services/userServices\";\r\nimport { createNotification } from \"../../services/notificationServices\"; // Thêm import\r\nimport \"./ModalEditEvent.scss\";\r\n\r\nclass ModalEditEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            name: \"\",\r\n            date: \"\",\r\n            address: \"\",\r\n            cost: \"\",\r\n            quantityMember: \"\",\r\n            typeEventCode: \"\",\r\n            statusCode: \"\",\r\n            description: \"\",\r\n            contentMarkdown: \"\",\r\n            contentHTML: \"\",\r\n            isLoading: true,\r\n            eventTypes: [],\r\n            statuses: [],\r\n            // Thêm để lưu dữ liệu ban đầu cho việc so sánh thay đổi\r\n            originalData: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchEventData();\r\n        await this.fetchSelectOptions();\r\n    }\r\n\r\n    fetchEventData = async () => {\r\n        const { eventId } = this.props;\r\n        if (eventId) {\r\n            try {\r\n                const response = await getEventById(eventId);\r\n                if (response && response.data.errCode === 0) {\r\n                    const eventData = response.data.data;\r\n                    // Cập nhật state với dữ liệu từ API\r\n                    const eventState = {\r\n                        id: eventData.id,\r\n                        name: eventData.name,\r\n                        typeEventCode: eventData.typeEventCode || \"\",\r\n                        statusCode: eventData.statusCode || \"\",\r\n                        date: eventData.date,\r\n                        address: eventData.address || \"\",\r\n                        cost: eventData.cost || \"\",\r\n                        quantityMember: eventData.quantityMember || \"\",\r\n                        description: eventData.eventMarkdown?.description || \"\",\r\n                        contentMarkdown: eventData.eventMarkdown?.contentMarkdown || \"\",\r\n                        contentHTML: eventData.eventMarkdown?.contentHTML || \"\",\r\n                    };\r\n\r\n                    this.setState({\r\n                        ...eventState,\r\n                        originalData: { ...eventState }, // Lưu trữ dữ liệu gốc để so sánh sau này\r\n                        isLoading: false,\r\n                    });\r\n                } else {\r\n                    toast.error(\"Không thể lấy thông tin sự kiện!\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi lấy thông tin sự kiện:\", error);\r\n                toast.error(\"Đã xảy ra lỗi khi kết nối với server!\");\r\n            }\r\n        }\r\n    };\r\n\r\n    fetchSelectOptions = async () => {\r\n        try {\r\n            const eventTypeResponse = await getAllCodes(\"EVENT_TYPE\");\r\n            const statusResponse = await getAllCodes(\"EVENT_STATUS\");\r\n            // Lưu dữ liệu vào state\r\n            if (eventTypeResponse && eventTypeResponse.data.errCode === 0) {\r\n                this.setState({\r\n                    eventTypes: eventTypeResponse.data.data || [],\r\n                });\r\n            }\r\n\r\n            if (statusResponse && statusResponse.data.errCode === 0) {\r\n                this.setState({\r\n                    statuses: statusResponse.data.data || [],\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy dữ liệu tùy chọn:\", error);\r\n        }\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    validateInput = () => {\r\n        const requiredFields = [\"name\", \"typeEventCode\", \"date\", \"address\", \"statusCode\"];\r\n        for (let i = 0; i < requiredFields.length; i++) {\r\n            const field = requiredFields[i];\r\n            if (!this.state[field]) {\r\n                toast.error(\r\n                    `Vui lòng điền ${\r\n                        field === \"name\"\r\n                            ? \"tên sự kiện\"\r\n                            : field === \"typeEventCode\"\r\n                            ? \"loại sự kiện\"\r\n                            : field === \"date\"\r\n                            ? \"ngày diễn ra\"\r\n                            : field === \"address\"\r\n                            ? \"địa điểm\"\r\n                            : \"trạng thái\"\r\n                    }`\r\n                );\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    // Hàm mới tạo thông báo cập nhật sự kiện\r\n    createEventUpdateNotification = async () => {\r\n        try {\r\n            if (!this.props.userInforr?.id) {\r\n                console.error(\"Không có thông tin người dùng để tạo thông báo\");\r\n                return;\r\n            }\r\n\r\n            // So sánh dữ liệu cũ và mới để xác định những gì đã thay đổi\r\n            const changes = this.getChangedFields();\r\n            if (Object.keys(changes).length === 0) return; // Không có thay đổi\r\n\r\n            // Tạo nội dung thông báo chi tiết\r\n            const messageDetails = this.formatChangesMessage(changes);\r\n\r\n            // Tạo và gửi thông báo\r\n            const notificationData = {\r\n                title: `Thông tin sự kiện \"${this.state.name}\" đã được cập nhật`,\r\n                message: `Sự kiện \"${this.state.name}\" đã được cập nhật: ${messageDetails}`,\r\n                type: \"event_updated\",\r\n                reference_id: this.state.id,\r\n                reference_type: \"EVENT\",\r\n                link: `/event-details/${this.state.id}`,\r\n                created_by: this.props.userInforr.id,\r\n                send_to_all: true, // Gửi cho tất cả người dùng\r\n            };\r\n            console.log(\"notificationData\", notificationData);\r\n            // Gọi API để tạo thông báo\r\n            const response = await createNotification(notificationData);\r\n\r\n            if (response && response.data.errCode === 0) {\r\n                console.log(\"Thông báo cập nhật sự kiện đã được gửi thành công:\", response.data.data);\r\n            } else {\r\n                console.error(\"Lỗi khi gửi thông báo cập nhật sự kiện:\", response.data.errMessage);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi tạo thông báo cập nhật sự kiện:\", error);\r\n        }\r\n    };\r\n\r\n    // Hàm xác định các trường đã thay đổi\r\n    getChangedFields = () => {\r\n        const { originalData } = this.state;\r\n        const changes = {};\r\n\r\n        // Danh sách trường cần kiểm tra\r\n        const fieldsToCheck = [\"name\", \"date\", \"address\", \"cost\", \"quantityMember\", \"typeEventCode\", \"statusCode\"];\r\n\r\n        fieldsToCheck.forEach((field) => {\r\n            if (originalData[field] !== this.state[field]) {\r\n                changes[field] = {\r\n                    old: originalData[field],\r\n                    new: this.state[field],\r\n                };\r\n            }\r\n        });\r\n\r\n        return changes;\r\n    };\r\n\r\n    // Hàm định dạng thông điệp thay đổi\r\n    formatChangesMessage = (changes) => {\r\n        const messages = [];\r\n\r\n        // Map tên trường sang tên hiển thị tiếng Việt\r\n        const fieldNames = {\r\n            name: \"tên sự kiện\",\r\n            date: \"ngày diễn ra\",\r\n            address: \"địa điểm\",\r\n            cost: \"chi phí\",\r\n            quantityMember: \"số lượng thành viên tham gia\",\r\n            typeEventCode: \"loại sự kiện\",\r\n            statusCode: \"trạng thái\",\r\n        };\r\n\r\n        // Định dạng thông báo cho từng trường đã thay đổi\r\n        for (const field in changes) {\r\n            if (field === \"date\") {\r\n                // Định dạng ngày tháng đẹp hơn\r\n                const oldDate = new Date(changes[field].old).toLocaleDateString(\"vi-VN\");\r\n                const newDate = new Date(changes[field].new).toLocaleDateString(\"vi-VN\");\r\n                messages.push(`${fieldNames[field]} từ ${oldDate} thành ${newDate}`);\r\n            } else if (field === \"typeEventCode\" || field === \"statusCode\") {\r\n                // Lấy tên hiển thị từ các options\r\n                const optionsArray = field === \"typeEventCode\" ? this.state.eventTypes : this.state.statuses;\r\n                const oldValue = optionsArray.find((item) => item.keyName === changes[field].old)?.valueVi || changes[field].old;\r\n                const newValue = optionsArray.find((item) => item.keyName === changes[field].new)?.valueVi || changes[field].new;\r\n                messages.push(`${fieldNames[field]} từ \"${oldValue}\" thành \"${newValue}\"`);\r\n            } else {\r\n                messages.push(`${fieldNames[field]} từ \"${changes[field].old}\" thành \"${changes[field].new}\"`);\r\n            }\r\n        }\r\n\r\n        return messages.join(\", \");\r\n    };\r\n\r\n    // Sửa lại hàm handleSaveEvent để gọi thông báo sau khi cập nhật thành công\r\n    handleSaveEvent = async () => {\r\n        if (!this.validateInput()) return;\r\n\r\n        try {\r\n            const eventData = {\r\n                id: this.state.id,\r\n                name: this.state.name,\r\n                typeEventCode: this.state.typeEventCode,\r\n                date: this.state.date,\r\n                address: this.state.address,\r\n                cost: this.state.cost,\r\n                quantityMember: this.state.quantityMember,\r\n                statusCode: this.state.statusCode,\r\n                description: this.state.description,\r\n            };\r\n\r\n            // Gọi API để cập nhật sự kiện\r\n            const response = await updateEvent(eventData);\r\n\r\n            if (response && response.data && response.data.errCode === 0) {\r\n                // Tạo thông báo về việc cập nhật sự kiện\r\n                await this.createEventUpdateNotification();\r\n\r\n                toast.success(\"Cập nhật sự kiện thành công!\");\r\n                this.props.onSuccess();\r\n            } else {\r\n                toast.error(response.data.errMessage || \"Có lỗi khi cập nhật sự kiện!\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi cập nhật sự kiện:\", error);\r\n            toast.error(\"Đã xảy ra lỗi khi kết nối với server!!\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { isOpen, closeModal } = this.props;\r\n        const { name, date, address, cost, quantityMember, description, typeEventCode, statusCode, isLoading, eventTypes, statuses, contentMarkdown } = this.state;\r\n        return (\r\n            <Modal isOpen={isOpen} toggle={closeModal} className=\"modal-edit-event\" size=\"lg\">\r\n                <ModalHeader toggle={closeModal}>Chỉnh sửa thông tin sự kiện</ModalHeader>\r\n                <ModalBody>\r\n                    {isLoading ? (\r\n                        <div className=\"loading-spinner\">Đang tải dữ liệu...</div>\r\n                    ) : (\r\n                        <div className=\"form-container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6 form-group mb-3\">\r\n                                    <label>Tên sự kiện</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"name\" value={name} onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"col-6 form-group mb-3\">\r\n                                    <label>Loại sự kiện</label>\r\n                                    <select className=\"form-select\" name=\"typeEventCode\" value={typeEventCode} onChange={this.handleInputChange}>\r\n                                        {eventTypes &&\r\n                                            eventTypes.length > 0 &&\r\n                                            eventTypes.map((item) => (\r\n                                                <option key={item.id} value={item.keyName}>\r\n                                                    {item.valueVi}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-6 form-group mb-3\">\r\n                                    <label>Ngày diễn ra</label>\r\n                                    <input type=\"date\" className=\"form-control\" name=\"date\" value={date} onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"col-6 form-group mb-3\">\r\n                                    <label>Địa điểm</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"address\" value={address} onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"col-6 form-group mb-3\">\r\n                                    <label>Chi phí</label>\r\n                                    <input type=\"number\" className=\"form-control\" name=\"cost\" value={cost} onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"col-6 form-group mb-3\">\r\n                                    <label>Số thành viên</label>\r\n                                    <input type=\"number\" className=\"form-control\" name=\"quantityMember\" value={quantityMember} onChange={this.handleInputChange} />\r\n                                </div>\r\n                                <div className=\"col-6 form-group mb-3\">\r\n                                    <label>Trạng thái</label>\r\n                                    <select className=\"form-select\" name=\"statusCode\" value={statusCode} onChange={this.handleInputChange}>\r\n                                        {statuses &&\r\n                                            statuses.length > 0 &&\r\n                                            statuses.map((item) => (\r\n                                                <option key={item.id} value={item.keyName}>\r\n                                                    {item.valueVi}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-12 form-group mb-3\">\r\n                                    <label>Mô tả</label>\r\n                                    <textarea className=\"form-control\" name=\"description\" value={description} onChange={this.handleInputChange} rows=\"4\" />\r\n                                </div>\r\n                                <div className=\"col-12 form-group mb-3\">\r\n                                    <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                                        <label className=\"fw-bold\">Bài viết</label>\r\n                                        <Button\r\n                                            color=\"info\"\r\n                                            size=\"sm\"\r\n                                            className=\"edit-content-btn\"\r\n                                            onClick={() => window.open(`http://localhost:3000/system/event-description`, \"_blank\")}\r\n                                        >\r\n                                            <i className=\"fas fa-edit me-1\"></i> Chỉnh sửa bài viết\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"content-preview p-3 border rounded\"\r\n                                        style={{\r\n                                            minHeight: \"200px\",\r\n                                            maxHeight: \"300px\",\r\n                                            overflow: \"auto\",\r\n                                            backgroundColor: \"#f8f9fa\",\r\n                                        }}\r\n                                        dangerouslySetInnerHTML={{\r\n                                            __html: this.state.contentHTML || \"<em>Chưa có nội dung HTML</em>\",\r\n                                        }}\r\n                                    />\r\n                                    <div className=\"content-actions mt-2 text-end\">\r\n                                        {this.state.contentMarkdown ? (\r\n                                            <Button\r\n                                                color=\"outline-secondary\"\r\n                                                size=\"sm\"\r\n                                                onClick={() => window.open(`http://localhost:3000/event-details/${this.state.id}`, \"_blank\")}\r\n                                                className=\"view-btn\"\r\n                                            >\r\n                                                <i className=\"fas fa-eye me-1\"></i> Xem bài viết đầy đủ\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <small className=\"text-muted\">\r\n                                                <i className=\"fas fa-info-circle me-1\"></i>\r\n                                                Chưa có bài viết chi tiết. Nhấn \"Chỉnh sửa bài viết\" để tạo.\r\n                                            </small>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"secondary\" onClick={closeModal}>\r\n                        Hủy\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={this.handleSaveEvent} disabled={isLoading}>\r\n                        Lưu thay đổi\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\n// Kết nối với Redux để lấy thông tin người dùng\r\nconst mapStateToProps = (state) => ({\r\n    userInforr: state.user.userInforr,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalEditEvent);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Input\\index.js",[],["1096","1097"],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Input\\DatePicker.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\components\\Input\\InputSuggest.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\notificationServices.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Auth\\Forgot_Password.js",["1098","1099","1100","1101","1102","1103"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport * as actions from \"../../store/actions\";\r\nimport \"./Forgot_Password.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Container, Row, Col, InputGroup, Spinner, Alert } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFacebookF, faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faEnvelope, faLock, faEye, faEyeSlash, faExclamationTriangle, faLeaf, faKey, faArrowLeft, faShieldAlt, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport logoImg from \"../../assets/images/logos/logo.png\";\r\nimport { RequestPasswordReset, VerifyOTP, ResetPassword } from \"../../services/otpServices.js\"; // Import các hàm từ userServices\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            otp: \"\",\r\n            newPassword: \"\",\r\n            confirmPassword: \"\",\r\n            resetToken: \"\",\r\n            showPassword: false,\r\n            showConfirmPassword: false,\r\n            errMessage: \"\",\r\n            successMessage: \"\",\r\n            isLoading: false,\r\n            currentStep: 1, // 1: Nhập email, 2: Nhập OTP, 3: Đặt lại mật khẩu\r\n            otpTimer: 0,\r\n        };\r\n        this.timerInterval = null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerInterval) {\r\n            clearInterval(this.timerInterval);\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event, fieldName) => {\r\n        this.setState({\r\n            [fieldName]: event.target.value,\r\n            errMessage: \"\",\r\n        });\r\n    };\r\n\r\n    togglePasswordVisibility = (field) => {\r\n        if (field === \"password\") {\r\n            this.setState({ showPassword: !this.state.showPassword });\r\n        } else {\r\n            this.setState({ showConfirmPassword: !this.state.showConfirmPassword });\r\n        }\r\n    };\r\n\r\n    startOtpTimer = () => {\r\n        this.setState({ otpTimer: 60 });\r\n        if (this.timerInterval) clearInterval(this.timerInterval);\r\n\r\n        this.timerInterval = setInterval(() => {\r\n            this.setState(\r\n                (prevState) => ({\r\n                    otpTimer: prevState.otpTimer - 1,\r\n                }),\r\n                () => {\r\n                    if (this.state.otpTimer <= 0 && this.timerInterval) {\r\n                        clearInterval(this.timerInterval);\r\n                    }\r\n                }\r\n            );\r\n        }, 1000);\r\n    };\r\n\r\n    // Bước 1: Gửi email để lấy mã OTP\r\n    handleRequestOTP = async () => {\r\n        const { email } = this.state;\r\n\r\n        // Kiểm tra email\r\n        if (!email) {\r\n            this.setState({ errMessage: \"Vui lòng nhập địa chỉ email của bạn\" });\r\n            return;\r\n        }\r\n\r\n        // Kiểm tra định dạng email đơn giản\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailRegex.test(email)) {\r\n            this.setState({ errMessage: \"Địa chỉ email không hợp lệ\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true, errMessage: \"\", successMessage: \"\" });\r\n\r\n        try {\r\n            // Gọi API để yêu cầu mã OTP\r\n            const response = await RequestPasswordReset(email);\r\n\r\n            if (response.data.errCode === 0) {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    currentStep: 2,\r\n                    successMessage: response.data.errMessage || \"Mã xác nhận đã được gửi đến email của bạn\",\r\n                });\r\n\r\n                this.startOtpTimer();\r\n            } else {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    errMessage: response.data.errMessage || \"Có lỗi xảy ra khi gửi yêu cầu\",\r\n                });\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errMessage: error.response?.data?.errMessage || \"Không thể gửi mã xác nhận. Vui lòng thử lại sau.\",\r\n            });\r\n        }\r\n    };\r\n\r\n    // Bước 2: Xác minh mã OTP\r\n    handleVerifyOTP = async () => {\r\n        const { email, otp } = this.state;\r\n\r\n        if (!otp) {\r\n            this.setState({ errMessage: \"Vui lòng nhập mã xác nhận\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true, errMessage: \"\", successMessage: \"\" });\r\n\r\n        try {\r\n            // Gọi API để xác minh OTP\r\n            const response = await VerifyOTP(email, otp);\r\n\r\n            if (response.data.errCode === 0) {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    currentStep: 3,\r\n                    resetToken: response.data.resetToken,\r\n                    successMessage: response.data.errMessage || \"Xác thực OTP thành công. Vui lòng tạo mật khẩu mới.\",\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    errMessage: response.data.errMessage || \"Có lỗi xảy ra khi xác thực mã OTP\",\r\n                });\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errMessage: error.response?.data?.errMessage || \"Mã xác nhận không chính xác hoặc đã hết hạn\",\r\n            });\r\n        }\r\n    };\r\n\r\n    // Bước 3: Đặt lại mật khẩu\r\n    handleResetPassword = async () => {\r\n        const { email, resetToken, newPassword, confirmPassword } = this.state;\r\n\r\n        // Kiểm tra mật khẩu\r\n        if (!newPassword) {\r\n            this.setState({ errMessage: \"Vui lòng nhập mật khẩu mới\" });\r\n            return;\r\n        }\r\n\r\n        if (newPassword.length < 6) {\r\n            this.setState({ errMessage: \"Mật khẩu phải có ít nhất 6 ký tự\" });\r\n            return;\r\n        }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            this.setState({ errMessage: \"Mật khẩu xác nhận không khớp\" });\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true, errMessage: \"\", successMessage: \"\" });\r\n\r\n        try {\r\n            // Gọi API để đặt lại mật khẩu\r\n            const response = await ResetPassword(email, resetToken, newPassword);\r\n\r\n            if (response.data.errCode === 0) {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    successMessage: response.data.errMessage || \"Đặt lại mật khẩu thành công! Bạn có thể đăng nhập ngay bây giờ.\",\r\n                });\r\n\r\n                // Chuyển hướng đến trang đăng nhập sau 3 giây\r\n                setTimeout(() => {\r\n                    this.props.navigate(\"/login\");\r\n                }, 3000);\r\n            } else {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    errMessage: response.data.errMessage || \"Có lỗi xảy ra khi đặt lại mật khẩu\",\r\n                });\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errMessage: error.response?.data?.errMessage || \"Không thể đặt lại mật khẩu. Vui lòng thử lại.\",\r\n            });\r\n        }\r\n    };\r\n\r\n    // Xử lý khi nhấn \"Gửi lại\" mã OTP\r\n    handleResendOTP = async () => {\r\n        const { email } = this.state;\r\n\r\n        this.setState({ isLoading: true, errMessage: \"\", successMessage: \"\" });\r\n\r\n        try {\r\n            // Gọi API để yêu cầu mã OTP mới\r\n            const response = await RequestPasswordReset(email);\r\n\r\n            if (response.data.errCode === 0) {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    successMessage: \"Mã xác nhận mới đã được gửi đến email của bạn\",\r\n                });\r\n\r\n                this.startOtpTimer();\r\n            } else {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    errMessage: response.data.errMessage || \"Có lỗi xảy ra khi gửi lại mã xác nhận\",\r\n                });\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errMessage: error.response?.data?.errMessage || \"Không thể gửi lại mã xác nhận\",\r\n            });\r\n        }\r\n    };\r\n\r\n    // Quay lại bước trước\r\n    handleBack = () => {\r\n        this.setState((prevState) => ({\r\n            currentStep: prevState.currentStep - 1,\r\n            errMessage: \"\",\r\n            successMessage: \"\",\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { email, otp, newPassword, confirmPassword, showPassword, showConfirmPassword, errMessage, successMessage, isLoading, currentStep, otpTimer } = this.state;\r\n\r\n        return (\r\n            <div className=\"forgot-password-page d-flex align-items-center min-vh-100\">\r\n                <div className=\"login-bg-shape\"></div>\r\n                <div className=\"login-wave\"></div>\r\n\r\n                <Container>\r\n                    <Row className=\"justify-content-center g-0\">\r\n                        <Col lg={12} className=\"shadow-lg rounded-3 overflow-hidden\">\r\n                            <Row className=\"g-0 h-100\">\r\n                                {/* Cột hình ảnh và thông điệp */}\r\n                                <Col lg={6} className=\"d-none d-lg-block p-0\">\r\n                                    <div className=\"login-welcome h-100 d-flex flex-column justify-content-center p-5 text-white\">\r\n                                        <div className=\"mb-4\">\r\n                                            <img src={logoImg} alt=\"CTES Logo\" className=\"login-logo\" />\r\n                                        </div>\r\n                                        <h2 className=\"welcome-heading\">Quên mật khẩu?</h2>\r\n                                        <p className=\"welcome-text opacity-75\">Đừng lo lắng! Chúng tôi sẽ giúp bạn khôi phục tài khoản. Chỉ cần làm theo các bước đơn giản.</p>\r\n                                        <div className=\"mt-4 welcome-features\">\r\n                                            <div className=\"feature-item mb-3\">\r\n                                                <span className=\"feature-icon\">\r\n                                                    <FontAwesomeIcon icon={faEnvelope} />\r\n                                                </span>\r\n                                                <span>Nhập email của bạn</span>\r\n                                            </div>\r\n                                            <div className=\"feature-item mb-3\">\r\n                                                <span className=\"feature-icon\">\r\n                                                    <FontAwesomeIcon icon={faShieldAlt} />\r\n                                                </span>\r\n                                                <span>Xác minh bằng mã OTP</span>\r\n                                            </div>\r\n                                            <div className=\"feature-item\">\r\n                                                <span className=\"feature-icon\">\r\n                                                    <FontAwesomeIcon icon={faKey} />\r\n                                                </span>\r\n                                                <span>Tạo mật khẩu mới</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                {/* Cột form quên mật khẩu */}\r\n                                <Col lg={6} className=\"bg-white p-0\">\r\n                                    <div className=\"forgot-password-container p-4 p-md-5 h-100 d-flex flex-column justify-content-center\">\r\n                                        <div className=\"text-center mb-4 d-lg-none\">\r\n                                            <img src={logoImg} alt=\"CTES Logo\" className=\"login-logo-mobile mb-3\" />\r\n                                        </div>\r\n\r\n                                        <h3 className=\"card-title fw-bold text-center mb-4\">\r\n                                            <FontAwesomeIcon icon={faKey} className=\"me-2 text-primary\" />\r\n                                            {currentStep === 1 && \"Quên mật khẩu\"}\r\n                                            {currentStep === 2 && \"Xác minh OTP\"}\r\n                                            {currentStep === 3 && \"Tạo mật khẩu mới\"}\r\n                                        </h3>\r\n\r\n                                        {/* Hiển thị thông báo lỗi */}\r\n                                        {errMessage && (\r\n                                            <Alert variant=\"danger\" className=\"d-flex align-items-center\">\r\n                                                <FontAwesomeIcon icon={faExclamationTriangle} className=\"me-2 flex-shrink-0\" />\r\n                                                <div>{errMessage}</div>\r\n                                            </Alert>\r\n                                        )}\r\n\r\n                                        {/* Hiển thị thông báo thành công */}\r\n                                        {successMessage && (\r\n                                            <Alert variant=\"success\" className=\"d-flex align-items-center\">\r\n                                                <FontAwesomeIcon icon={faCheck} className=\"me-2 flex-shrink-0\" />\r\n                                                <div>{successMessage}</div>\r\n                                            </Alert>\r\n                                        )}\r\n\r\n                                        {/* Hiển thị các bước */}\r\n                                        <div className=\"progress-steps mb-4\">\r\n                                            <div className={`step ${currentStep >= 1 ? \"active\" : \"\"}`}>\r\n                                                <div className=\"step-icon\">1</div>\r\n                                                <div className=\"step-label\">Email</div>\r\n                                            </div>\r\n                                            <div className={`step ${currentStep >= 2 ? \"active\" : \"\"}`}>\r\n                                                <div className=\"step-icon\">2</div>\r\n                                                <div className=\"step-label\">OTP</div>\r\n                                            </div>\r\n                                            <div className={`step ${currentStep >= 3 ? \"active\" : \"\"}`}>\r\n                                                <div className=\"step-icon\">3</div>\r\n                                                <div className=\"step-label\">Mật khẩu mới</div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <Form className=\"forgot-password-form\">\r\n                                            {/* Bước 1: Nhập email */}\r\n                                            {currentStep === 1 && (\r\n                                                <>\r\n                                                    <p className=\"text-muted mb-4\">Vui lòng nhập địa chỉ email đã đăng ký. Chúng tôi sẽ gửi mã xác nhận để đặt lại mật khẩu.</p>\r\n\r\n                                                    <Form.Group className=\"mb-4\" controlId=\"formEmail\">\r\n                                                        <Form.Label className=\"fw-semibold\">Email đăng ký</Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <InputGroup.Text className=\"bg-light border-end-0\">\r\n                                                                <FontAwesomeIcon icon={faEnvelope} className=\"text-primary\" />\r\n                                                            </InputGroup.Text>\r\n                                                            <Form.Control\r\n                                                                type=\"email\"\r\n                                                                placeholder=\"Nhập email của bạn\"\r\n                                                                value={email}\r\n                                                                onChange={(e) => this.handleInputChange(e, \"email\")}\r\n                                                                className=\"py-2 border-start-0\"\r\n                                                            />\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        className=\"login-btn w-100 py-2 mb-4 d-flex align-items-center justify-content-center\"\r\n                                                        onClick={this.handleRequestOTP}\r\n                                                        disabled={isLoading}\r\n                                                    >\r\n                                                        {isLoading ? (\r\n                                                            <>\r\n                                                                <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" className=\"me-2\" />\r\n                                                                Đang xử lý...\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            \"Gửi mã xác nhận\"\r\n                                                        )}\r\n                                                    </Button>\r\n                                                </>\r\n                                            )}\r\n\r\n                                            {/* Bước 2: Nhập OTP */}\r\n                                            {currentStep === 2 && (\r\n                                                <>\r\n                                                    <p className=\"text-muted mb-4\">\r\n                                                        Mã xác nhận đã được gửi đến email <strong>{email}</strong>. Vui lòng nhập mã để tiếp tục.\r\n                                                    </p>\r\n\r\n                                                    <Form.Group className=\"mb-4\" controlId=\"formOTP\">\r\n                                                        <Form.Label className=\"fw-semibold\">Mã xác nhận</Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <InputGroup.Text className=\"bg-light border-end-0\">\r\n                                                                <FontAwesomeIcon icon={faShieldAlt} className=\"text-primary\" />\r\n                                                            </InputGroup.Text>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Nhập mã xác nhận\"\r\n                                                                value={otp}\r\n                                                                onChange={(e) => this.handleInputChange(e, \"otp\")}\r\n                                                                className=\"py-2 border-start-0\"\r\n                                                                maxLength={6}\r\n                                                            />\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n\r\n                                                    <div className=\"d-flex justify-content-between mb-4\">\r\n                                                        <Button variant=\"outline-secondary\" className=\"px-3\" onClick={this.handleBack}>\r\n                                                            <FontAwesomeIcon icon={faArrowLeft} className=\"me-2\" />\r\n                                                            Quay lại\r\n                                                        </Button>\r\n\r\n                                                        <Button variant=\"primary\" className=\"px-4\" onClick={this.handleVerifyOTP} disabled={isLoading}>\r\n                                                            {isLoading ? (\r\n                                                                <>\r\n                                                                    <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" className=\"me-2\" />\r\n                                                                    Đang xử lý...\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                \"Xác nhận\"\r\n                                                            )}\r\n                                                        </Button>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"text-center\">\r\n                                                        <p className=\"mb-0 small\">\r\n                                                            Không nhận được mã?\r\n                                                            {otpTimer > 0 ? (\r\n                                                                <span className=\"text-muted ms-1\">Gửi lại sau {otpTimer}s</span>\r\n                                                            ) : (\r\n                                                                <Button\r\n                                                                    variant=\"link\"\r\n                                                                    className=\"p-0 ms-1 text-decoration-none\"\r\n                                                                    onClick={this.handleResendOTP}\r\n                                                                    disabled={isLoading}\r\n                                                                >\r\n                                                                    Gửi lại\r\n                                                                </Button>\r\n                                                            )}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n\r\n                                            {/* Bước 3: Đặt mật khẩu mới */}\r\n                                            {currentStep === 3 && (\r\n                                                <>\r\n                                                    <p className=\"text-muted mb-4\">Vui lòng tạo mật khẩu mới cho tài khoản của bạn.</p>\r\n\r\n                                                    <Form.Group className=\"mb-4\" controlId=\"formNewPassword\">\r\n                                                        <Form.Label className=\"fw-semibold\">Mật khẩu mới</Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <InputGroup.Text className=\"bg-light border-end-0\">\r\n                                                                <FontAwesomeIcon icon={faLock} className=\"text-primary\" />\r\n                                                            </InputGroup.Text>\r\n                                                            <Form.Control\r\n                                                                type={showPassword ? \"text\" : \"password\"}\r\n                                                                placeholder=\"Nhập mật khẩu mới\"\r\n                                                                value={newPassword}\r\n                                                                onChange={(e) => this.handleInputChange(e, \"newPassword\")}\r\n                                                                className=\"py-2 border-start-0 border-end-0\"\r\n                                                            />\r\n                                                            <Button variant=\"light\" onClick={() => this.togglePasswordVisibility(\"password\")} className=\"border border-start-0\">\r\n                                                                <FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} className=\"text-secondary\" />\r\n                                                            </Button>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group className=\"mb-4\" controlId=\"formConfirmPassword\">\r\n                                                        <Form.Label className=\"fw-semibold\">Xác nhận mật khẩu</Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <InputGroup.Text className=\"bg-light border-end-0\">\r\n                                                                <FontAwesomeIcon icon={faLock} className=\"text-primary\" />\r\n                                                            </InputGroup.Text>\r\n                                                            <Form.Control\r\n                                                                type={showConfirmPassword ? \"text\" : \"password\"}\r\n                                                                placeholder=\"Nhập lại mật khẩu mới\"\r\n                                                                value={confirmPassword}\r\n                                                                onChange={(e) => this.handleInputChange(e, \"confirmPassword\")}\r\n                                                                className=\"py-2 border-start-0 border-end-0\"\r\n                                                            />\r\n                                                            <Button variant=\"light\" onClick={() => this.togglePasswordVisibility(\"confirm\")} className=\"border border-start-0\">\r\n                                                                <FontAwesomeIcon icon={showConfirmPassword ? faEyeSlash : faEye} className=\"text-secondary\" />\r\n                                                            </Button>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n\r\n                                                    <div className=\"d-flex justify-content-between mb-4\">\r\n                                                        <Button variant=\"outline-secondary\" className=\"px-3\" onClick={this.handleBack}>\r\n                                                            <FontAwesomeIcon icon={faArrowLeft} className=\"me-2\" />\r\n                                                            Quay lại\r\n                                                        </Button>\r\n\r\n                                                        <Button variant=\"primary\" className=\"px-4\" onClick={this.handleResetPassword} disabled={isLoading}>\r\n                                                            {isLoading ? (\r\n                                                                <>\r\n                                                                    <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" className=\"me-2\" />\r\n                                                                    Đang xử lý...\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                \"Hoàn tất\"\r\n                                                            )}\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n\r\n                                            <div className=\"text-center mt-3\">\r\n                                                <Link to=\"/login\" className=\"text-decoration-none\">\r\n                                                    <FontAwesomeIcon icon={faArrowLeft} className=\"me-2\" />\r\n                                                    Trở về trang đăng nhập\r\n                                                </Link>\r\n                                            </div>\r\n                                        </Form>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigate: (path) => dispatch(push(path)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\services\\otpServices.js",[],"C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\System\\EventRegistrationManage.js",["1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { createRef } from \"react\";\r\n\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"./EventDisplay.scss\";\r\nimport { getAllEvents, deleteEvent, updateEvent, getEventStatistics } from \"../../services/eventServices\";\r\nimport { createNotification } from \"../../services/notificationServices\";\r\nimport { toast } from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./EventRegistrationManage.scss\";\r\nimport { getEventRegistrationsById, updateEventRegistration, getEventById } from \"../../services/eventServices\";\r\nimport { Table, Badge, Button, Form, InputGroup, Spinner, Card, Container, Row, Col, Modal, Tabs, Tab, Dropdown } from \"react-bootstrap\";\r\nimport { FaSearch, FaFilter, FaCheck, FaTimes, FaEye, FaEdit, FaArrowLeft, FaFileExport, FaUserCheck, FaMoneyBillWave, FaCalendarCheck, FaSort } from \"react-icons/fa\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell, ResponsiveContainer, LineChart, Line } from \"recharts\";\r\nclass EventRegistrationManage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.statisticsRef = createRef();\r\n        this.state = {\r\n            eventId: \"\",\r\n            eventName: \"\",\r\n            registrations: [],\r\n            filteredRegistrations: [],\r\n            isLoading: false,\r\n            searchTerm: \"\",\r\n            statusFilter: \"all\",\r\n            paymentFilter: \"all\",\r\n            attendanceFilter: \"all\",\r\n            sortField: \"registeredAt\",\r\n            sortDirection: \"desc\",\r\n            showDetailModal: false,\r\n            showAttendanceModal: false,\r\n            selectedRegistration: null,\r\n            attendanceDate: new Date(),\r\n            attendanceNote: \"\",\r\n\r\n            // Thống kê\r\n            totalRegistrations: 0,\r\n            approvedRegistrations: 0,\r\n            pendingRegistrations: 0,\r\n            rejectedRegistrations: 0,\r\n            paidRegistrations: 0,\r\n            unpaidRegistrations: 0,\r\n            attendedRegistrations: 0,\r\n            // Thêm state cho thống kê\r\n            showStatisticsTab: false,\r\n            eventStats: null,\r\n            activeTab: \"registrations\",\r\n        };\r\n    }\r\n    // Thêm phương thức fetch thống kê\r\n    fetchEventStatistics = async (eventId) => {\r\n        try {\r\n            this.setState({ isLoading: true });\r\n            const res = await getEventStatistics(eventId);\r\n            console.log(\"API response getEventStatistics:\", res);\r\n            if (res && res.data && res.data.errCode === 0) {\r\n                console.log(\"Event Statistics:\", res.data.data);\r\n                this.setState({\r\n                    eventStats: res.data.data,\r\n                    isLoading: false,\r\n                });\r\n            } else {\r\n                toast.error(res.data.errMessage || \"Lỗi khi tải thống kê sự kiện\");\r\n                this.setState({ isLoading: false });\r\n            }\r\n        } catch (e) {\r\n            console.error(\"Error fetching event statistics:\", e);\r\n            toast.error(\"Không thể kết nối máy chủ\");\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n    async componentDidMount() {\r\n        // Lấy eventId từ URL\r\n        const { match } = this.props;\r\n        const eventId = match.params.id;\r\n        const data = {\r\n            eventId: eventId,\r\n        };\r\n        console.log(\"Event ID from URL:\", eventId);\r\n\r\n        if (!eventId) {\r\n            toast.error(\"Không tìm thấy sự kiện!\");\r\n            return;\r\n        }\r\n\r\n        this.setState({ eventId, isLoading: true });\r\n        await this.fetchRegistrations(eventId);\r\n        await this.fetchEventStatistics(data);\r\n    }\r\n    // Thêm hàm này vào trong class EventRegistrationManage\r\n    removeAccents = (str) => {\r\n        if (!str) return \"\";\r\n\r\n        // Normalize chuỗi về dạng NFD (phân tách các ký tự có dấu)\r\n        return (\r\n            str\r\n                .normalize(\"NFD\")\r\n                // Loại bỏ các dấu (các ký tự unicode trong dải 0300-036F)\r\n                .replace(/[\\u0300-\\u036f]/g, \"\")\r\n                // Thay thế đặc biệt cho ký tự Đ/đ mà normalize không xử lý\r\n                .replace(/[đĐ]/g, function (m) {\r\n                    return m === \"đ\" ? \"d\" : \"D\";\r\n                })\r\n        );\r\n    };\r\n    // Thêm hàm chuyển tab\r\n    handleTabChange = (tab) => {\r\n        this.setState({ activeTab: tab });\r\n    };\r\n\r\n    // Phương thức render tab thống kê\r\n    renderStatisticsTab = () => {\r\n        const { eventStats, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return (\r\n                <div className=\"text-center my-5\">\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                    <div className=\"mt-2\">Đang tải dữ liệu thống kê...</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (!eventStats) {\r\n            return (\r\n                <div className=\"text-center my-5\">\r\n                    <div className=\"alert alert-warning\">\r\n                        <i className=\"fas fa-exclamation-triangle me-2\"></i>\r\n                        Không thể tải dữ liệu thống kê. Vui lòng thử lại sau.\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const { eventInfo, registrationStats, attendanceStats, paymentStats } = eventStats;\r\n\r\n        // Chuẩn bị dữ liệu cho biểu đồ phân bố đăng ký theo thời gian\r\n        const registrationDistributionData = registrationStats.timeStats.distribution || [];\r\n\r\n        // Chuẩn bị dữ liệu cho biểu đồ tròn tỷ lệ tham dự\r\n        const attendanceData = [\r\n            { name: \"Đã tham dự\", value: attendanceStats.attended, color: \"#2dce89\" },\r\n            { name: \"Chưa tham dự\", value: attendanceStats.notAttended, color: \"#f5365c\" },\r\n        ];\r\n\r\n        // Chuẩn bị dữ liệu cho biểu đồ thanh phương thức thanh toán\r\n        const paymentMethodData = paymentStats.byMethod.map((method) => ({\r\n            name: method.name,\r\n            count: method.count,\r\n            amount: method.amount,\r\n        }));\r\n\r\n        // Màu cho biểu đồ tròn\r\n        const COLORS = [\"#2dce89\", \"#f5365c\", \"#11cdef\", \"#fb6340\", \"#8965e0\"];\r\n\r\n        return (\r\n            <div id=\"statistics-container\" ref={this.statisticsRef}>\r\n                {/* Thông tin chung về sự kiện */}\r\n                <Table className=\"shadow-sm mb-4\">\r\n                    <Card.Header className=\"bg-white\">\r\n                        <h5 className=\"mb-0 fw-bold\">Thông tin sự kiện</h5>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h6 className=\"fw-bold\">Thông tin cơ bản</h6>\r\n                                <Table borderless size=\"sm\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Tên sự kiện:</strong>\r\n                                            </td>\r\n                                            <td>{eventInfo.name}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Ngày diễn ra:</strong>\r\n                                            </td>\r\n                                            <td>{moment(eventInfo.date).format(\"DD/MM/YYYY\")}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Địa điểm:</strong>\r\n                                            </td>\r\n                                            <td>{eventInfo.address}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Loại sự kiện:</strong>\r\n                                            </td>\r\n                                            <td>{eventInfo.type}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Trạng thái:</strong>\r\n                                            </td>\r\n                                            <td>\r\n                                                <Badge\r\n                                                    bg={\r\n                                                        eventInfo.status === \"Đang diễn ra\"\r\n                                                            ? \"success\"\r\n                                                            : eventInfo.status === \"Sắp diễn ra\"\r\n                                                            ? \"info\"\r\n                                                            : eventInfo.status === \"Đã kết thúc\"\r\n                                                            ? \"secondary\"\r\n                                                            : \"warning\"\r\n                                                    }\r\n                                                >\r\n                                                    {eventInfo.status}\r\n                                                </Badge>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <h6 className=\"fw-bold\">Thông tin đăng ký</h6>\r\n                                <Table borderless size=\"sm\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Sức chứa:</strong>\r\n                                            </td>\r\n                                            <td>{eventInfo.capacity} người</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Đã đăng ký:</strong>\r\n                                            </td>\r\n                                            <td>{registrationStats.total} người</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Còn trống:</strong>\r\n                                            </td>\r\n                                            <td>{registrationStats.remainingSlots} chỗ</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Tỷ lệ đăng ký:</strong>\r\n                                            </td>\r\n                                            <td>{registrationStats.registrationRate}%</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Tỷ lệ tham dự:</strong>\r\n                                            </td>\r\n                                            <td>{attendanceStats.attendanceRate}%</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Table>\r\n\r\n                {/* Thống kê đăng ký và tham dự */}\r\n                <Row className=\"mb-4\">\r\n                    <Col md={6}>\r\n                        <Table className=\"shadow-sm h-100\">\r\n                            <Card.Header className=\"bg-white\">\r\n                                <h5 className=\"mb-0 fw-bold\">Phân bố đăng ký theo thời gian</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {/* Biểu đồ đăng ký theo thời gian */}\r\n                                <div id=\"registration-chart\">\r\n                                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                                        <BarChart data={registrationDistributionData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n                                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                            <XAxis dataKey=\"date\" tickFormatter={(date) => moment(date).format(\"DD/MM\")} />\r\n                                            <YAxis />\r\n                                            <Tooltip\r\n                                                formatter={(value, name) => [value + \" người\", \"Số lượng đăng ký\"]}\r\n                                                labelFormatter={(date) => `Ngày: ${moment(date).format(\"DD/MM/YYYY\")}`}\r\n                                            />\r\n                                            <Bar dataKey=\"count\" name=\"Số người đăng ký\" fill=\"#5e72e4\" barSize={30} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                                <div className=\"text-center mt-3\">\r\n                                    <small className=\"text-muted\">\r\n                                        {registrationStats.timeStats.earliest ? (\r\n                                            <>\r\n                                                Đăng ký đầu tiên: {moment(registrationStats.timeStats.earliest).format(\"DD/MM/YYYY HH:mm\")}\r\n                                                <br />\r\n                                            </>\r\n                                        ) : null}\r\n                                        {registrationStats.timeStats.latest ? <>Đăng ký mới nhất: {moment(registrationStats.timeStats.latest).format(\"DD/MM/YYYY HH:mm\")}</> : null}\r\n                                    </small>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Table>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Table className=\"shadow-sm h-100\">\r\n                            <Card.Header className=\"bg-white\">\r\n                                <h5 className=\"mb-0 fw-bold\">Tỷ lệ tham dự</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {/* Biểu đồ tròn tỷ lệ tham dự */}\r\n                                <div id=\"attendance-chart\" style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n                                    <ResponsiveContainer width=\"100%\" height={250}>\r\n                                        <PieChart>\r\n                                            <Pie\r\n                                                data={attendanceData}\r\n                                                cx=\"50%\"\r\n                                                cy=\"50%\"\r\n                                                labelLine={false}\r\n                                                outerRadius={80}\r\n                                                fill=\"#8884d8\"\r\n                                                dataKey=\"value\"\r\n                                                nameKey=\"name\"\r\n                                                label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                                            >\r\n                                                {attendanceData.map((entry, index) => (\r\n                                                    <Cell key={`cell-${index}`} fill={entry.color || COLORS[index % COLORS.length]} />\r\n                                                ))}\r\n                                            </Pie>\r\n                                            <Legend />\r\n                                            <Tooltip formatter={(value, name) => [`${value} người`, name]} />\r\n                                        </PieChart>\r\n                                    </ResponsiveContainer>\r\n                                    <div className=\"text-center mt-3\">\r\n                                        <small className=\"text-muted\">\r\n                                            {attendanceStats.earliestAttendance ? (\r\n                                                <>\r\n                                                    Điểm danh sớm nhất: {moment(attendanceStats.earliestAttendance).format(\"DD/MM/YYYY HH:mm\")}\r\n                                                    <br />\r\n                                                </>\r\n                                            ) : null}\r\n                                            {attendanceStats.latestAttendance ? (\r\n                                                <>Điểm danh muộn nhất: {moment(attendanceStats.latestAttendance).format(\"DD/MM/YYYY HH:mm\")}</>\r\n                                            ) : null}\r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* Thống kê thanh toán */}\r\n                <Table className=\"shadow-sm mb-4\">\r\n                    <Card.Header className=\"bg-white\">\r\n                        <h5 className=\"mb-0 fw-bold\">Thống kê thanh toán</h5>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <div className=\"mb-4\">\r\n                                    <h6 className=\"fw-bold\">Tình hình thanh toán</h6>\r\n                                    <ul className=\"list-group\">\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            Doanh thu dự kiến:\r\n                                            <span>{paymentStats.expectedRevenue.toLocaleString(\"vi-VN\")} VNĐ</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            Đã thanh toán:\r\n                                            <span>{paymentStats.totalPaid.toLocaleString(\"vi-VN\")} VNĐ</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            Chưa thanh toán:\r\n                                            <span>{paymentStats.totalUnpaid.toLocaleString(\"vi-VN\")} VNĐ</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            Tỷ lệ thanh toán:\r\n                                            <span>{paymentStats.paymentRate}%</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <h6 className=\"fw-bold\">Thanh toán theo trạng thái</h6>\r\n                                <Table hover>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Trạng thái</th>\r\n                                            <th>Số lượng</th>\r\n                                            <th>Thành tiền</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {paymentStats.byStatus.map((item, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>\r\n                                                    <Badge bg={item.code === \"PS1\" ? \"success\" : \"secondary\"}>{item.name}</Badge>\r\n                                                </td>\r\n                                                <td>{item.count}</td>\r\n                                                <td>{item.amount.toLocaleString(\"vi-VN\")} VNĐ</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <h6 className=\"fw-bold mb-3\">Phương thức thanh toán</h6>\r\n                                <div id=\"payment-chart\">\r\n                                    <ResponsiveContainer width=\"100%\" height={250}>\r\n                                        <BarChart data={paymentMethodData} layout=\"vertical\" margin={{ top: 20, right: 30, left: 60, bottom: 5 }}>\r\n                                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                            <XAxis type=\"number\" />\r\n                                            <YAxis dataKey=\"name\" type=\"category\" />\r\n                                            <Tooltip formatter={(value, name) => [value + (name === \"count\" ? \" người\" : \" VNĐ\"), name === \"count\" ? \"Số lượng\" : \"Thành tiền\"]} />\r\n                                            <Legend formatter={(value) => (value === \"count\" ? \"Số lượng\" : \"Thành tiền\")} />\r\n                                            <Bar dataKey=\"count\" name=\"count\" fill=\"#5e72e4\" barSize={30} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n\r\n                                    <h6 className=\"fw-bold mt-4\">Chi tiết theo phương thức</h6>\r\n                                    <Table hover>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Phương thức</th>\r\n                                                <th>Số lượng</th>\r\n                                                <th>Thành tiền</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {paymentStats.byMethod.map((method, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td>{method.name}</td>\r\n                                                    <td>{method.count}</td>\r\n                                                    <td>{method.amount.toLocaleString(\"vi-VN\")} VNĐ</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Table>\r\n\r\n                {/* Nút xuất thống kê */}\r\n                <div className=\"d-flex justify-content-end mb-5 gap-2\">\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"primary\" id=\"export-dropdown\">\r\n                            <i className=\"fas fa-file-export me-2\"></i> Xuất báo cáo\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={this.exportStatisticsToPDF}>\r\n                                <i className=\"fas fa-file-pdf me-2\"></i> Xuất PDF\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item onClick={this.exportStatisticsToCSV}>\r\n                                <i className=\"fas fa-file-csv me-2\"></i> Xuất CSV\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    fetchRegistrations = async (eventId) => {\r\n        try {\r\n            const res = await getEventRegistrationsById(eventId);\r\n\r\n            if (res && res.data && res.data.errCode === 0) {\r\n                const registrations = res.data.data || [];\r\n\r\n                // Lấy tên sự kiện từ response\r\n                const events = await getEventById(eventId);\r\n                if (!events || !events.data || events.data.errCode !== 0) {\r\n                    toast.error(\"Không tìm thấy thông tin sự kiện\");\r\n                    this.setState({ isLoading: false });\r\n                    return;\r\n                }\r\n\r\n                const eventName = events.data.data?.name || \"Sự kiện không rõ tên\";\r\n\r\n                // Thống kê\r\n                const approvedRegistrations = registrations.filter((r) => r.status === \"approved\").length;\r\n                const pendingRegistrations = registrations.filter((r) => r.status === \"pending\").length;\r\n                const rejectedRegistrations = registrations.filter((r) => r.status === \"rejected\").length;\r\n                const paidRegistrations = registrations.filter((r) => r.statusCostCode === \"PS1\").length;\r\n                const unpaidRegistrations = registrations.filter((r) => r.statusCostCode === \"PS2\").length;\r\n                const attendedRegistrations = registrations.filter((r) => r.attendanceStatus === 1).length;\r\n\r\n                this.setState({\r\n                    registrations,\r\n                    filteredRegistrations: registrations,\r\n                    eventName,\r\n                    isLoading: false,\r\n                    totalRegistrations: registrations.length,\r\n                    approvedRegistrations,\r\n                    pendingRegistrations,\r\n                    rejectedRegistrations,\r\n                    paidRegistrations,\r\n                    unpaidRegistrations,\r\n                    attendedRegistrations,\r\n                });\r\n            } else {\r\n                toast.error(res.data.errMessage || \"Lỗi khi tải danh sách đăng ký\");\r\n                this.setState({ isLoading: false });\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Không thể kết nối máy chủ\");\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n\r\n    // Tìm kiếm và lọc\r\n    handleSearch = (e) => {\r\n        const searchTerm = e.target.value.toLowerCase();\r\n        this.setState({ searchTerm }, this.filterRegistrations);\r\n    };\r\n\r\n    handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value }, this.filterRegistrations);\r\n    };\r\n\r\n    handleSort = (field) => {\r\n        const { sortField, sortDirection } = this.state;\r\n        const newDirection = field === sortField && sortDirection === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n        this.setState(\r\n            {\r\n                sortField: field,\r\n                sortDirection: newDirection,\r\n            },\r\n            this.filterRegistrations\r\n        );\r\n    };\r\n\r\n    filterRegistrations = () => {\r\n        const { registrations, searchTerm, statusFilter, paymentFilter, attendanceFilter, sortField, sortDirection } = this.state;\r\n\r\n        let filtered = [...registrations];\r\n\r\n        // Áp dụng bộ lọc tìm kiếm\r\n        if (searchTerm) {\r\n            filtered = filtered.filter((item) => {\r\n                const fullName = item.name ? item.name.toLowerCase() : \"\";\r\n                const email = item.email ? item.email.toLowerCase() : \"\";\r\n                const phone = item.phoneNumber ? item.phoneNumber.toLowerCase() : \"\";\r\n                const notes = item.notes ? item.notes.toLowerCase() : \"\";\r\n\r\n                return fullName.includes(searchTerm) || email.includes(searchTerm) || phone.includes(searchTerm) || notes.includes(searchTerm);\r\n            });\r\n        }\r\n\r\n        // Áp dụng bộ lọc trạng thái đăng ký\r\n        if (statusFilter !== \"all\") {\r\n            filtered = filtered.filter((item) => item.status === statusFilter);\r\n        }\r\n\r\n        // Áp dụng bộ lọc trạng thái thanh toán\r\n        if (paymentFilter !== \"all\") {\r\n            filtered = filtered.filter((item) => item.statusCostCode === paymentFilter);\r\n        }\r\n\r\n        // Áp dụng bộ lọc trạng thái điểm danh\r\n        if (attendanceFilter !== \"all\") {\r\n            const attendanceStatus = attendanceFilter === \"attended\" ? 1 : 0;\r\n            filtered = filtered.filter((item) => item.attendanceStatus === attendanceStatus);\r\n        }\r\n\r\n        // Sắp xếp kết quả\r\n        filtered.sort((a, b) => {\r\n            let valueA, valueB;\r\n\r\n            switch (sortField) {\r\n                case \"name\":\r\n                    valueA = a.name || \"\";\r\n                    valueB = b.name || \"\";\r\n                    break;\r\n                case \"email\":\r\n                    valueA = a.email || \"\";\r\n                    valueB = b.email || \"\";\r\n                    break;\r\n                case \"phoneNumber\":\r\n                    valueA = a.phoneNumber || \"\";\r\n                    valueB = b.phoneNumber || \"\";\r\n                    break;\r\n                case \"registeredAt\":\r\n                default:\r\n                    valueA = a.registeredAt ? new Date(a.registeredAt) : null;\r\n                    valueB = b.registeredAt ? new Date(b.registeredAt) : null;\r\n                    break;\r\n            }\r\n\r\n            if (sortDirection === \"asc\") {\r\n                if (valueA < valueB) return -1;\r\n                if (valueA > valueB) return 1;\r\n                return 0;\r\n            } else {\r\n                if (valueA > valueB) return -1;\r\n                if (valueA < valueB) return 1;\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        this.setState({ filteredRegistrations: filtered });\r\n    };\r\n\r\n    // Xử lý trạng thái đăng ký\r\n    handleApprove = async (id) => {\r\n        await this.updateStatus(id, \"approved\");\r\n    };\r\n\r\n    handleReject = async (id) => {\r\n        await this.updateStatus(id, \"rejected\");\r\n    };\r\n\r\n    updateStatus = async (id, status) => {\r\n        try {\r\n            this.setState({ isLoading: true });\r\n            const res = await updateEventRegistration(id, status);\r\n\r\n            if (res && res.data && res.data.errCode === 0) {\r\n                // Cập nhật trạng thái trong state\r\n                const updatedRegistrations = this.state.registrations.map((item) => (item.id === id ? { ...item, status } : item));\r\n\r\n                // Cập nhật thống kê\r\n                const approvedRegistrations =\r\n                    status === \"approved\" ? this.state.approvedRegistrations + 1 : status === \"rejected\" ? this.state.approvedRegistrations : this.state.approvedRegistrations - 1;\r\n\r\n                const pendingRegistrations = this.state.pendingRegistrations - 1;\r\n\r\n                const rejectedRegistrations =\r\n                    status === \"rejected\" ? this.state.rejectedRegistrations + 1 : status === \"approved\" ? this.state.rejectedRegistrations : this.state.rejectedRegistrations - 1;\r\n\r\n                this.setState(\r\n                    {\r\n                        registrations: updatedRegistrations,\r\n                        approvedRegistrations,\r\n                        pendingRegistrations,\r\n                        rejectedRegistrations,\r\n                        isLoading: false,\r\n                    },\r\n                    this.filterRegistrations\r\n                );\r\n\r\n                toast.success(`${status === \"approved\" ? \"Duyệt\" : \"Từ chối\"} đăng ký thành công!`);\r\n            } else {\r\n                toast.error(res.data.errMessage || \"Lỗi khi cập nhật trạng thái\");\r\n                this.setState({ isLoading: false });\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Không thể kết nối máy chủ\");\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n\r\n    // Xử lý điểm danh\r\n    handleAttendance = (registration) => {\r\n        this.setState({\r\n            showAttendanceModal: true,\r\n            selectedRegistration: registration,\r\n            attendanceDate: registration.attendanceTime ? new Date(registration.attendanceTime) : new Date(),\r\n            attendanceNote: registration.attendanceNote || \"\",\r\n        });\r\n    };\r\n\r\n    closeAttendanceModal = () => {\r\n        this.setState({\r\n            showAttendanceModal: false,\r\n            selectedRegistration: null,\r\n            attendanceDate: new Date(),\r\n            attendanceNote: \"\",\r\n        });\r\n    };\r\n\r\n    handleAttendanceDateChange = (date) => {\r\n        this.setState({ attendanceDate: date });\r\n    };\r\n\r\n    handleAttendanceNoteChange = (e) => {\r\n        this.setState({ attendanceNote: e.target.value });\r\n    };\r\n\r\n    markAttendance = async () => {\r\n        const { selectedRegistration, attendanceDate, attendanceNote } = this.state;\r\n\r\n        try {\r\n            this.setState({ isLoading: true });\r\n\r\n            const attendanceData = {\r\n                id: selectedRegistration.id,\r\n                attendanceStatus: 1,\r\n                attendanceTime: attendanceDate.toISOString(),\r\n                attendanceNote: attendanceNote,\r\n            };\r\n\r\n            const res = await updateEventRegistration(attendanceData);\r\n\r\n            if (res && res.data && res.data.errCode === 0) {\r\n                // Cập nhật danh sách đăng ký\r\n                const updatedRegistrations = this.state.registrations.map((item) =>\r\n                    item.id === selectedRegistration.id\r\n                        ? {\r\n                              ...item,\r\n                              attendanceStatus: 1,\r\n                              attendanceTime: attendanceDate.toISOString(),\r\n                              attendanceNote: attendanceNote,\r\n                          }\r\n                        : item\r\n                );\r\n\r\n                // Cập nhật thống kê\r\n                const attendedRegistrations = this.state.attendedRegistrations + 1;\r\n\r\n                this.setState(\r\n                    {\r\n                        registrations: updatedRegistrations,\r\n                        attendedRegistrations,\r\n                        isLoading: false,\r\n                        showAttendanceModal: false,\r\n                    },\r\n                    this.filterRegistrations\r\n                );\r\n\r\n                toast.success(\"Điểm danh thành công!\");\r\n            } else {\r\n                toast.error(res.data.errMessage || \"Điểm danh không thành công\");\r\n                this.setState({ isLoading: false });\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Không thể kết nối máy chủ\");\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n\r\n    cancelAttendance = async (id) => {\r\n        try {\r\n            this.setState({ isLoading: true });\r\n\r\n            const attendanceData = {\r\n                id: id,\r\n                attendanceStatus: 0,\r\n                attendanceTime: null,\r\n                attendanceNote: \"\",\r\n            };\r\n\r\n            const res = await updateEventRegistration(attendanceData);\r\n\r\n            if (res && res.data && res.data.errCode === 0) {\r\n                // Cập nhật danh sách đăng ký\r\n                const updatedRegistrations = this.state.registrations.map((item) =>\r\n                    item.id === id\r\n                        ? {\r\n                              ...item,\r\n                              attendanceStatus: 0,\r\n                              attendanceTime: null,\r\n                              attendanceNote: \"\",\r\n                          }\r\n                        : item\r\n                );\r\n\r\n                // Cập nhật thống kê\r\n                const attendedRegistrations = this.state.attendedRegistrations - 1;\r\n\r\n                this.setState(\r\n                    {\r\n                        registrations: updatedRegistrations,\r\n                        attendedRegistrations,\r\n                        isLoading: false,\r\n                    },\r\n                    this.filterRegistrations\r\n                );\r\n\r\n                toast.success(\"Hủy điểm danh thành công!\");\r\n            } else {\r\n                toast.error(res.data.errMessage || \"Hủy điểm danh không thành công\");\r\n                this.setState({ isLoading: false });\r\n            }\r\n        } catch (e) {\r\n            toast.error(\"Không thể kết nối máy chủ\");\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n\r\n    // Xem chi tiết đăng ký\r\n    handleViewDetail = (registration) => {\r\n        this.setState({\r\n            showDetailModal: true,\r\n            selectedRegistration: registration,\r\n        });\r\n    };\r\n\r\n    closeDetailModal = () => {\r\n        this.setState({\r\n            showDetailModal: false,\r\n            selectedRegistration: null,\r\n        });\r\n    };\r\n\r\n    // Quay lại trang danh sách sự kiện\r\n    handleBackToEvents = () => {\r\n        this.props.history.push(\"/system/event-display\");\r\n    };\r\n\r\n    // Xuất dữ liệu ra file CSV\r\n    exportToCSV = () => {\r\n        const { filteredRegistrations } = this.state;\r\n\r\n        if (filteredRegistrations.length === 0) {\r\n            toast.info(\"Không có dữ liệu để xuất\");\r\n            return;\r\n        }\r\n\r\n        // Tạo dữ liệu CSV\r\n        const headers = [\r\n            \"STT\",\r\n            \"Họ tên\",\r\n            \"Email\",\r\n            \"Số điện thoại\",\r\n            \"Ngày đăng ký\",\r\n            \"Trạng thái đăng ký\",\r\n            \"Trạng thái thanh toán\",\r\n            \"Phương thức thanh toán\",\r\n            \"Trạng thái điểm danh\",\r\n            \"Thời gian điểm danh\",\r\n            \"Ghi chú\",\r\n        ];\r\n\r\n        const csvData = [\r\n            headers.join(\",\"),\r\n            ...filteredRegistrations.map((item, idx) =>\r\n                [\r\n                    idx + 1,\r\n                    item.name || \"\",\r\n                    item.email || \"\",\r\n                    item.phoneNumber || \"\",\r\n                    item.registeredAt ? moment(item.registeredAt).format(\"DD/MM/YYYY HH:mm\") : \"\",\r\n                    item.status === \"approved\" ? \"Đã duyệt\" : item.status === \"pending\" ? \"Chờ duyệt\" : \"Từ chối\",\r\n                    item.statusCostCode === \"PS1\" ? \"Đã thanh toán\" : \"Chưa thanh toán\",\r\n                    item.payMethod?.valueVi || \"\",\r\n                    item.attendanceStatus === 1 ? \"Đã điểm danh\" : \"Chưa điểm danh\",\r\n                    item.attendanceTime ? moment(item.attendanceTime).format(\"DD/MM/YYYY HH:mm\") : \"\",\r\n                    item.notes || \"\",\r\n                ].join(\",\")\r\n            ),\r\n        ].join(\"\\n\");\r\n\r\n        // Tạo file CSV và tải xuống\r\n        const blob = new Blob([csvData], { type: \"text/csv;charset=utf-8;\" });\r\n        const link = document.createElement(\"a\");\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute(\"href\", url);\r\n        link.setAttribute(\"download\", `danh-sach-dang-ky-${this.state.eventName.replace(/[^a-z0-9]/gi, \"-\")}-${new Date().getTime()}.csv`);\r\n        link.style.visibility = \"hidden\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    // Format date\r\n    formatDate = (dateString) => {\r\n        if (!dateString) return \"-\";\r\n        return moment(dateString).format(\"DD/MM/YYYY HH:mm\");\r\n    };\r\n\r\n    // Thêm hàm xử lý toggle điểm danh nhanh vào class EventRegistrationManage\r\n    handleAttendanceToggle = async (event, item) => {\r\n        // Ngăn hành vi mặc định để tránh bubble event\r\n        event.stopPropagation();\r\n\r\n        const newAttendanceStatus = item.attendanceStatus === 1 ? 0 : 1;\r\n        const newAttendanceTime = newAttendanceStatus === 1 ? new Date().toISOString() : null;\r\n\r\n        try {\r\n            // Cập nhật UI trước để tăng trải nghiệm người dùng\r\n            const updatedRegistrations = this.state.registrations.map((reg) =>\r\n                reg.id === item.id\r\n                    ? {\r\n                          ...reg,\r\n                          attendanceStatus: newAttendanceStatus,\r\n                          attendanceTime: newAttendanceTime,\r\n                      }\r\n                    : reg\r\n            );\r\n\r\n            const attendedRegistrations = newAttendanceStatus === 1 ? this.state.attendedRegistrations + 1 : this.state.attendedRegistrations - 1;\r\n\r\n            this.setState(\r\n                {\r\n                    registrations: updatedRegistrations,\r\n                    attendedRegistrations,\r\n                },\r\n                this.filterRegistrations\r\n            );\r\n\r\n            // Gửi request API\r\n            const attendanceData = {\r\n                id: item.id,\r\n                eventId: this.state.eventId,\r\n                attendanceStatus: newAttendanceStatus,\r\n                attendanceTime: newAttendanceTime,\r\n            };\r\n\r\n            const res = await updateEventRegistration(attendanceData);\r\n            console.log(\"API response updateEventRegistration:\", res);\r\n            if (res && res.data && res.data.errCode === 0) {\r\n                toast.success(newAttendanceStatus === 1 ? \"Điểm danh thành công!\" : \"Hủy điểm danh thành công!\");\r\n                // Tạo thông báo và gửi email\r\n                const notificationData = {\r\n                    user_id: item.userId,\r\n                    title: newAttendanceStatus === 1 ? `Đã điểm danh sự kiện ${this.state.eventName}` : `Hủy điểm danh sự kiện ${this.state.eventName}`,\r\n                    message:\r\n                        newAttendanceStatus === 1\r\n                            ? `Bạn đã được điểm danh tham gia sự kiện \"${this.state.eventName}\" vào lúc ${moment(newAttendanceTime).format(\"DD/MM/YYYY HH:mm\")}`\r\n                            : `Điểm danh của bạn cho sự kiện \"${this.state.eventName}\" đã bị hủy.`,\r\n                    type: \"event_update\",\r\n                    reference_id: this.state.eventId,\r\n                    reference_type: \"EVENT_ATTENDANCE\",\r\n                    created_by: this.props.userInfo?.id || \"system\", // Sử dụng ID người dùng hiện tại hoặc \"system\" nếu không có\r\n                    created_at: this.state.attendanceTime || new Date().toISOString(),\r\n                    link: `/event-registration-details/${this.state.eventId}`,\r\n                    send_to_all: false, // Chỉ gửi cho người dùng cụ thể\r\n                };\r\n\r\n                try {\r\n                    const notifyRes = await createNotification(notificationData);\r\n                    console.log(\"Notification created:\", notifyRes);\r\n\r\n                    if (notifyRes && notifyRes.data && notifyRes.data.errCode === 0) {\r\n                        console.log(`Thông báo và email đã được gửi cho người dùng ${item.name}`);\r\n                    } else {\r\n                        console.error(\"Không thể tạo thông báo:\", notifyRes?.data?.errMessage || \"Lỗi không xác định\");\r\n                    }\r\n                } catch (notifyError) {\r\n                    console.error(\"Lỗi khi tạo thông báo:\", notifyError);\r\n                }\r\n            } else {\r\n                // Rollback UI nếu API thất bại\r\n                const revertedRegistrations = this.state.registrations.map((reg) =>\r\n                    reg.id === item.id\r\n                        ? {\r\n                              ...reg,\r\n                              attendanceStatus: item.attendanceStatus,\r\n                              attendanceTime: item.attendanceTime,\r\n                          }\r\n                        : reg\r\n                );\r\n\r\n                const revertedCount = newAttendanceStatus === 0 ? this.state.attendedRegistrations + 1 : this.state.attendedRegistrations - 1;\r\n\r\n                this.setState(\r\n                    {\r\n                        registrations: revertedRegistrations,\r\n                        attendedRegistrations: revertedCount,\r\n                    },\r\n                    this.filterRegistrations\r\n                );\r\n\r\n                toast.error(res?.data?.errMessage || \"Cập nhật điểm danh không thành công\");\r\n            }\r\n        } catch (e) {\r\n            console.error(\"Lỗi khi cập nhật điểm danh:\", e);\r\n            toast.error(\"Không thể kết nối máy chủ\");\r\n\r\n            // Rollback UI khi có lỗi\r\n            const revertedRegistrations = this.state.registrations.map((reg) =>\r\n                reg.id === item.id\r\n                    ? {\r\n                          ...reg,\r\n                          attendanceStatus: item.attendanceStatus,\r\n                          attendanceTime: item.attendanceTime,\r\n                      }\r\n                    : reg\r\n            );\r\n\r\n            const revertedCount = newAttendanceStatus === 0 ? this.state.attendedRegistrations + 1 : this.state.attendedRegistrations - 1;\r\n\r\n            this.setState(\r\n                {\r\n                    registrations: revertedRegistrations,\r\n                    attendedRegistrations: revertedCount,\r\n                },\r\n                this.filterRegistrations\r\n            );\r\n        }\r\n    };\r\n\r\n    // Thêm phương thức xuất thống kê ra CSV\r\n    exportStatisticsToCSV = () => {\r\n        const { eventStats } = this.state;\r\n\r\n        if (!eventStats) {\r\n            toast.info(\"Không có dữ liệu thống kê để xuất\");\r\n            return;\r\n        }\r\n\r\n        const { eventInfo, registrationStats, attendanceStats, paymentStats } = eventStats;\r\n\r\n        // Tạo dữ liệu CSV\r\n        let csvData = [\r\n            // Thông tin sự kiện\r\n            [\"THỐNG KÊ SỰ KIỆN\"],\r\n            [\"Tên sự kiện:\", eventInfo.name],\r\n            [\"Ngày diễn ra:\", moment(eventInfo.date).format(\"DD/MM/YYYY\")],\r\n            [\"Địa điểm:\", eventInfo.address],\r\n            [\"Loại sự kiện:\", eventInfo.type],\r\n            [\"Trạng thái:\", eventInfo.status],\r\n            [\"\"],\r\n\r\n            // Thống kê đăng ký\r\n            [\"THỐNG KÊ ĐĂNG KÝ\"],\r\n            [\"Sức chứa:\", eventInfo.capacity + \" người\"],\r\n            [\"Đã đăng ký:\", registrationStats.total + \" người\"],\r\n            [\"Còn trống:\", registrationStats.remainingSlots + \" chỗ\"],\r\n            [\"Tỷ lệ đăng ký:\", registrationStats.registrationRate + \"%\"],\r\n            [\"Đăng ký đầu tiên:\", registrationStats.timeStats.earliest ? moment(registrationStats.timeStats.earliest).format(\"DD/MM/YYYY HH:mm\") : \"-\"],\r\n            [\"Đăng ký mới nhất:\", registrationStats.timeStats.latest ? moment(registrationStats.timeStats.latest).format(\"DD/MM/YYYY HH:mm\") : \"-\"],\r\n            [\"\"],\r\n\r\n            // Thống kê tham dự\r\n            [\"THỐNG KÊ THAM DỰ\"],\r\n            [\"Đã tham dự:\", attendanceStats.attended + \" người\"],\r\n            [\"Chưa tham dự:\", attendanceStats.notAttended + \" người\"],\r\n            [\"Tỷ lệ tham dự:\", attendanceStats.attendanceRate + \"%\"],\r\n            [\"Điểm danh sớm nhất:\", attendanceStats.earliestAttendance ? moment(attendanceStats.earliestAttendance).format(\"DD/MM/YYYY HH:mm\") : \"-\"],\r\n            [\"Điểm danh muộn nhất:\", attendanceStats.latestAttendance ? moment(attendanceStats.latestAttendance).format(\"DD/MM/YYYY HH:mm\") : \"-\"],\r\n            [\"\"],\r\n\r\n            // Thống kê thanh toán\r\n            [\"THỐNG KÊ THANH TOÁN\"],\r\n            [\"Doanh thu dự kiến:\", paymentStats.expectedRevenue.toLocaleString(\"vi-VN\") + \" VNĐ\"],\r\n            [\"Đã thanh toán:\", paymentStats.totalPaid.toLocaleString(\"vi-VN\") + \" VNĐ\"],\r\n            [\"Chưa thanh toán:\", paymentStats.totalUnpaid.toLocaleString(\"vi-VN\") + \" VNĐ\"],\r\n            [\"Tỷ lệ thanh toán:\", paymentStats.paymentRate + \"%\"],\r\n            [\"\"],\r\n\r\n            // Thống kê theo trạng thái thanh toán\r\n            [\"THEO TRẠNG THÁI THANH TOÁN\"],\r\n            [\"Trạng thái\", \"Số lượng\", \"Thành tiền (VNĐ)\"],\r\n        ];\r\n\r\n        // Thêm dữ liệu trạng thái thanh toán\r\n        paymentStats.byStatus.forEach((status) => {\r\n            csvData.push([status.name, status.count, status.amount.toLocaleString(\"vi-VN\")]);\r\n        });\r\n\r\n        csvData.push([\"\"]);\r\n        csvData.push([\"THEO PHƯƠNG THỨC THANH TOÁN\"]);\r\n        csvData.push([\"Phương thức\", \"Số lượng\", \"Thành tiền (VNĐ)\"]);\r\n\r\n        // Thêm dữ liệu phương thức thanh toán\r\n        paymentStats.byMethod.forEach((method) => {\r\n            csvData.push([method.name, method.count, method.amount.toLocaleString(\"vi-VN\")]);\r\n        });\r\n\r\n        csvData.push([\"\"]);\r\n        csvData.push([\"PHÂN BỐ ĐĂNG KÝ THEO THỜI GIAN\"]);\r\n        csvData.push([\"Ngày\", \"Số lượng đăng ký\"]);\r\n\r\n        // Thêm dữ liệu phân bố đăng ký theo thời gian\r\n        registrationStats.timeStats.distribution.forEach((item) => {\r\n            csvData.push([moment(item.date).format(\"DD/MM/YYYY\"), item.count]);\r\n        });\r\n\r\n        csvData.push([\"\"]);\r\n        csvData.push([\"DANH SÁCH NGƯỜI THAM DỰ\"]);\r\n        csvData.push([\"STT\", \"Họ tên\", \"Email\", \"Số điện thoại\", \"Ngày đăng ký\", \"Trạng thái thanh toán\", \"Phương thức thanh toán\", \"Đã tham dự\", \"Thời gian tham dự\", \"Ghi chú\"]);\r\n\r\n        // Thêm danh sách người tham dự\r\n        eventStats.registrations.forEach((item, idx) => {\r\n            csvData.push([\r\n                idx + 1,\r\n                item.name || \"\",\r\n                item.email || \"\",\r\n                item.phoneNumber || \"\",\r\n                item.registeredAt ? moment(item.registeredAt).format(\"DD/MM/YYYY HH:mm\") : \"\",\r\n                item.paymentStatus || \"\",\r\n                item.paymentMethod || \"\",\r\n                item.attended ? \"Đã tham dự\" : \"Chưa tham dự\",\r\n                item.attendanceTime ? moment(item.attendanceTime).format(\"DD/MM/YYYY HH:mm\") : \"\",\r\n                item.notes || \"\",\r\n            ]);\r\n        });\r\n\r\n        // Chuyển đổi mảng dữ liệu thành chuỗi CSV\r\n        const csvContent = csvData.map((row) => row.join(\",\")).join(\"\\n\");\r\n\r\n        // Tạo file CSV và tải xuống\r\n        const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n        const link = document.createElement(\"a\");\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute(\"href\", url);\r\n        link.setAttribute(\"download\", `thong-ke-su-kien-${eventInfo.name.replace(/[^a-z0-9]/gi, \"-\")}-${new Date().getTime()}.csv`);\r\n        link.style.visibility = \"hidden\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n\r\n        toast.success(\"Đã xuất thống kê sự kiện thành công!\");\r\n    };\r\n\r\n    // exportAllChartsAsImages = () => {\r\n    //     const chartIds = [\r\n    //         { id: \"registration-chart\", name: \"phan-bo-dang-ky\" },\r\n    //         { id: \"attendance-chart\", name: \"ty-le-tham-du\" },\r\n    //         { id: \"payment-chart\", name: \"thanh-toan\" },\r\n    //     ];\r\n\r\n    //     toast.info(`Đang chuẩn bị xuất ${chartIds.length} biểu đồ...`);\r\n\r\n    //     // Hàm xuất từng biểu đồ\r\n    //     const exportSingleChart = (chartId, chartName) => {\r\n    //         return new Promise((resolve, reject) => {\r\n    //             const chartElement = document.getElementById(chartId);\r\n    //             if (!chartElement) {\r\n    //                 console.warn(`Không tìm thấy biểu đồ ${chartId}`);\r\n    //                 resolve(false);\r\n    //                 return;\r\n    //             }\r\n\r\n    //             html2canvas(chartElement, {\r\n    //                 scale: 2,\r\n    //                 useCORS: true,\r\n    //                 backgroundColor: \"#ffffff\",\r\n    //             })\r\n    //                 .then((canvas) => {\r\n    //                     const link = document.createElement(\"a\");\r\n    //                     link.download = `${chartName}-${new Date().getTime()}.png`;\r\n    //                     link.href = canvas.toDataURL(\"image/png\");\r\n    //                     link.click();\r\n    //                     resolve(true);\r\n    //                 })\r\n    //                 .catch((err) => {\r\n    //                     console.error(`Lỗi khi xuất biểu đồ ${chartId}:`, err);\r\n    //                     reject(err);\r\n    //                 });\r\n    //         });\r\n    //     };\r\n\r\n    //     // Xuất lần lượt các biểu đồ\r\n    //     Promise.all(chartIds.map((chart) => exportSingleChart(chart.id, chart.name)))\r\n    //         .then((results) => {\r\n    //             const successCount = results.filter(Boolean).length;\r\n    //             if (successCount > 0) {\r\n    //                 toast.success(`Đã xuất ${successCount}/${chartIds.length} biểu đồ thành công!`);\r\n    //             } else {\r\n    //                 toast.warning(\"Không thể xuất biểu đồ. Vui lòng kiểm tra ID của các biểu đồ.\");\r\n    //             }\r\n    //         })\r\n    //         .catch(() => {\r\n    //             toast.error(\"Đã xảy ra lỗi khi xuất biểu đồ.\");\r\n    //         });\r\n    // };\r\n\r\n    exportStatisticsToPDF = () => {\r\n        const { eventStats } = this.state;\r\n        if (!eventStats) {\r\n            toast.info(\"Không có dữ liệu thống kê để xuất\");\r\n            return;\r\n        }\r\n\r\n        // Hiển thị trạng thái đang xuất\r\n        toast.info(\"Đang chuẩn bị xuất PDF, vui lòng đợi...\");\r\n        this.setState({ isExporting: true });\r\n\r\n        // Sử dụng setTimeout để đảm bảo toast hiển thị trước khi xử lý nặng\r\n        setTimeout(() => {\r\n            const statisticsElement = document.getElementById(\"statistics-container\");\r\n\r\n            if (!statisticsElement) {\r\n                toast.error(\"Không thể tìm thấy nội dung thống kê để xuất\");\r\n                this.setState({ isExporting: false });\r\n                return;\r\n            }\r\n\r\n            html2canvas(statisticsElement, {\r\n                scale: 2, // Tăng độ phân giải\r\n                useCORS: true, // Cho phép tải hình ảnh từ các domain khác\r\n                logging: false,\r\n                backgroundColor: \"#ffffff\",\r\n            })\r\n                .then((canvas) => {\r\n                    const imgData = canvas.toDataURL(\"image/png\");\r\n                    const pdf = new jsPDF({\r\n                        orientation: \"portrait\",\r\n                        unit: \"mm\",\r\n                        format: \"a4\",\r\n                    });\r\n\r\n                    // Tính toán kích thước để vừa trang A4\r\n                    const imgWidth = 148; // Chiều rộng trang A4 (mm)\r\n                    const pageHeight = 210; // Chiều cao trang A4 (mm)\r\n                    const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n\r\n                    let heightLeft = imgHeight;\r\n                    let position = 0;\r\n\r\n                    // Thêm thông tin sự kiện vào đầu PDF\r\n                    pdf.setFontSize(16);\r\n                    const eventName = eventStats.eventInfo.name || \"Sự kiện không rõ tên\";\r\n                    const eventNameNonAccent = this.removeAccents(eventName);\r\n                    pdf.text(`Thong_ke_su_kien: ${eventNameNonAccent}`, 15, 15);\r\n                    pdf.setFontSize(12);\r\n                    pdf.text(`Ngay_xuat: ${moment().format(\"DD/MM/YYYY HH:mm\")}`, 15, 25);\r\n\r\n                    // Tăng vị trí bắt đầu của hình ảnh\r\n                    position = 30;\r\n\r\n                    // Thêm hình ảnh vào PDF\r\n                    pdf.addImage(imgData, \"PNG\", 0, position, imgWidth, imgHeight);\r\n                    heightLeft -= pageHeight - position;\r\n\r\n                    // Nếu nội dung quá dài, thêm các trang tiếp theo\r\n                    while (heightLeft > 0) {\r\n                        position = 0;\r\n                        pdf.addPage();\r\n                        pdf.addImage(imgData, \"PNG\", 0, position - (pageHeight - 30), imgWidth, imgHeight);\r\n                        heightLeft -= pageHeight;\r\n                    }\r\n\r\n                    // Lưu file PDF\r\n                    pdf.save(`thong-ke-su-kien-${eventStats.eventInfo.name.replace(/[^a-z0-9]/gi, \"-\")}-${new Date().getTime()}.pdf`);\r\n\r\n                    // Kết thúc xuất\r\n                    this.setState({ isExporting: false });\r\n                    toast.success(\"Đã xuất thống kê sự kiện thành PDF thành công!\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Lỗi khi xuất PDF:\", error);\r\n                    this.setState({ isExporting: false });\r\n                    toast.error(\"Lỗi khi xuất PDF. Vui lòng thử lại.\");\r\n                });\r\n        }, 500);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            eventName,\r\n            filteredRegistrations,\r\n            isLoading,\r\n            searchTerm,\r\n            statusFilter,\r\n            paymentFilter,\r\n            attendanceFilter,\r\n            showDetailModal,\r\n            showAttendanceModal,\r\n            selectedRegistration,\r\n            attendanceDate,\r\n            attendanceNote,\r\n            totalRegistrations,\r\n            approvedRegistrations,\r\n            pendingRegistrations,\r\n            rejectedRegistrations,\r\n            paidRegistrations,\r\n            unpaidRegistrations,\r\n            attendedRegistrations,\r\n            sortField,\r\n            sortDirection,\r\n            activeTab,\r\n            eventStats,\r\n        } = this.state;\r\n\r\n        return (\r\n            <Container fluid className=\"event-registration-manage-container p-4\">\r\n                <Button variant=\"outline-secondary\" className=\"mb-3\" onClick={this.handleBackToEvents}>\r\n                    <FaArrowLeft className=\"me-2\" /> Quay lại danh sách sự kiện\r\n                </Button>\r\n\r\n                <h3 className=\"mb-3 fw-bold\">Quản lý đăng ký: {eventName}</h3>\r\n\r\n                {/* Tab Navigation */}\r\n                <div className=\"event-tabs mb-4\">\r\n                    <ul className=\"nav nav-tabs\">\r\n                        <li className=\"nav-item\">\r\n                            <button className={`nav-link ${activeTab === \"registrations\" ? \"active\" : \"\"}`} onClick={() => this.handleTabChange(\"registrations\")}>\r\n                                <i className=\"fas fa-clipboard-list me-2\"></i>\r\n                                Danh sách đăng ký\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button className={`nav-link ${activeTab === \"statistics\" ? \"active\" : \"\"}`} onClick={() => this.handleTabChange(\"statistics\")}>\r\n                                <i className=\"fas fa-chart-bar me-2\"></i>\r\n                                Thống kê sự kiện\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {/* Dashboard Cards - hiển thị ở cả 2 tab */}\r\n                <Row className=\"mb-4\">\r\n                    <Col md={3} sm={6} className=\"mb-3 mb-sm-0\">\r\n                        <Card className=\"text-center h-100 shadow-sm\">\r\n                            <Card.Body>\r\n                                <h1 className=\"mb-0\">{totalRegistrations}</h1>\r\n                                <Card.Text>Tổng số đăng ký</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col md={3} sm={6}>\r\n                        <Card className=\"text-center h-100 shadow-sm\">\r\n                            <Card.Body>\r\n                                <h1 className=\"mb-0 text-info\">{attendedRegistrations}</h1>\r\n                                <Card.Text>Đã điểm danh</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    {/* đã thanh toán */}\r\n                    <Col md={3} sm={6} className=\"mb-3 mb-sm-0\">\r\n                        <Card className=\"text-center h-100 shadow-sm\">\r\n                            <Card.Body>\r\n                                <h1 className=\"mb-0 text-success\">{paidRegistrations}</h1>\r\n                                <Card.Text>Đã thanh toán</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* Tab Content */}\r\n                {activeTab === \"registrations\" ? (\r\n                    // Nội dung tab đăng ký (phần hiện tại của bạn)\r\n                    <>\r\n                        <Table className=\"shadow-sm mb-4\">\r\n                            <Card.Header className=\"bg-white\">\r\n                                <h5 className=\"mb-0 fw-bold\">Bộ lọc & Tìm kiếm</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row className=\"mb-3\">\r\n                                    <Col lg={3} md={6} className=\"mb-3 mb-md-0\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Text>\r\n                                                <FaSearch />\r\n                                            </InputGroup.Text>\r\n                                            <Form.Control placeholder=\"Tìm kiếm theo tên, email, SĐT, ghi chú...\" value={searchTerm} onChange={this.handleSearch} />\r\n                                        </InputGroup>\r\n                                    </Col>\r\n\r\n                                    <Col lg={8} md={6}>\r\n                                        <Row>\r\n                                            <Col md={3} className=\"mb-3 mb-md-0\">\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Text>\r\n                                                        <FaMoneyBillWave />\r\n                                                    </InputGroup.Text>\r\n                                                    <Form.Select name=\"paymentFilter\" value={paymentFilter} onChange={this.handleFilterChange}>\r\n                                                        <option value=\"all\">Tất cả thanh toán</option>\r\n                                                        <option value=\"PS1\">Đã thanh toán</option>\r\n                                                        <option value=\"PS2\">Chưa thanh toán</option>\r\n                                                    </Form.Select>\r\n                                                </InputGroup>\r\n                                            </Col>\r\n\r\n                                            <Col md={3}>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Text>\r\n                                                        <FaUserCheck />\r\n                                                    </InputGroup.Text>\r\n                                                    <Form.Select name=\"attendanceFilter\" value={attendanceFilter} onChange={this.handleFilterChange}>\r\n                                                        <option value=\"all\">Tất cả điểm danh</option>\r\n                                                        <option value=\"attended\">Đã điểm danh</option>\r\n                                                        <option value=\"not-attended\">Chưa điểm danh</option>\r\n                                                    </Form.Select>\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col className=\"d-flex justify-content-end\">\r\n                                        <Button variant=\"success\" onClick={this.exportToCSV}>\r\n                                            <FaFileExport className=\"me-2\" /> Xuất file CSV\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Table>\r\n\r\n                        <Table className=\"shadow-sm\">\r\n                            <Card.Body>\r\n                                {isLoading ? (\r\n                                    <div className=\"text-center my-5\">\r\n                                        <Spinner animation=\"border\" variant=\"primary\" />\r\n                                        <div className=\"mt-2\">Đang tải dữ liệu...</div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"table-responsive\">\r\n                                        <Table hover className=\"align-middle\">\r\n                                            <thead className=\"table-light\">\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th className=\"sortable\" onClick={() => this.handleSort(\"name\")}>\r\n                                                        Họ tên\r\n                                                        {sortField === \"name\" && <FaSort className=\"ms-1\" />}\r\n                                                    </th>\r\n                                                    <th className=\"sortable\" onClick={() => this.handleSort(\"email\")}>\r\n                                                        Email\r\n                                                        {sortField === \"email\" && <FaSort className=\"ms-1\" />}\r\n                                                    </th>\r\n                                                    <th>Số điện thoại</th>\r\n                                                    <th className=\"sortable\" onClick={() => this.handleSort(\"registeredAt\")}>\r\n                                                        Ngày đăng ký\r\n                                                        {sortField === \"registeredAt\" && <FaSort className=\"ms-1\" />}\r\n                                                    </th>\r\n                                                    {/* <th>Trạng thái</th> */}\r\n                                                    <th>Thanh toán</th>\r\n                                                    <th>Điểm danh</th>\r\n                                                    <th>Thao tác</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {filteredRegistrations && filteredRegistrations.length > 0 ? (\r\n                                                    filteredRegistrations.map((item, idx) => (\r\n                                                        <tr key={item.id}>\r\n                                                            <td>{idx + 1}</td>\r\n                                                            <td>{item.name}</td>\r\n                                                            <td>{item.email}</td>\r\n                                                            <td>{item.phoneNumber || \"-\"}</td>\r\n                                                            <td>{this.formatDate(item.registeredAt)}</td>\r\n\r\n                                                            <td>\r\n                                                                {item.statusCostCode === \"PS1\" ? (\r\n                                                                    <Badge bg=\"success\">{item.payMethod?.valueVi || \"Đã thanh toán\"}</Badge>\r\n                                                                ) : (\r\n                                                                    <Badge bg=\"secondary\">Chưa thanh toán</Badge>\r\n                                                                )}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <div className=\"form-check form-switch\">\r\n                                                                    <input\r\n                                                                        className=\"form-check-input\"\r\n                                                                        type=\"checkbox\"\r\n                                                                        id={`attendance-${item.id}`}\r\n                                                                        checked={item.attendanceStatus === 1}\r\n                                                                        onChange={(e) => this.handleAttendanceToggle(e, item)}\r\n                                                                    />\r\n                                                                    {item.attendanceStatus === 1 && (\r\n                                                                        <small className=\"d-block text-muted mt-1\">{moment(item.attendanceTime).format(\"DD/MM/YYYY HH:mm\")}</small>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <div className=\"d-flex\">\r\n                                                                    <Button\r\n                                                                        variant=\"outline-info\"\r\n                                                                        size=\"sm\"\r\n                                                                        className=\"me-1\"\r\n                                                                        onClick={() => this.handleViewDetail(item)}\r\n                                                                        title=\"Xem chi tiết\"\r\n                                                                    >\r\n                                                                        <FaEye />\r\n                                                                    </Button>\r\n\r\n                                                                    {item.status === \"pending\" && (\r\n                                                                        <>\r\n                                                                            <Button\r\n                                                                                variant=\"outline-success\"\r\n                                                                                size=\"sm\"\r\n                                                                                className=\"me-1\"\r\n                                                                                onClick={() => this.handleApprove(item.id)}\r\n                                                                                title=\"Duyệt đăng ký\"\r\n                                                                            >\r\n                                                                                <FaCheck />\r\n                                                                            </Button>\r\n                                                                            <Button\r\n                                                                                variant=\"outline-danger\"\r\n                                                                                size=\"sm\"\r\n                                                                                onClick={() => this.handleReject(item.id)}\r\n                                                                                title=\"Từ chối đăng ký\"\r\n                                                                            >\r\n                                                                                <FaTimes />\r\n                                                                            </Button>\r\n                                                                        </>\r\n                                                                    )}\r\n\r\n                                                                    {item.status === \"approved\" && (\r\n                                                                        <>\r\n                                                                            {item.attendanceStatus === 0 ? (\r\n                                                                                <Button\r\n                                                                                    variant=\"outline-primary\"\r\n                                                                                    size=\"sm\"\r\n                                                                                    className=\"me-1\"\r\n                                                                                    onClick={() => this.handleAttendance(item)}\r\n                                                                                    title=\"Điểm danh\"\r\n                                                                                >\r\n                                                                                    <FaCalendarCheck />\r\n                                                                                </Button>\r\n                                                                            ) : (\r\n                                                                                <Button\r\n                                                                                    variant=\"outline-secondary\"\r\n                                                                                    size=\"sm\"\r\n                                                                                    className=\"me-1\"\r\n                                                                                    onClick={() => this.cancelAttendance(item.id)}\r\n                                                                                    title=\"Hủy điểm danh\"\r\n                                                                                >\r\n                                                                                    <FaTimes />\r\n                                                                                </Button>\r\n                                                                            )}\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))\r\n                                                ) : (\r\n                                                    <tr>\r\n                                                        <td colSpan=\"9\" className=\"text-center py-3\">\r\n                                                            {searchTerm || statusFilter !== \"all\" || paymentFilter !== \"all\" || attendanceFilter !== \"all\"\r\n                                                                ? \"Không tìm thấy đăng ký nào phù hợp với bộ lọc\"\r\n                                                                : \"Chưa có ai đăng ký sự kiện này\"}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </div>\r\n                                )}\r\n                            </Card.Body>\r\n                        </Table>\r\n\r\n                        {/* Modal xem chi tiết đăng ký */}\r\n                        <Modal show={showDetailModal} onHide={this.closeDetailModal} centered size=\"lg\">\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Chi tiết đăng ký</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                {selectedRegistration &&\r\n                                    // kiểm tra thông tin toàn bộ sự kiện\r\n                                    (console.log(selectedRegistration),\r\n                                    (\r\n                                        <div>\r\n                                            <Tabs defaultActiveKey=\"user-info\" className=\"mb-4\">\r\n                                                <Tab eventKey=\"user-info\" title=\"Thông tin người đăng ký\">\r\n                                                    <Row className=\"mb-3\">\r\n                                                        <Col md={4} className=\"fw-bold\">\r\n                                                            Họ và tên:\r\n                                                        </Col>\r\n                                                        <Col md={8}>{selectedRegistration.name}</Col>\r\n                                                    </Row>\r\n                                                    <Row className=\"mb-3\">\r\n                                                        <Col md={4} className=\"fw-bold\">\r\n                                                            Email:\r\n                                                        </Col>\r\n                                                        <Col md={8}>{selectedRegistration.email}</Col>\r\n                                                    </Row>\r\n                                                    <Row className=\"mb-3\">\r\n                                                        <Col md={4} className=\"fw-bold\">\r\n                                                            Số điện thoại:\r\n                                                        </Col>\r\n                                                        <Col md={8}>{selectedRegistration.phoneNumber || \"Không có\"}</Col>\r\n                                                    </Row>\r\n                                                    {selectedRegistration.User?.address && (\r\n                                                        <Row className=\"mb-3\">\r\n                                                            <Col md={4} className=\"fw-bold\">\r\n                                                                Địa chỉ:\r\n                                                            </Col>\r\n                                                            <Col md={8}>{selectedRegistration.User.address}</Col>\r\n                                                        </Row>\r\n                                                    )}\r\n                                                    {selectedRegistration.User?.gender && (\r\n                                                        <Row className=\"mb-3\">\r\n                                                            <Col md={4} className=\"fw-bold\">\r\n                                                                Giới tính:\r\n                                                            </Col>\r\n                                                            <Col md={8}>\r\n                                                                {selectedRegistration.User.gender === \"M\" ? \"Nam\" : selectedRegistration.User.gender === \"F\" ? \"Nữ\" : \"Khác\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    )}\r\n                                                </Tab>\r\n                                                <Tab eventKey=\"registration-info\" title=\"Thông tin đăng ký\">\r\n                                                    <Row className=\"mb-3\">\r\n                                                        <Col md={4} className=\"fw-bold\">\r\n                                                            Thời gian đăng ký:\r\n                                                        </Col>\r\n                                                        <Col md={8}>{this.formatDate(selectedRegistration.registeredAt)}</Col>\r\n                                                    </Row>\r\n                                                    <Row className=\"mb-3\">\r\n                                                        <Col md={4} className=\"fw-bold\">\r\n                                                            Trạng thái thanh toán:\r\n                                                        </Col>\r\n                                                        <Col md={8}>\r\n                                                            {selectedRegistration.statusCostCode === \"PS1\" ? (\r\n                                                                <Badge bg=\"success\">Đã thanh toán</Badge>\r\n                                                            ) : (\r\n                                                                <Badge bg=\"secondary\">Chưa thanh toán</Badge>\r\n                                                            )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    <Row className=\"mb-3\">\r\n                                                        <Col md={4} className=\"fw-bold\">\r\n                                                            Phương thức thanh toán:\r\n                                                        </Col>\r\n                                                        <Col md={8}>{selectedRegistration.payMethod?.valueVi || \"-\"}</Col>\r\n                                                    </Row>\r\n                                                    <Row className=\"mb-3\">\r\n                                                        <Col md={4} className=\"fw-bold\">\r\n                                                            Trạng thái điểm danh:\r\n                                                        </Col>\r\n                                                        <Col md={8}>\r\n                                                            {selectedRegistration.attendanceStatus === 1 ? (\r\n                                                                <Badge bg=\"success\">Đã điểm danh</Badge>\r\n                                                            ) : (\r\n                                                                <Badge bg=\"secondary\">Chưa điểm danh</Badge>\r\n                                                            )}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    {selectedRegistration.attendanceStatus === 1 && (\r\n                                                        <Row className=\"mb-3\">\r\n                                                            <Col md={4} className=\"fw-bold\">\r\n                                                                Thời gian điểm danh:\r\n                                                            </Col>\r\n                                                            <Col md={8}>{this.formatDate(selectedRegistration.attendanceTime)}</Col>\r\n                                                        </Row>\r\n                                                    )}\r\n                                                    {selectedRegistration.notes && (\r\n                                                        <Row className=\"mb-3\">\r\n                                                            <Col md={4} className=\"fw-bold\">\r\n                                                                Ghi chú:\r\n                                                            </Col>\r\n                                                            <Col md={8}>{selectedRegistration.notes}</Col>\r\n                                                        </Row>\r\n                                                    )}\r\n                                                </Tab>\r\n                                            </Tabs>\r\n\r\n                                            <div className=\"d-flex justify-content-between mt-4\">\r\n                                                {selectedRegistration.status === \"pending\" && (\r\n                                                    <div className=\"d-flex gap-2\">\r\n                                                        <Button\r\n                                                            variant=\"success\"\r\n                                                            onClick={() => {\r\n                                                                this.handleApprove(selectedRegistration.id);\r\n                                                                this.closeDetailModal();\r\n                                                            }}\r\n                                                        >\r\n                                                            <FaCheck className=\"me-2\" /> Duyệt đăng ký\r\n                                                        </Button>\r\n                                                        <Button\r\n                                                            variant=\"danger\"\r\n                                                            onClick={() => {\r\n                                                                this.handleReject(selectedRegistration.id);\r\n                                                                this.closeDetailModal();\r\n                                                            }}\r\n                                                        >\r\n                                                            <FaTimes className=\"me-2\" /> Từ chối đăng ký\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {selectedRegistration.status === \"approved\" && selectedRegistration.attendanceStatus === 0 && (\r\n                                                    <Button\r\n                                                        variant=\"primary\"\r\n                                                        onClick={() => {\r\n                                                            this.closeDetailModal();\r\n                                                            this.handleAttendance(selectedRegistration);\r\n                                                        }}\r\n                                                    >\r\n                                                        <FaCalendarCheck className=\"me-2\" /> Điểm danh\r\n                                                    </Button>\r\n                                                )}\r\n\r\n                                                <Button variant=\"secondary\" onClick={this.closeDetailModal}>\r\n                                                    Đóng\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </>\r\n                ) : (\r\n                    // Nội dung tab thống kê (phần mới)\r\n                    this.renderStatisticsTab()\r\n                )}\r\n\r\n                {/* Các modal hiện tại */}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        systemMenuPath: state.app.systemMenuPath,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        userInforr: state.user.userInforr, // Lấy thông tin người dùng từ Redux store\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(EventRegistrationManage));\r\n","C:\\Users\\Trant\\Documents\\Lập Trình Web\\CTES WEB\\React - Copy\\src\\containers\\Contact\\Contact.js",["1124","1125","1126","1127","1128"],"import React, { useState } from 'react';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport Breadcrumb from '../../components/Breadcrumb';\r\nimport ScrollToTop from '../../components/ScrollTop';\r\nimport { Container, Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { FaMapMarkerAlt, FaPhoneAlt, FaEnvelope, FaClock, FaFacebookF, FaTwitter, FaInstagram, FaLinkedinIn } from 'react-icons/fa';\r\nimport './Contact.scss';\r\nimport Logo from '../../assets/images/logos/logo2.png';\r\n\r\n\r\nconst Contact = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        subject: '',\r\n        message: ''\r\n    });\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Form data submitted:\", formData);\r\n        setShowAlert(true);\r\n        setFormData({\r\n            name: '',\r\n            email: '',\r\n            subject: '',\r\n            message: ''\r\n        });\r\n        setTimeout(() => setShowAlert(false), 3000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"event-page\">\r\n            <Header\r\n                parentMenu='contact'\r\n                headerNormalLogo={Logo}\r\n                headerStickyLogo={Logo}\r\n            />\r\n\r\n            <div className=\"react-wrapper\">\r\n                <div className=\"react-wrapper-inner\">\r\n                    <Breadcrumb\r\n                        pageTitle=\"Liên Hệ Với Chúng Tôi\"\r\n                    />\r\n\r\n                    <div className=\"contact-page-area pt-120 pb-120\">\r\n                        <Container>\r\n                            {showAlert && (\r\n                                <Alert variant=\"success\" className=\"mb-4\" onClose={() => setShowAlert(false)} dismissible>\r\n                                    Cảm ơn bạn đã gửi thông tin! Chúng tôi sẽ liên hệ lại trong thời gian sớm nhất.\r\n                                </Alert>\r\n                            )}\r\n\r\n                            <Row>\r\n                                {/* Thông tin liên hệ */}\r\n                                <Col lg={4} md={12} className=\"mb-5 mb-lg-0\">\r\n                                    <div className=\"contact-info-box shadow p-4 rounded h-100\">\r\n                                        <h3 className=\"title-style mb-4\">Thông Tin Liên Hệ</h3>\r\n                                        <div className=\"address-box mb-4\">\r\n                                            <div className=\"d-flex align-items-center mb-3\">\r\n                                                <div className=\"icon-box me-3\">\r\n                                                    <FaMapMarkerAlt className=\"text-primary\" size={24} />\r\n                                                </div>\r\n                                                <div className=\"content\">\r\n                                                    <h5 className=\"mb-1\">Địa Chỉ</h5>\r\n                                                    <p className=\"mb-0\">Số 1 Đại Cồ Việt, Hai Bà Trưng, Hà Nội, Việt Nam</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex align-items-center mb-3\">\r\n                                                <div className=\"icon-box me-3\">\r\n                                                    <FaPhoneAlt className=\"text-primary\" size={24} />\r\n                                                </div>\r\n                                                <div className=\"content\">\r\n                                                    <h5 className=\"mb-1\">Số Điện Thoại</h5>\r\n                                                    <p className=\"mb-0\">+84 123 456 789</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex align-items-center mb-3\">\r\n                                                <div className=\"icon-box me-3\">\r\n                                                    <FaEnvelope className=\"text-primary\" size={24} />\r\n                                                </div>\r\n                                                <div className=\"content\">\r\n                                                    <h5 className=\"mb-1\">Email</h5>\r\n                                                    <p className=\"mb-0\">contact@ctes.edu.vn</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"d-flex align-items-center\">\r\n                                                <div className=\"icon-box me-3\">\r\n                                                    <FaClock className=\"text-primary\" size={24} />\r\n                                                </div>\r\n                                                <div className=\"content\">\r\n                                                    <h5 className=\"mb-1\">Giờ Hoạt Động</h5>\r\n                                                    <p className=\"mb-0\">Thứ Hai - Thứ Sáu: 8:00 - 17:30</p>\r\n                                                    <p className=\"mb-0\">Thứ Bảy: 9:00 - 12:00</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"social-links mt-4\">\r\n                                            <h5 className=\"mb-3\">Theo Dõi Chúng Tôi</h5>\r\n                                            <div className=\"d-flex gap-3\">\r\n                                                <a href=\"#\" className=\"social-icon bg-primary text-white d-flex align-items-center justify-content-center rounded-circle\" style={{ width: '40px', height: '40px' }}>\r\n                                                    <FaFacebookF />\r\n                                                </a>\r\n                                                <a href=\"#\" className=\"social-icon bg-info text-white d-flex align-items-center justify-content-center rounded-circle\" style={{ width: '40px', height: '40px' }}>\r\n                                                    <FaTwitter />\r\n                                                </a>\r\n                                                <a href=\"#\" className=\"social-icon bg-danger text-white d-flex align-items-center justify-content-center rounded-circle\" style={{ width: '40px', height: '40px' }}>\r\n                                                    <FaInstagram />\r\n                                                </a>\r\n                                                <a href=\"#\" className=\"social-icon bg-secondary text-white d-flex align-items-center justify-content-center rounded-circle\" style={{ width: '40px', height: '40px' }}>\r\n                                                    <FaLinkedinIn />\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                {/* Form liên hệ */}\r\n                                <Col lg={8} md={12}>\r\n                                    <div className=\"contact-form-box shadow p-4 rounded\">\r\n                                        <h3 className=\"title-style mb-4\">Gửi Thông Điệp Cho Chúng Tôi</h3>\r\n                                        <Form onSubmit={handleSubmit}>\r\n                                            <Row>\r\n                                                <Col md={6} className=\"mb-3\">\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Họ và tên <span className=\"text-danger\">*</span></Form.Label>\r\n                                                        <Form.Control \r\n                                                            type=\"text\" \r\n                                                            name=\"name\" \r\n                                                            value={formData.name} \r\n                                                            onChange={handleChange}\r\n                                                            required \r\n                                                            placeholder=\"Nhập họ và tên của bạn\" \r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col md={6} className=\"mb-3\">\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Email <span className=\"text-danger\">*</span></Form.Label>\r\n                                                        <Form.Control \r\n                                                            type=\"email\" \r\n                                                            name=\"email\" \r\n                                                            value={formData.email} \r\n                                                            onChange={handleChange}\r\n                                                            required \r\n                                                            placeholder=\"Nhập địa chỉ email của bạn\" \r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Form.Group className=\"mb-3\">\r\n                                                <Form.Label>Tiêu đề <span className=\"text-danger\">*</span></Form.Label>\r\n                                                <Form.Control \r\n                                                    type=\"text\" \r\n                                                    name=\"subject\" \r\n                                                    value={formData.subject} \r\n                                                    onChange={handleChange}\r\n                                                    required \r\n                                                    placeholder=\"Nhập tiêu đề\" \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group className=\"mb-4\">\r\n                                                <Form.Label>Nội dung <span className=\"text-danger\">*</span></Form.Label>\r\n                                                <Form.Control \r\n                                                    as=\"textarea\" \r\n                                                    name=\"message\" \r\n                                                    value={formData.message} \r\n                                                    onChange={handleChange}\r\n                                                    rows={5} \r\n                                                    required \r\n                                                    placeholder=\"Nhập nội dung tin nhắn của bạn\" \r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Button variant=\"primary\" type=\"submit\" className=\"btn-lg\">\r\n                                                Gửi Thông Điệp\r\n                                            </Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n\r\n                    {/* Bản đồ */}\r\n                    <div className=\"map-area\">\r\n                        <div className=\"google-map\">\r\n                            <iframe\r\n                                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3724.696199620255!2d105.84083267499552!3d21.006173280636823!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3135ac76ccab6dd7%3A0x55e92a5b07a97d03!2zxJDhuqFpIEjhu41jIELDoWNoIEtob2EgSMOgIE7hu5lp!5e0!3m2!1svi!2s!4v1684912252022!5m2!1svi!2s\"\r\n                                width=\"100%\"\r\n                                height=\"450\"\r\n                                style={{ border: 0 }}\r\n                                allowFullScreen=\"\"\r\n                                loading=\"lazy\"\r\n                                referrerPolicy=\"no-referrer-when-downgrade\"\r\n                            ></iframe>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* FAQ Section */}\r\n                    <div className=\"faq-section pt-100 pb-70\">\r\n                        <Container>\r\n                            <div className=\"text-center mb-5\">\r\n                                <h2 className=\"section-title\">Câu Hỏi Thường Gặp</h2>\r\n                                <p className=\"section-description\">Những thông tin hữu ích bạn có thể cần</p>\r\n                            </div>\r\n                            \r\n                            <Row>\r\n                                <Col lg={6} className=\"mb-4\">\r\n                                    <div className=\"faq-item shadow p-4 rounded h-100\">\r\n                                        <h5 className=\"mb-3\">Làm thế nào để tôi đăng ký tham gia sự kiện?</h5>\r\n                                        <p>\r\n                                            Để đăng ký tham gia sự kiện, bạn cần tạo tài khoản trên hệ thống CTES, \r\n                                            sau đó truy cập trang \"Sự kiện\" và chọn sự kiện mong muốn. Nhấn vào nút \r\n                                            \"Đăng ký\" và hoàn thành các thông tin cần thiết.\r\n                                        </p>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col lg={6} className=\"mb-4\">\r\n                                    <div className=\"faq-item shadow p-4 rounded h-100\">\r\n                                        <h5 className=\"mb-3\">Làm thế nào để tôi có thể trở thành tình nguyện viên?</h5>\r\n                                        <p>\r\n                                            Để trở thành tình nguyện viên, bạn cần đăng ký tài khoản, hoàn thiện hồ sơ \r\n                                            cá nhân và gửi đơn đăng ký tình nguyện viên. Chúng tôi sẽ xem xét và liên hệ \r\n                                            với bạn trong thời gian sớm nhất.\r\n                                        </p>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col lg={6} className=\"mb-4\">\r\n                                    <div className=\"faq-item shadow p-4 rounded h-100\">\r\n                                        <h5 className=\"mb-3\">Tôi có thể hủy đăng ký tham gia sự kiện không?</h5>\r\n                                        <p>\r\n                                            Có, bạn có thể hủy đăng ký tham gia sự kiện trước thời hạn đóng đăng ký. \r\n                                            Vui lòng truy cập vào trang \"Hồ sơ cá nhân\" > \"Sự kiện đã đăng ký\" và chọn \r\n                                            \"Hủy đăng ký\" cho sự kiện tương ứng.\r\n                                        </p>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col lg={6} className=\"mb-4\">\r\n                                    <div className=\"faq-item shadow p-4 rounded h-100\">\r\n                                        <h5 className=\"mb-3\">Làm thế nào để nhận thông báo về sự kiện mới?</h5>\r\n                                        <p>\r\n                                            Bạn có thể đăng ký nhận thông báo về sự kiện mới bằng cách bật tùy chọn \"Nhận \r\n                                            thông báo\" trong phần \"Cài đặt thông báo\" của tài khoản. Chúng tôi sẽ gửi email \r\n                                            thông báo khi có sự kiện mới.\r\n                                        </p>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n\r\n                    {/* scrolltop-start */}\r\n                    <ScrollToTop />\r\n                    {/* scrolltop-end */}\r\n                </div>\r\n            </div>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;",{"ruleId":"1129","replacedBy":"1130"},{"ruleId":"1131","replacedBy":"1132"},{"ruleId":"1133","severity":1,"message":"1134","line":18,"column":8,"nodeType":"1135","messageId":"1136","endLine":18,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1137","line":23,"column":10,"nodeType":"1135","messageId":"1136","endLine":23,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1138","line":23,"column":18,"nodeType":"1135","messageId":"1136","endLine":23,"endColumn":23},{"ruleId":"1139","severity":1,"message":"1140","line":29,"column":1,"nodeType":"1141","endLine":36,"endColumn":8},{"ruleId":"1133","severity":1,"message":"1142","line":18,"column":32,"nodeType":"1135","messageId":"1136","endLine":18,"endColumn":41},{"ruleId":"1133","severity":1,"message":"1143","line":52,"column":17,"nodeType":"1135","messageId":"1136","endLine":52,"endColumn":25},{"ruleId":"1133","severity":1,"message":"1144","line":52,"column":27,"nodeType":"1135","messageId":"1136","endLine":52,"endColumn":35},{"ruleId":"1133","severity":1,"message":"1145","line":54,"column":36,"nodeType":"1135","messageId":"1136","endLine":54,"endColumn":50},{"ruleId":"1133","severity":1,"message":"1146","line":10,"column":33,"nodeType":"1135","messageId":"1136","endLine":10,"endColumn":43},{"ruleId":"1129","replacedBy":"1147"},{"ruleId":"1131","replacedBy":"1148"},{"ruleId":"1133","severity":1,"message":"1149","line":9,"column":5,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1150","line":2,"column":13,"nodeType":"1135","messageId":"1136","endLine":2,"endColumn":24},{"ruleId":"1133","severity":1,"message":"1151","line":3,"column":8,"nodeType":"1135","messageId":"1136","endLine":3,"endColumn":14},{"ruleId":"1139","severity":1,"message":"1152","line":1,"column":1,"nodeType":"1141","endLine":13,"endColumn":3},{"ruleId":"1133","severity":1,"message":"1153","line":6,"column":10,"nodeType":"1135","messageId":"1136","endLine":6,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1154","line":7,"column":10,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1155","line":2,"column":17,"nodeType":"1135","messageId":"1136","endLine":2,"endColumn":23},{"ruleId":"1133","severity":1,"message":"1156","line":4,"column":8,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1157","line":9,"column":8,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1158","line":10,"column":8,"nodeType":"1135","messageId":"1136","endLine":10,"endColumn":28},{"ruleId":"1133","severity":1,"message":"1159","line":11,"column":8,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":18},{"ruleId":"1133","severity":1,"message":"1155","line":13,"column":8,"nodeType":"1135","messageId":"1136","endLine":13,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1160","line":14,"column":8,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":12},{"ruleId":"1133","severity":1,"message":"1161","line":5,"column":8,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":18},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1159","line":9,"column":8,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":18},{"ruleId":"1133","severity":1,"message":"1155","line":11,"column":8,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1135","messageId":"1136","endLine":12,"endColumn":12},{"ruleId":"1133","severity":1,"message":"1162","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1149","line":10,"column":10,"nodeType":"1135","messageId":"1136","endLine":10,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1163","line":13,"column":5,"nodeType":"1135","messageId":"1136","endLine":13,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1164","line":14,"column":5,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1165","line":191,"column":13,"nodeType":"1135","messageId":"1136","endLine":191,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1166","line":192,"column":13,"nodeType":"1135","messageId":"1136","endLine":192,"endColumn":17},{"ruleId":"1133","severity":1,"message":"1167","line":193,"column":13,"nodeType":"1135","messageId":"1136","endLine":193,"endColumn":21},{"ruleId":"1133","severity":1,"message":"1168","line":194,"column":13,"nodeType":"1135","messageId":"1136","endLine":194,"endColumn":19},{"ruleId":"1129","replacedBy":"1169"},{"ruleId":"1131","replacedBy":"1170"},{"ruleId":"1133","severity":1,"message":"1134","line":18,"column":8,"nodeType":"1135","messageId":"1136","endLine":18,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1171","line":21,"column":10,"nodeType":"1135","messageId":"1136","endLine":21,"endColumn":32},{"ruleId":"1133","severity":1,"message":"1137","line":24,"column":10,"nodeType":"1135","messageId":"1136","endLine":24,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1138","line":24,"column":18,"nodeType":"1135","messageId":"1136","endLine":24,"endColumn":23},{"ruleId":"1139","severity":1,"message":"1140","line":29,"column":1,"nodeType":"1141","endLine":36,"endColumn":8},{"ruleId":"1133","severity":1,"message":"1146","line":11,"column":33,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":43},{"ruleId":"1133","severity":1,"message":"1142","line":56,"column":32,"nodeType":"1135","messageId":"1136","endLine":56,"endColumn":41},{"ruleId":"1133","severity":1,"message":"1153","line":6,"column":10,"nodeType":"1135","messageId":"1136","endLine":6,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1154","line":7,"column":10,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1149","line":9,"column":5,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1162","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1149","line":10,"column":10,"nodeType":"1135","messageId":"1136","endLine":10,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1172","line":12,"column":5,"nodeType":"1135","messageId":"1136","endLine":12,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1163","line":13,"column":5,"nodeType":"1135","messageId":"1136","endLine":13,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1164","line":14,"column":5,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1173","line":17,"column":10,"nodeType":"1135","messageId":"1136","endLine":17,"endColumn":24},{"ruleId":"1133","severity":1,"message":"1165","line":388,"column":13,"nodeType":"1135","messageId":"1136","endLine":388,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1166","line":389,"column":13,"nodeType":"1135","messageId":"1136","endLine":389,"endColumn":17},{"ruleId":"1133","severity":1,"message":"1167","line":390,"column":13,"nodeType":"1135","messageId":"1136","endLine":390,"endColumn":21},{"ruleId":"1133","severity":1,"message":"1168","line":391,"column":13,"nodeType":"1135","messageId":"1136","endLine":391,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1159","line":9,"column":8,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":18},{"ruleId":"1133","severity":1,"message":"1155","line":11,"column":8,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1135","messageId":"1136","endLine":12,"endColumn":12},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1153","line":5,"column":10,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":26},{"ruleId":"1129","replacedBy":"1174"},{"ruleId":"1131","replacedBy":"1175"},{"ruleId":"1133","severity":1,"message":"1176","line":5,"column":8,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":17},{"ruleId":"1133","severity":1,"message":"1177","line":7,"column":10,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1155","line":2,"column":17,"nodeType":"1135","messageId":"1136","endLine":2,"endColumn":23},{"ruleId":"1133","severity":1,"message":"1150","line":2,"column":13,"nodeType":"1135","messageId":"1136","endLine":2,"endColumn":24},{"ruleId":"1133","severity":1,"message":"1151","line":3,"column":8,"nodeType":"1135","messageId":"1136","endLine":3,"endColumn":14},{"ruleId":"1139","severity":1,"message":"1152","line":1,"column":1,"nodeType":"1141","endLine":13,"endColumn":3},{"ruleId":"1133","severity":1,"message":"1153","line":6,"column":10,"nodeType":"1135","messageId":"1136","endLine":6,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1156","line":4,"column":8,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":14},{"ruleId":"1129","replacedBy":"1178"},{"ruleId":"1131","replacedBy":"1179"},{"ruleId":"1133","severity":1,"message":"1180","line":3,"column":25,"nodeType":"1135","messageId":"1136","endLine":3,"endColumn":33},{"ruleId":"1133","severity":1,"message":"1181","line":14,"column":10,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1182","line":39,"column":45,"nodeType":"1135","messageId":"1136","endLine":39,"endColumn":53},{"ruleId":"1133","severity":1,"message":"1153","line":6,"column":10,"nodeType":"1135","messageId":"1136","endLine":6,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1154","line":7,"column":10,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1160","line":8,"column":45,"nodeType":"1135","messageId":"1136","endLine":8,"endColumn":49},{"ruleId":"1133","severity":1,"message":"1183","line":11,"column":10,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":21},{"ruleId":"1133","severity":1,"message":"1184","line":11,"column":23,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":32},{"ruleId":"1133","severity":1,"message":"1185","line":11,"column":34,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":42},{"ruleId":"1133","severity":1,"message":"1186","line":11,"column":44,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":52},{"ruleId":"1133","severity":1,"message":"1142","line":56,"column":32,"nodeType":"1135","messageId":"1136","endLine":56,"endColumn":41},{"ruleId":"1139","severity":1,"message":"1140","line":29,"column":1,"nodeType":"1141","endLine":36,"endColumn":8},{"ruleId":"1133","severity":1,"message":"1187","line":3,"column":8,"nodeType":"1135","messageId":"1136","endLine":3,"endColumn":18},{"ruleId":"1133","severity":1,"message":"1188","line":4,"column":8,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":18},{"ruleId":"1133","severity":1,"message":"1189","line":5,"column":8,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1190","line":6,"column":8,"nodeType":"1135","messageId":"1136","endLine":6,"endColumn":23},{"ruleId":"1133","severity":1,"message":"1191","line":7,"column":8,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1192","line":14,"column":8,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":13},{"ruleId":"1133","severity":1,"message":"1153","line":2,"column":10,"nodeType":"1135","messageId":"1136","endLine":2,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1154","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1193","line":6,"column":13,"nodeType":"1135","messageId":"1136","endLine":6,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1162","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1172","line":12,"column":5,"nodeType":"1135","messageId":"1136","endLine":12,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1163","line":13,"column":5,"nodeType":"1135","messageId":"1136","endLine":13,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1164","line":14,"column":5,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1176","line":5,"column":8,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":17},{"ruleId":"1133","severity":1,"message":"1177","line":7,"column":10,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1154","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1194","line":200,"column":116,"nodeType":"1135","messageId":"1136","endLine":200,"endColumn":124},{"ruleId":"1195","severity":1,"message":"1196","line":258,"column":53,"nodeType":"1197","endLine":258,"endColumn":87},{"ruleId":"1195","severity":1,"message":"1196","line":263,"column":53,"nodeType":"1197","endLine":263,"endColumn":86},{"ruleId":"1195","severity":1,"message":"1196","line":268,"column":53,"nodeType":"1197","endLine":268,"endColumn":87},{"ruleId":"1195","severity":1,"message":"1198","line":443,"column":69,"nodeType":"1197","endLine":450,"endColumn":70},{"ruleId":"1133","severity":1,"message":"1199","line":7,"column":11,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":21},{"ruleId":"1133","severity":1,"message":"1200","line":10,"column":12,"nodeType":"1135","messageId":"1136","endLine":10,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1201","line":11,"column":12,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1202","line":12,"column":12,"nodeType":"1135","messageId":"1136","endLine":12,"endColumn":17},{"ruleId":"1133","severity":1,"message":"1203","line":14,"column":12,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":16},{"ruleId":"1204","severity":1,"message":"1205","line":12,"column":13,"nodeType":"1197","endLine":12,"endColumn":68},{"ruleId":"1129","replacedBy":"1206"},{"ruleId":"1131","replacedBy":"1207"},{"ruleId":"1204","severity":1,"message":"1205","line":16,"column":29,"nodeType":"1197","endLine":16,"endColumn":100},{"ruleId":"1204","severity":1,"message":"1205","line":23,"column":41,"nodeType":"1197","endLine":23,"endColumn":77},{"ruleId":"1204","severity":1,"message":"1205","line":33,"column":41,"nodeType":"1197","endLine":33,"endColumn":77},{"ruleId":"1204","severity":1,"message":"1205","line":43,"column":41,"nodeType":"1197","endLine":43,"endColumn":77},{"ruleId":"1204","severity":1,"message":"1205","line":56,"column":29,"nodeType":"1197","endLine":56,"endColumn":65},{"ruleId":"1204","severity":1,"message":"1205","line":57,"column":29,"nodeType":"1197","endLine":57,"endColumn":86},{"ruleId":"1133","severity":1,"message":"1208","line":1,"column":17,"nodeType":"1135","messageId":"1136","endLine":1,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1209","line":8,"column":8,"nodeType":"1135","messageId":"1136","endLine":8,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1210","line":19,"column":11,"nodeType":"1135","messageId":"1136","endLine":19,"endColumn":25},{"ruleId":"1133","severity":1,"message":"1172","line":5,"column":5,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1163","line":6,"column":5,"nodeType":"1135","messageId":"1136","endLine":6,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1164","line":7,"column":5,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1149","line":8,"column":5,"nodeType":"1135","messageId":"1136","endLine":8,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1211","line":5,"column":10,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1153","line":8,"column":10,"nodeType":"1135","messageId":"1136","endLine":8,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1159","line":9,"column":8,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":18},{"ruleId":"1133","severity":1,"message":"1155","line":11,"column":8,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1160","line":12,"column":8,"nodeType":"1135","messageId":"1136","endLine":12,"endColumn":12},{"ruleId":"1133","severity":1,"message":"1153","line":5,"column":10,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1153","line":4,"column":10,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1149","line":9,"column":5,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1212","line":34,"column":15,"nodeType":"1135","messageId":"1136","endLine":34,"endColumn":19},{"ruleId":"1129","replacedBy":"1213"},{"ruleId":"1131","replacedBy":"1214"},{"ruleId":"1133","severity":1,"message":"1150","line":2,"column":13,"nodeType":"1135","messageId":"1136","endLine":2,"endColumn":24},{"ruleId":"1133","severity":1,"message":"1151","line":3,"column":8,"nodeType":"1135","messageId":"1136","endLine":3,"endColumn":14},{"ruleId":"1139","severity":1,"message":"1152","line":1,"column":1,"nodeType":"1141","endLine":13,"endColumn":3},{"ruleId":"1133","severity":1,"message":"1215","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":21},{"ruleId":"1133","severity":1,"message":"1154","line":10,"column":10,"nodeType":"1135","messageId":"1136","endLine":10,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1193","line":11,"column":13,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1153","line":14,"column":10,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":26},{"ruleId":"1129","replacedBy":"1216"},{"ruleId":"1131","replacedBy":"1217"},{"ruleId":"1133","severity":1,"message":"1218","line":2,"column":10,"nodeType":"1135","messageId":"1136","endLine":2,"endColumn":25},{"ruleId":"1133","severity":1,"message":"1218","line":8,"column":10,"nodeType":"1135","messageId":"1136","endLine":8,"endColumn":25},{"ruleId":"1133","severity":1,"message":"1149","line":9,"column":5,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":15},{"ruleId":"1129","replacedBy":"1219"},{"ruleId":"1131","replacedBy":"1220"},{"ruleId":"1133","severity":1,"message":"1221","line":9,"column":13,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":28},{"ruleId":"1204","severity":1,"message":"1205","line":13,"column":38,"nodeType":"1197","endLine":13,"endColumn":72},{"ruleId":"1204","severity":1,"message":"1205","line":17,"column":38,"nodeType":"1197","endLine":17,"endColumn":72},{"ruleId":"1195","severity":1,"message":"1196","line":18,"column":57,"nodeType":"1197","endLine":18,"endColumn":69},{"ruleId":"1195","severity":1,"message":"1196","line":18,"column":101,"nodeType":"1197","endLine":18,"endColumn":113},{"ruleId":"1204","severity":1,"message":"1205","line":21,"column":38,"nodeType":"1197","endLine":21,"endColumn":72},{"ruleId":"1133","severity":1,"message":"1222","line":155,"column":13,"nodeType":"1135","messageId":"1136","endLine":155,"endColumn":31},{"ruleId":"1133","severity":1,"message":"1223","line":7,"column":10,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":35},{"ruleId":"1133","severity":1,"message":"1215","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":21},{"ruleId":"1133","severity":1,"message":"1154","line":10,"column":10,"nodeType":"1135","messageId":"1136","endLine":10,"endColumn":19},{"ruleId":"1133","severity":1,"message":"1193","line":11,"column":13,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1181","line":7,"column":10,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":15},{"ruleId":"1133","severity":1,"message":"1182","line":11,"column":17,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":25},{"ruleId":"1133","severity":1,"message":"1224","line":11,"column":27,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":34},{"ruleId":"1133","severity":1,"message":"1182","line":20,"column":17,"nodeType":"1135","messageId":"1136","endLine":20,"endColumn":25},{"ruleId":"1133","severity":1,"message":"1146","line":20,"column":27,"nodeType":"1135","messageId":"1136","endLine":20,"endColumn":37},{"ruleId":"1133","severity":1,"message":"1224","line":20,"column":39,"nodeType":"1135","messageId":"1136","endLine":20,"endColumn":46},{"ruleId":"1133","severity":1,"message":"1225","line":8,"column":45,"nodeType":"1135","messageId":"1136","endLine":8,"endColumn":55},{"ruleId":"1133","severity":1,"message":"1226","line":7,"column":10,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":16},{"ruleId":"1133","severity":1,"message":"1227","line":7,"column":41,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":51},{"ruleId":"1133","severity":1,"message":"1184","line":7,"column":53,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":62},{"ruleId":"1133","severity":1,"message":"1228","line":7,"column":64,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":74},{"ruleId":"1133","severity":1,"message":"1229","line":7,"column":8,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":12},{"ruleId":"1133","severity":1,"message":"1229","line":7,"column":8,"nodeType":"1135","messageId":"1136","endLine":7,"endColumn":12},{"ruleId":"1133","severity":1,"message":"1230","line":9,"column":8,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":13},{"ruleId":"1195","severity":1,"message":"1196","line":342,"column":100,"nodeType":"1197","endLine":342,"endColumn":112},{"ruleId":"1133","severity":1,"message":"1230","line":8,"column":8,"nodeType":"1135","messageId":"1136","endLine":8,"endColumn":13},{"ruleId":"1133","severity":1,"message":"1231","line":4,"column":37,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":48},{"ruleId":"1133","severity":1,"message":"1232","line":8,"column":8,"nodeType":"1135","messageId":"1136","endLine":8,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1153","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1233","line":11,"column":16,"nodeType":"1135","messageId":"1136","endLine":11,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1234","line":5,"column":8,"nodeType":"1135","messageId":"1136","endLine":5,"endColumn":9},{"ruleId":"1133","severity":1,"message":"1235","line":261,"column":133,"nodeType":"1135","messageId":"1136","endLine":261,"endColumn":148},{"ruleId":"1129","replacedBy":"1236"},{"ruleId":"1131","replacedBy":"1237"},{"ruleId":"1133","severity":1,"message":"1193","line":4,"column":13,"nodeType":"1135","messageId":"1136","endLine":4,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1183","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":21},{"ruleId":"1133","severity":1,"message":"1184","line":9,"column":23,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":32},{"ruleId":"1133","severity":1,"message":"1185","line":9,"column":34,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":42},{"ruleId":"1133","severity":1,"message":"1186","line":9,"column":44,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":52},{"ruleId":"1133","severity":1,"message":"1238","line":10,"column":72,"nodeType":"1135","messageId":"1136","endLine":10,"endColumn":78},{"ruleId":"1133","severity":1,"message":"1239","line":3,"column":8,"nodeType":"1135","messageId":"1136","endLine":3,"endColumn":20},{"ruleId":"1133","severity":1,"message":"1240","line":9,"column":10,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":22},{"ruleId":"1133","severity":1,"message":"1241","line":9,"column":24,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":35},{"ruleId":"1133","severity":1,"message":"1231","line":9,"column":37,"nodeType":"1135","messageId":"1136","endLine":9,"endColumn":48},{"ruleId":"1133","severity":1,"message":"1153","line":13,"column":10,"nodeType":"1135","messageId":"1136","endLine":13,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1242","line":14,"column":8,"nodeType":"1135","messageId":"1136","endLine":14,"endColumn":12},{"ruleId":"1133","severity":1,"message":"1211","line":15,"column":10,"nodeType":"1135","messageId":"1136","endLine":15,"endColumn":14},{"ruleId":"1133","severity":1,"message":"1243","line":19,"column":20,"nodeType":"1135","messageId":"1136","endLine":19,"endColumn":28},{"ruleId":"1133","severity":1,"message":"1244","line":19,"column":55,"nodeType":"1135","messageId":"1136","endLine":19,"endColumn":61},{"ruleId":"1133","severity":1,"message":"1245","line":20,"column":113,"nodeType":"1135","messageId":"1136","endLine":20,"endColumn":122},{"ruleId":"1133","severity":1,"message":"1246","line":20,"column":124,"nodeType":"1135","messageId":"1136","endLine":20,"endColumn":128},{"ruleId":"1133","severity":1,"message":"1247","line":1241,"column":13,"nodeType":"1135","messageId":"1136","endLine":1241,"endColumn":32},{"ruleId":"1133","severity":1,"message":"1248","line":1243,"column":13,"nodeType":"1135","messageId":"1136","endLine":1243,"endColumn":27},{"ruleId":"1133","severity":1,"message":"1249","line":1244,"column":13,"nodeType":"1135","messageId":"1136","endLine":1244,"endColumn":27},{"ruleId":"1133","severity":1,"message":"1250","line":1246,"column":13,"nodeType":"1135","messageId":"1136","endLine":1246,"endColumn":34},{"ruleId":"1133","severity":1,"message":"1251","line":1247,"column":13,"nodeType":"1135","messageId":"1136","endLine":1247,"endColumn":33},{"ruleId":"1133","severity":1,"message":"1252","line":1248,"column":13,"nodeType":"1135","messageId":"1136","endLine":1248,"endColumn":34},{"ruleId":"1133","severity":1,"message":"1253","line":1250,"column":13,"nodeType":"1135","messageId":"1136","endLine":1250,"endColumn":32},{"ruleId":"1133","severity":1,"message":"1254","line":1253,"column":13,"nodeType":"1135","messageId":"1136","endLine":1253,"endColumn":26},{"ruleId":"1133","severity":1,"message":"1255","line":1255,"column":13,"nodeType":"1135","messageId":"1136","endLine":1255,"endColumn":23},{"ruleId":"1195","severity":1,"message":"1196","line":112,"column":49,"nodeType":"1197","endLine":112,"endColumn":213},{"ruleId":"1195","severity":1,"message":"1196","line":115,"column":49,"nodeType":"1197","endLine":115,"endColumn":210},{"ruleId":"1195","severity":1,"message":"1196","line":118,"column":49,"nodeType":"1197","endLine":118,"endColumn":212},{"ruleId":"1195","severity":1,"message":"1196","line":121,"column":49,"nodeType":"1197","endLine":121,"endColumn":215},{"ruleId":"1256","severity":1,"message":"1257","line":198,"column":29,"nodeType":"1197","endLine":206,"endColumn":30},"no-native-reassign",["1258"],"no-negated-in-lhs",["1259"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'height' is defined but never used.","'width' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'langguage' is assigned a value but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'adminLoginFail' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.",["1258"],["1259"],"'createUser' is defined but never used.","'queryString' is defined but never used.","'config' is defined but never used.","Assign object to a variable before exporting as module default","'FormattedMessage' is defined but never used.","'languages' is defined but never used.","'Button' is defined but never used.","'Slider' is defined but never used.","'Carousel' is defined but never used.","'ExampleCarouselImage' is defined but never used.","'medicalImg' is defined but never used.","'Card' is defined but never used.","'CardDoctor' is defined but never used.","'create' is defined but never used.","'deleteUser' is defined but never used.","'updateUser' is defined but never used.","'gender' is assigned a value but never used.","'role' is assigned a value but never used.","'position' is assigned a value but never used.","'avatar' is assigned a value but never used.",["1258"],["1259"],"'CustomToastCloseButton' is defined but never used.","'getAllUsers' is defined but never used.","'ToastContainer' is defined but never used.",["1258"],["1259"],"'imgDoctor' is defined but never used.","'ExitStatus' is defined but never used.",["1258"],["1259"],"'Redirect' is defined but never used.","'toast' is defined but never used.","'userInfo' is assigned a value but never used.","'faFacebookF' is defined but never used.","'faTwitter' is defined but never used.","'faGoogle' is defined but never used.","'faGithub' is defined but never used.","'HomeHeader' is defined but never used.","'Speciality' is defined but never used.","'Medical' is defined but never used.","'FeaturedDoctors' is defined but never used.","'Manual' is defined but never used.","'Blogs' is defined but never used.","'actions' is defined but never used.","'language' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'pathLength' is assigned a value but never used.","'page' is assigned a value but never used.","'home' is assigned a value but never used.","'event' is assigned a value but never used.","'blog' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["1258"],["1259"],"'Component' is defined but never used.","'events' is defined but never used.","'renderMarkdown' is assigned a value but never used.","'Link' is defined but never used.","'data' is assigned a value but never used.",["1258"],["1259"],"'getAllCodes' is defined but never used.",["1258"],["1259"],"'getRecentEvents' is defined but never used.",["1258"],["1259"],"'contactBoxClass' is assigned a value but never used.","'registrationStatus' is assigned a value but never used.","'getEventRegistrationsById' is defined but never used.","'history' is assigned a value but never used.","'courseName' is assigned a value but never used.","'faPlus' is defined but never used.","'faFacebook' is defined but never used.","'faLinkedin' is defined but never used.","'Logo' is defined but never used.","'axios' is defined but never used.","'updateEvent' is defined but never used.","'moment' is defined but never used.","'withRouter' is defined but never used.","'_' is defined but never used.","'contentMarkdown' is assigned a value but never used.",["1258"],["1259"],"'faLeaf' is defined but never used.","'ReactToPrint' is defined but never used.","'getAllEvents' is defined but never used.","'deleteEvent' is defined but never used.","'Swal' is defined but never used.","'FaFilter' is defined but never used.","'FaEdit' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'showAttendanceModal' is assigned a value but never used.","'attendanceDate' is assigned a value but never used.","'attendanceNote' is assigned a value but never used.","'approvedRegistrations' is assigned a value but never used.","'pendingRegistrations' is assigned a value but never used.","'rejectedRegistrations' is assigned a value but never used.","'unpaidRegistrations' is assigned a value but never used.","'sortDirection' is assigned a value but never used.","'eventStats' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]