{"ast":null,"code":"import React, { Component } from \"react\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Breadcrumb from \"../../components/Breadcrumb\";\nimport UserProfileMain from \"./UserProfileMain\";\nimport ScrollToTop from \"../../components/ScrollTop\";\nimport { getUserById } from \"../../services/userServices\";\nimport { toast } from \"react-toastify\";\nimport Logo from \"../../assets/images/logos/logo2.png\";\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.fetchUserData = async () => {\n      try {\n        const {\n          userId\n        } = this.state;\n        console.log(\"Fetching data for user ID:\", userId);\n        if (!userId) {\n          this.setState({\n            error: \"ID người dùng không hợp lệ\",\n            loading: false\n          });\n          return;\n        }\n\n        // Gọi API lấy thông tin user\n        const response = await getUserById(userId);\n        console.log(\"API response:\", response);\n        if (response && response.data && response.data.errCode === 0) {\n          this.setState({\n            userInfo: response.data.data,\n            loading: false\n          });\n        } else {\n          this.setState({\n            error: \"Không thể tải thông tin người dùng\",\n            loading: false\n          });\n          toast.error(\"Không tìm thấy thông tin người dùng\");\n        }\n      } catch (error) {\n        console.error(\"Lỗi khi lấy thông tin người dùng:\", error);\n        this.setState({\n          error: \"Lỗi kết nối đến server\",\n          loading: false\n        });\n        toast.error(\"Có lỗi xảy ra khi tải thông tin\");\n      }\n    };\n    this.state = {\n      userInfo: null,\n      userId: null,\n      loading: true,\n      error: null\n    };\n  }\n  componentDidMount() {\n    // Lấy userId từ URL params\n    const {\n      match\n    } = this.props;\n    console.log(\"Match object:\", match);\n    if (match && match.params && match.params.id) {\n      const userId = match.params.id;\n      console.log(\"User ID from params:\", userId);\n\n      // Lưu userId vào state và sau đó gọi fetchUserData\n      this.setState({\n        userId\n      }, () => {\n        this.fetchUserData();\n      });\n    } else {\n      console.error(\"Không tìm thấy ID trong URL params\");\n      this.setState({\n        error: \"ID người dùng không hợp lệ\",\n        loading: false\n      });\n    }\n  }\n\n  // Lấy thông tin user từ API\n}\nexport default UserProfile;","map":{"version":3,"names":["React","Component","Header","Footer","Breadcrumb","UserProfileMain","ScrollToTop","getUserById","toast","Logo","UserProfile","constructor","props","fetchUserData","userId","state","console","log","setState","error","loading","response","data","errCode","userInfo","componentDidMount","match","params","id"],"sources":["C:/Users/Trant/Documents/Lập Trình Web/CTES WEB/React - Copy/src/containers/UserProfile/UserProfile.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Breadcrumb from \"../../components/Breadcrumb\";\r\nimport UserProfileMain from \"./UserProfileMain\";\r\nimport ScrollToTop from \"../../components/ScrollTop\";\r\nimport { getUserById } from \"../../services/userServices\";\r\nimport { toast } from \"react-toastify\";\r\nimport Logo from \"../../assets/images/logos/logo2.png\";\r\n\r\nclass UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInfo: null,\r\n            userId: null,\r\n            loading: true,\r\n            error: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Lấy userId từ URL params\r\n        const { match } = this.props;\r\n        console.log(\"Match object:\", match);\r\n\r\n        if (match && match.params && match.params.id) {\r\n            const userId = match.params.id;\r\n            console.log(\"User ID from params:\", userId);\r\n\r\n            // Lưu userId vào state và sau đó gọi fetchUserData\r\n            this.setState({ userId }, () => {\r\n                this.fetchUserData();\r\n            });\r\n        } else {\r\n            console.error(\"Không tìm thấy ID trong URL params\");\r\n            this.setState({\r\n                error: \"ID người dùng không hợp lệ\",\r\n                loading: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    // Lấy thông tin user từ API\r\n    fetchUserData = async () => {\r\n        try {\r\n            const { userId } = this.state;\r\n            console.log(\"Fetching data for user ID:\", userId);\r\n\r\n            if (!userId) {\r\n                this.setState({\r\n                    error: \"ID người dùng không hợp lệ\",\r\n                    loading: false,\r\n                });\r\n                return;\r\n            }\r\n\r\n            // Gọi API lấy thông tin user\r\n            const response = await getUserById(userId);\r\n            console.log(\"API response:\", response);\r\n\r\n            if (response && response.data && response.data.errCode === 0) {\r\n                this.setState({\r\n                    userInfo: response.data.data,\r\n                    loading: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    error: \"Không thể tải thông tin người dùng\",\r\n                    loading: false,\r\n                });\r\n                toast.error(\"Không tìm thấy thông tin người dùng\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Lỗi khi lấy thông tin người dùng:\", error);\r\n            this.setState({\r\n                error: \"Lỗi kết nối đến server\",\r\n                loading: false,\r\n            });\r\n            toast.error(\"Có lỗi xảy ra khi tải thông tin\");\r\n        }\r\n    };\r\n}\r\n\r\nexport default UserProfile;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,4BAA4B;AACpD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,IAAI,MAAM,qCAAqC;AAEtD,MAAMC,WAAW,SAAST,SAAS,CAAC;EAChCU,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAgCjBC,aAAa,GAAG,YAAY;MACxB,IAAI;QACA,MAAM;UAAEC;QAAO,CAAC,GAAG,IAAI,CAACC,KAAK;QAC7BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,MAAM,CAAC;QAEjD,IAAI,CAACA,MAAM,EAAE;UACT,IAAI,CAACI,QAAQ,CAAC;YACVC,KAAK,EAAE,4BAA4B;YACnCC,OAAO,EAAE;UACb,CAAC,CAAC;UACF;QACJ;;QAEA;QACA,MAAMC,QAAQ,GAAG,MAAMd,WAAW,CAACO,MAAM,CAAC;QAC1CE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEI,QAAQ,CAAC;QAEtC,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACC,OAAO,KAAK,CAAC,EAAE;UAC1D,IAAI,CAACL,QAAQ,CAAC;YACVM,QAAQ,EAAEH,QAAQ,CAACC,IAAI,CAACA,IAAI;YAC5BF,OAAO,EAAE;UACb,CAAC,CAAC;QACN,CAAC,MAAM;UACH,IAAI,CAACF,QAAQ,CAAC;YACVC,KAAK,EAAE,oCAAoC;YAC3CC,OAAO,EAAE;UACb,CAAC,CAAC;UACFZ,KAAK,CAACW,KAAK,CAAC,qCAAqC,CAAC;QACtD;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzD,IAAI,CAACD,QAAQ,CAAC;UACVC,KAAK,EAAE,wBAAwB;UAC/BC,OAAO,EAAE;QACb,CAAC,CAAC;QACFZ,KAAK,CAACW,KAAK,CAAC,iCAAiC,CAAC;MAClD;IACJ,CAAC;IApEG,IAAI,CAACJ,KAAK,GAAG;MACTS,QAAQ,EAAE,IAAI;MACdV,MAAM,EAAE,IAAI;MACZM,OAAO,EAAE,IAAI;MACbD,KAAK,EAAE;IACX,CAAC;EACL;EAEAM,iBAAiBA,CAAA,EAAG;IAChB;IACA,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACd,KAAK;IAC5BI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAES,KAAK,CAAC;IAEnC,IAAIA,KAAK,IAAIA,KAAK,CAACC,MAAM,IAAID,KAAK,CAACC,MAAM,CAACC,EAAE,EAAE;MAC1C,MAAMd,MAAM,GAAGY,KAAK,CAACC,MAAM,CAACC,EAAE;MAC9BZ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,MAAM,CAAC;;MAE3C;MACA,IAAI,CAACI,QAAQ,CAAC;QAAEJ;MAAO,CAAC,EAAE,MAAM;QAC5B,IAAI,CAACD,aAAa,CAAC,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,MAAM;MACHG,OAAO,CAACG,KAAK,CAAC,oCAAoC,CAAC;MACnD,IAAI,CAACD,QAAQ,CAAC;QACVC,KAAK,EAAE,4BAA4B;QACnCC,OAAO,EAAE;MACb,CAAC,CAAC;IACN;EACJ;;EAEA;AAuCJ;AAEA,eAAeV,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}