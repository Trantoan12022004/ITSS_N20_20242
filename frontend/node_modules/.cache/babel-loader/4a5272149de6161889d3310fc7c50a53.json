{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\5.font-end-react-fullstack\\\\React\\\\src\\\\containers\\\\System\\\\UserManage.js\";\nimport React, { Component } from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport \"./UserManage.scss\";\nimport { getAllUsers, deleteUser, updateUser, createUser } from \"../../services/userServices\";\nimport ModalUser from \"./ModalUser\"; // Import ModalUser\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserManage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAllUsers = async () => {\n      let response = await getAllUsers(\"ALL\");\n\n      if (response && response.data && response.data.errCode === 0) {\n        this.setState({\n          arrUsers: response.data.users\n        });\n      }\n    };\n\n    this.handleEditUser = user => {\n      this.setState({\n        userIdToEdit: user.id,\n        userEditData: {\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          address: user.address\n        },\n        showModal: true // Hiển thị modal\n\n      });\n    };\n\n    this.handleChangeUserEditData = event => {\n      let inputName = event.target.name;\n      let inputValue = event.target.value;\n      let updatedUserEditData = { ...this.state.userEditData\n      };\n      updatedUserEditData[inputName] = inputValue;\n      this.setState({\n        userEditData: updatedUserEditData\n      });\n    };\n\n    this.validateUserData = () => {\n      let {\n        firstName,\n        lastName,\n        email,\n        address\n      } = this.state.userEditData;\n\n      if (!firstName || !lastName || !email || !address) {\n        alert(\"Vui lòng nhập đầy đủ thông tin.\");\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSaveUserEdit = async () => {\n      if (!this.validateUserData()) {\n        return; // Nếu dữ liệu không hợp lệ, thoát khỏi hàm này\n      }\n\n      let {\n        userIdToEdit,\n        userEditData\n      } = this.state;\n      let data = {\n        id: userIdToEdit,\n        firstName: userEditData.firstName,\n        lastName: userEditData.lastName,\n        email: userEditData.email,\n        address: userEditData.address\n      };\n      let response = await updateUser(data);\n\n      if (response && response.data.errCode === 0) {\n        await this.fetchAllUsers();\n        this.setState({\n          userIdToEdit: null,\n          userEditData: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            address: \"\"\n          },\n          showModal: false // Ẩn modal sau khi lưu\n\n        });\n      } else {\n        alert(response.data.errMessage);\n      }\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.handleShowModal = () => {\n      this.setState({\n        showModal: true,\n        userIdToEdit: null,\n        // Đặt lại ID người dùng để xác định là thêm mới\n        userEditData: {\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          address: \"\"\n        }\n      });\n    };\n\n    this.handleDeleteUser = async userId => {\n      let response = await deleteUser(userId);\n\n      if (response && response.data.errCode === 0) {\n        await this.fetchAllUsers();\n      } else {\n        alert(response.data.errMessage);\n      }\n    };\n\n    this.handleChangeUserNewData = event => {\n      let inputName = event.target.name;\n      let inputValue = event.target.value;\n      let updatedNewUserData = { ...this.state.userEditData\n      };\n      updatedNewUserData[inputName] = inputValue;\n      this.setState({\n        userEditData: updatedNewUserData\n      });\n    };\n\n    this.handleSaveNewUser = async () => {\n      let data = this.state.userEditData;\n      let response = await createUser(data);\n\n      if (response && response.data.errCode === 0) {\n        await this.fetchAllUsers();\n        this.setState({\n          showModal: false,\n          userEditData: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            address: \"\"\n          }\n        });\n      } else {\n        alert(response.data.errMessage);\n      }\n    };\n\n    this.state = {\n      arrUsers: [],\n      userIdToEdit: null,\n      userEditData: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        address: \"\"\n      },\n      showModal: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchAllUsers();\n  } // Lấy toàn bộ danh sách người dùng từ API\n\n\n  render() {\n    let {\n      arrUsers,\n      userEditData,\n      showModal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title text-center\",\n        children: \"Manage user with anhtonton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mb-2\",\n        onClick: this.handleShowModal,\n        children: \"+ Add New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-table mt-4 mx-3\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-hover table-bordered\",\n          id: \"customers\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark custom-header\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"25%\"\n                },\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"20%\"\n                },\n                children: \"Firstname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"20%\"\n                },\n                children: \"Lastname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"25%\"\n                },\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"10%\"\n                },\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: arrUsers && arrUsers.length > 0 && arrUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  onClick: () => this.handleEditUser(user),\n                  children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  onClick: () => this.handleDeleteUser(user.id),\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalUser, {\n        show: showModal,\n        handleClose: this.handleCloseModal,\n        userEditData: userEditData,\n        handleChangeUserEditData: this.handleChangeUserEditData,\n        handleSaveUserEdit: this.handleSaveUserEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React/src/containers/System/UserManage.js"],"names":["React","Component","FaEdit","FaTrash","connect","getAllUsers","deleteUser","updateUser","createUser","ModalUser","UserManage","constructor","props","fetchAllUsers","response","data","errCode","setState","arrUsers","users","handleEditUser","user","userIdToEdit","id","userEditData","firstName","lastName","email","address","showModal","handleChangeUserEditData","event","inputName","target","name","inputValue","value","updatedUserEditData","state","validateUserData","alert","handleSaveUserEdit","errMessage","handleCloseModal","handleShowModal","handleDeleteUser","userId","handleChangeUserNewData","updatedNewUserData","handleSaveNewUser","componentDidMount","render","width","length","map","index","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./UserManage.scss\";\r\nimport { getAllUsers, deleteUser, updateUser, createUser } from \"../../services/userServices\";\r\nimport ModalUser from \"./ModalUser\"; // Import ModalUser\r\n\r\nclass UserManage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            userIdToEdit: null,\r\n            userEditData: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                address: \"\",\r\n            },\r\n            showModal: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchAllUsers();\r\n    }\r\n\r\n    // Lấy toàn bộ danh sách người dùng từ API\r\n    fetchAllUsers = async () => {\r\n        let response = await getAllUsers(\"ALL\");\r\n        if (response && response.data && response.data.errCode === 0) {\r\n            this.setState({ arrUsers: response.data.users });\r\n        }\r\n    };\r\n\r\n    // Hiển thị modal chỉnh sửa người dùng\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            userIdToEdit: user.id,\r\n            userEditData: {\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                email: user.email,\r\n                address: user.address,\r\n            },\r\n            showModal: true, // Hiển thị modal\r\n        });\r\n    };\r\n\r\n    // Thay đổi dữ liệu người dùng trong form\r\n    handleChangeUserEditData = (event) => {\r\n        let inputName = event.target.name;\r\n        let inputValue = event.target.value;\r\n        let updatedUserEditData = { ...this.state.userEditData };\r\n        updatedUserEditData[inputName] = inputValue;\r\n        this.setState({ userEditData: updatedUserEditData });\r\n    };\r\n\r\n    // Kiểm tra tính hợp lệ của dữ liệu người dùng\r\n    validateUserData = () => {\r\n        let { firstName, lastName, email, address } = this.state.userEditData;\r\n        if (!firstName || !lastName || !email || !address) {\r\n            alert(\"Vui lòng nhập đầy đủ thông tin.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    // Lưu thay đổi thông tin người dùng\r\n    handleSaveUserEdit = async () => {\r\n        if (!this.validateUserData()) {\r\n            return; // Nếu dữ liệu không hợp lệ, thoát khỏi hàm này\r\n        }\r\n        let { userIdToEdit, userEditData } = this.state;\r\n        let data = {\r\n            id: userIdToEdit,\r\n            firstName: userEditData.firstName,\r\n            lastName: userEditData.lastName,\r\n            email: userEditData.email,\r\n            address: userEditData.address,\r\n        };\r\n        let response = await updateUser(data);\r\n        if (response && response.data.errCode === 0) {\r\n            await this.fetchAllUsers();\r\n            this.setState({\r\n                userIdToEdit: null,\r\n                userEditData: {\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    email: \"\",\r\n                    address: \"\",\r\n                },\r\n                showModal: false, // Ẩn modal sau khi lưu\r\n            });\r\n        } else {\r\n            alert(response.data.errMessage);\r\n        }\r\n    };\r\n\r\n    // Đóng modal\r\n    handleCloseModal = () => {\r\n        this.setState({ showModal: false });\r\n    };\r\n\r\n    // Hiển thị modal thêm người dùng mới\r\n    handleShowModal = () => {\r\n        this.setState({\r\n            showModal: true,\r\n            userIdToEdit: null, // Đặt lại ID người dùng để xác định là thêm mới\r\n            userEditData: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                address: \"\",\r\n            }\r\n        });\r\n    };\r\n\r\n    // Xóa người dùng\r\n    handleDeleteUser = async (userId) => {\r\n        let response = await deleteUser(userId);\r\n        if (response && response.data.errCode === 0) {\r\n            await this.fetchAllUsers();\r\n        } else {\r\n            alert(response.data.errMessage);\r\n        }\r\n    };\r\n\r\n    // Thay đổi dữ liệu người dùng mới trong form\r\n    handleChangeUserNewData = (event) => {\r\n        let inputName = event.target.name;\r\n        let inputValue = event.target.value;\r\n        let updatedNewUserData = { ...this.state.userEditData };\r\n        updatedNewUserData[inputName] = inputValue;\r\n        this.setState({ userEditData: updatedNewUserData });\r\n    };\r\n\r\n    // Lưu người dùng mới\r\n    handleSaveNewUser = async () => {\r\n        let data = this.state.userEditData;\r\n        let response = await createUser(data);\r\n        if (response && response.data.errCode === 0) {\r\n            await this.fetchAllUsers();\r\n            this.setState({\r\n                showModal: false,\r\n                userEditData: {\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    email: \"\",\r\n                    address: \"\",\r\n                },\r\n            });\r\n        } else {\r\n            alert(response.data.errMessage);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { arrUsers, userEditData, showModal } = this.state;\r\n        return (\r\n            <div className=\"user-center\">\r\n                <div className=\"title text-center\">Manage user with anhtonton</div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mb-2\"\r\n                    onClick={this.handleShowModal}\r\n                >\r\n                    + Add New User\r\n                </button>\r\n                <div className=\"user-table mt-4 mx-3\">\r\n                    <table className=\"table table-striped table-hover table-bordered\" id=\"customers\">\r\n                        <thead className=\"thead-dark custom-header\">\r\n                            <tr>\r\n                                <th style={{ width: \"25%\" }}>Email</th>\r\n                                <th style={{ width: \"20%\" }}>Firstname</th>\r\n                                <th style={{ width: \"20%\" }}>Lastname</th>\r\n                                <th style={{ width: \"25%\" }}>Address</th>\r\n                                <th style={{ width: \"10%\" }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {arrUsers &&\r\n                                arrUsers.length > 0 &&\r\n                                arrUsers.map((user, index) => (\r\n                                    <tr key={index}>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.firstName}</td>\r\n                                        <td>{user.lastName}</td>\r\n                                        <td>{user.address}</td>\r\n                                        <td>\r\n                                            <button className=\"btn\" onClick={() => this.handleEditUser(user)}>\r\n                                                <FaEdit />\r\n                                            </button>\r\n                                            <button className=\"btn\" onClick={() => this.handleDeleteUser(user.id)}>\r\n                                                <FaTrash />\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <ModalUser\r\n                    show={showModal}\r\n                    handleClose={this.handleCloseModal}\r\n                    userEditData={userEditData}\r\n                    handleChangeUserEditData={this.handleChangeUserEditData}\r\n                    handleSaveUserEdit={this.handleSaveUserEdit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n"]},"metadata":{},"sourceType":"module"}