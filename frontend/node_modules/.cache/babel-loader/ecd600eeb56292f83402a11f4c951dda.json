{"ast":null,"code":"// Horizontal rule\nimport { isSpace } from '../common/utils.mjs';\nexport default function hr(state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine];\n  const marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 of them\n\n\n  let cnt = 1;\n\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  const token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React - Copy/node_modules/markdown-it/lib/rules_block/hr.mjs"],"names":["isSpace","hr","state","startLine","endLine","silent","max","eMarks","sCount","blkIndent","pos","bMarks","tShift","marker","src","charCodeAt","cnt","ch","line","token","push","map","markup","Array","join","String","fromCharCode"],"mappings":"AAAA;AAEA,SAASA,OAAT,QAAwB,qBAAxB;AAEA,eAAe,SAASC,EAAT,CAAaC,KAAb,EAAoBC,SAApB,EAA+BC,OAA/B,EAAwCC,MAAxC,EAAgD;AAC7D,QAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAaJ,SAAb,CAAZ,CAD6D,CAE7D;;AACA,MAAID,KAAK,CAACM,MAAN,CAAaL,SAAb,IAA0BD,KAAK,CAACO,SAAhC,IAA6C,CAAjD,EAAoD;AAAE,WAAO,KAAP;AAAc;;AAEpE,MAAIC,GAAG,GAAGR,KAAK,CAACS,MAAN,CAAaR,SAAb,IAA0BD,KAAK,CAACU,MAAN,CAAaT,SAAb,CAApC;AACA,QAAMU,MAAM,GAAGX,KAAK,CAACY,GAAN,CAAUC,UAAV,CAAqBL,GAAG,EAAxB,CAAf,CAN6D,CAQ7D;;AACA,MAAIG,MAAM,KAAK;AAAI;AAAf,KACAA,MAAM,KAAK;AAAI;AADf,KAEAA,MAAM,KAAK;AAAI;AAFnB,IAE4B;AAC1B,aAAO,KAAP;AACD,KAb4D,CAe7D;;;AAEA,MAAIG,GAAG,GAAG,CAAV;;AACA,SAAON,GAAG,GAAGJ,GAAb,EAAkB;AAChB,UAAMW,EAAE,GAAGf,KAAK,CAACY,GAAN,CAAUC,UAAV,CAAqBL,GAAG,EAAxB,CAAX;;AACA,QAAIO,EAAE,KAAKJ,MAAP,IAAiB,CAACb,OAAO,CAACiB,EAAD,CAA7B,EAAmC;AAAE,aAAO,KAAP;AAAc;;AACnD,QAAIA,EAAE,KAAKJ,MAAX,EAAmB;AAAEG,MAAAA,GAAG;AAAI;AAC7B;;AAED,MAAIA,GAAG,GAAG,CAAV,EAAa;AAAE,WAAO,KAAP;AAAc;;AAE7B,MAAIX,MAAJ,EAAY;AAAE,WAAO,IAAP;AAAa;;AAE3BH,EAAAA,KAAK,CAACgB,IAAN,GAAaf,SAAS,GAAG,CAAzB;AAEA,QAAMgB,KAAK,GAAIjB,KAAK,CAACkB,IAAN,CAAW,IAAX,EAAiB,IAAjB,EAAuB,CAAvB,CAAf;AACAD,EAAAA,KAAK,CAACE,GAAN,GAAe,CAAClB,SAAD,EAAYD,KAAK,CAACgB,IAAlB,CAAf;AACAC,EAAAA,KAAK,CAACG,MAAN,GAAeC,KAAK,CAACP,GAAG,GAAG,CAAP,CAAL,CAAeQ,IAAf,CAAoBC,MAAM,CAACC,YAAP,CAAoBb,MAApB,CAApB,CAAf;AAEA,SAAO,IAAP;AACD","sourcesContent":["// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n"]},"metadata":{},"sourceType":"module"}