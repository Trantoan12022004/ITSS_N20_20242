{"ast":null,"code":"import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\nconst locationHelper = locationHelperBuilder({});\nexport const userIsAuthenticated = connectedRouterRedirect({\n  authenticatedSelector: state => state.user.isLoggedIn,\n  redirectPath: (state, ownProps) => {\n    var _state$user$userInfo;\n    const roleId = (_state$user$userInfo = state.user.userInfo) === null || _state$user$userInfo === void 0 ? void 0 : _state$user$userInfo.roleId;\n    if (roleId === 'R1') {\n      return '/system/user-display';\n    }\n    return '/homepa';\n  },\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false\n});\nexport const userIsNotAuthenticated = connectedRouterRedirect({\n  // Want to redirect the user when they are authenticated\n  authenticatedSelector: state => !state.user.isLoggedIn,\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\n  redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || \"/\",\n  allowRedirectBack: false\n});","map":{"version":3,"names":["locationHelperBuilder","connectedRouterRedirect","locationHelper","userIsAuthenticated","authenticatedSelector","state","user","isLoggedIn","redirectPath","ownProps","_state$user$userInfo","roleId","userInfo","wrapperDisplayName","allowRedirectBack","userIsNotAuthenticated","getRedirectQueryParam"],"sources":["C:/Users/Trant/Documents/Lập Trình Web/CTES WEB/React - Copy/src/hoc/authentication.js"],"sourcesContent":["import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const userIsAuthenticated = connectedRouterRedirect({\r\n    authenticatedSelector: (state) => state.user.isLoggedIn,\r\n    redirectPath: (state, ownProps) => {\r\n        const roleId = state.user.userInfo?.roleId;\r\n        if (roleId === 'R1') {\r\n            return '/system/user-display';\r\n        }\r\n        return '/homepa';\r\n    },\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    allowRedirectBack: false\r\n});\r\n\r\nexport const userIsNotAuthenticated = connectedRouterRedirect({\r\n    // Want to redirect the user when they are authenticated\r\n    authenticatedSelector: (state) => !state.user.isLoggedIn,\r\n    wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n    redirectPath: (state, ownProps) =>\r\n        locationHelper.getRedirectQueryParam(ownProps) || \"/\",\r\n    allowRedirectBack: false,\r\n});\r\n"],"mappings":"AAAA,OAAOA,qBAAqB,MAAM,4CAA4C;AAC9E,SAASC,uBAAuB,QAAQ,sCAAsC;AAE9E,MAAMC,cAAc,GAAGF,qBAAqB,CAAC,CAAC,CAAC,CAAC;AAEhD,OAAO,MAAMG,mBAAmB,GAAGF,uBAAuB,CAAC;EACvDG,qBAAqB,EAAGC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,UAAU;EACvDC,YAAY,EAAEA,CAACH,KAAK,EAAEI,QAAQ,KAAK;IAAA,IAAAC,oBAAA;IAC/B,MAAMC,MAAM,IAAAD,oBAAA,GAAGL,KAAK,CAACC,IAAI,CAACM,QAAQ,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBC,MAAM;IAC1C,IAAIA,MAAM,KAAK,IAAI,EAAE;MACjB,OAAO,sBAAsB;IACjC;IACA,OAAO,SAAS;EACpB,CAAC;EACDE,kBAAkB,EAAE,wBAAwB;EAC5CC,iBAAiB,EAAE;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMC,sBAAsB,GAAGd,uBAAuB,CAAC;EAC1D;EACAG,qBAAqB,EAAGC,KAAK,IAAK,CAACA,KAAK,CAACC,IAAI,CAACC,UAAU;EACxDM,kBAAkB,EAAE,wBAAwB;EAC5CL,YAAY,EAAEA,CAACH,KAAK,EAAEI,QAAQ,KAC1BP,cAAc,CAACc,qBAAqB,CAACP,QAAQ,CAAC,IAAI,GAAG;EACzDK,iBAAiB,EAAE;AACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}