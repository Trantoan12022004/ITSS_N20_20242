{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nimport { getAllCodeService } from \"../../services/userServices\";\nimport { createUser } from \"../../services/userServices\"; // chuc vu\n\nexport const fetchPositionStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"POSITION\"); // console.log(\"check res position\", res);\n\n      if (res && res.data.errCode === 0) {\n        dispatch(fetchPositionSuccess(res.data.data));\n      } else {\n        dispatch(fetchPositionFailed(res.data.errMessage));\n      }\n    } catch (error) {\n      dispatch(fetchPositionFailed());\n      console.log(\"fetchPositionStart error\", error);\n    }\n  };\n};\nexport const fetchPositionSuccess = positionData => ({\n  type: actionTypes.FETCH_POSITION_SUCCESS,\n  data: positionData\n});\nexport const fetchPositionFailed = () => ({\n  type: actionTypes.FETCH_POSITION_FAILED\n}); // role\n\nexport const fetchRoleStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_ROLE_START\n      });\n      let res = await getAllCodeService(\"ROLE\");\n\n      if (res && res.data.errCode === 0) {\n        dispatch(fetchRoleSuccess(res.data.data));\n      } else {\n        dispatch(fetchRoleFailed(res.data.errMessage));\n      }\n    } catch (error) {\n      dispatch(fetchRoleFailed());\n      console.log(\"fetchRoleStart error\", error);\n    }\n  };\n};\nexport const fetchRoleSuccess = roleData => ({\n  type: actionTypes.FETCH_ROLE_SUCCESS,\n  data: roleData\n});\nexport const fetchRoleFailed = () => ({\n  type: actionTypes.FETCH_ROLE_FAILED\n}); // gioi tinh\n\nexport const fetchGenderStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_GENDER_START\n      });\n      let res = await getAllCodeService(\"GENDER\"); // console.log(\"check res gender\", res);\n\n      if (res && res.data.errCode === 0) {\n        dispatch(fetchGenderSuccess(res.data.data));\n      } else {\n        dispatch(fetchGenderFailed(res.data.errMessage));\n      }\n    } catch (error) {\n      dispatch(fetchGenderFailed());\n      console.log(\"fetchGenderStart error\", error);\n    }\n  };\n};\nexport const fetchGenderSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderFailed = () => ({\n  type: actionTypes.FETCH_GENDER_FAILED\n}); // tạo user mới\n\nexport const createNewUser = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await createUser(data); // console.log(\"check res gender\", res);\n\n      if (res && res.data.errCode === 0) {\n        dispatch(createUserSuccess(res.data.errMessage));\n      } else {\n        dispatch(createUserFailed(res.data.errMessage));\n      }\n    } catch (error) {\n      dispatch(createUserFailed());\n      console.log(\"createUserFailed error\", error);\n    }\n  };\n};\nexport const createUserSuccess = message => {\n  console.log(\"Success:\", message); // Thực hiện kiểm tra ở đây\n\n  return {\n    type: actionTypes.CREATE_USER_SUCCESS,\n    message: message\n  };\n};\nexport const createUserFailed = error => {\n  console.log(\"error:\", error);\n  return {\n    type: actionTypes.CREATE_USER_FAILED,\n    error: error\n  };\n};","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React/src/store/actions/adminActions.js"],"names":["actionTypes","getAllCodeService","createUser","fetchPositionStart","dispatch","getState","res","data","errCode","fetchPositionSuccess","fetchPositionFailed","errMessage","error","console","log","positionData","type","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","fetchRoleStart","FETCH_ROLE_START","fetchRoleSuccess","fetchRoleFailed","roleData","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","fetchGenderStart","FETCH_GENDER_START","fetchGenderSuccess","fetchGenderFailed","genderData","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","createNewUser","createUserSuccess","createUserFailed","message","CREATE_USER_SUCCESS","CREATE_USER_FAILED"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,UAAT,QAA2B,6BAA3B,C,CAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACA,UAAIC,GAAG,GAAG,MAAML,iBAAiB,CAAC,UAAD,CAAjC,CADA,CAEA;;AACA,UAAIK,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,CAAhC,EAAmC;AAC/BJ,QAAAA,QAAQ,CAACK,oBAAoB,CAACH,GAAG,CAACC,IAAJ,CAASA,IAAV,CAArB,CAAR;AACH,OAFD,MAEO;AACHH,QAAAA,QAAQ,CAACM,mBAAmB,CAACJ,GAAG,CAACC,IAAJ,CAASI,UAAV,CAApB,CAAR;AACH;AACJ,KARD,CAQE,OAAOC,KAAP,EAAc;AACZR,MAAAA,QAAQ,CAACM,mBAAmB,EAApB,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAxC;AACH;AACJ,GAbD;AAcH,CAfM;AAiBP,OAAO,MAAMH,oBAAoB,GAAIM,YAAD,KAAmB;AACnDC,EAAAA,IAAI,EAAEhB,WAAW,CAACiB,sBADiC;AAEnDV,EAAAA,IAAI,EAAEQ;AAF6C,CAAnB,CAA7B;AAKP,OAAO,MAAML,mBAAmB,GAAG,OAAO;AACtCM,EAAAA,IAAI,EAAEhB,WAAW,CAACkB;AADoB,CAAP,CAA5B,C,CAIP;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO,OAAOf,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACAD,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEhB,WAAW,CAACoB;AAApB,OAAD,CAAR;AAEA,UAAId,GAAG,GAAG,MAAML,iBAAiB,CAAC,MAAD,CAAjC;;AACA,UAAIK,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,CAAhC,EAAmC;AAC/BJ,QAAAA,QAAQ,CAACiB,gBAAgB,CAACf,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAjB,CAAR;AACH,OAFD,MAEO;AACHH,QAAAA,QAAQ,CAACkB,eAAe,CAAChB,GAAG,CAACC,IAAJ,CAASI,UAAV,CAAhB,CAAR;AACH;AACJ,KATD,CASE,OAAOC,KAAP,EAAc;AACZR,MAAAA,QAAQ,CAACkB,eAAe,EAAhB,CAAR;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACH;AACJ,GAdD;AAeH,CAhBM;AAkBP,OAAO,MAAMS,gBAAgB,GAAIE,QAAD,KAAe;AAC3CP,EAAAA,IAAI,EAAEhB,WAAW,CAACwB,kBADyB;AAE3CjB,EAAAA,IAAI,EAAEgB;AAFqC,CAAf,CAAzB;AAKP,OAAO,MAAMD,eAAe,GAAG,OAAO;AAClCN,EAAAA,IAAI,EAAEhB,WAAW,CAACyB;AADgB,CAAP,CAAxB,C,CAGP;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAO,OAAOtB,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACAD,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAEhB,WAAW,CAAC2B;AAApB,OAAD,CAAR;AAEA,UAAIrB,GAAG,GAAG,MAAML,iBAAiB,CAAC,QAAD,CAAjC,CAHA,CAIA;;AACA,UAAIK,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,CAAhC,EAAmC;AAC/BJ,QAAAA,QAAQ,CAACwB,kBAAkB,CAACtB,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAnB,CAAR;AACH,OAFD,MAEO;AACHH,QAAAA,QAAQ,CAACyB,iBAAiB,CAACvB,GAAG,CAACC,IAAJ,CAASI,UAAV,CAAlB,CAAR;AACH;AACJ,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZR,MAAAA,QAAQ,CAACyB,iBAAiB,EAAlB,CAAR;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC;AACH;AACJ,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMgB,kBAAkB,GAAIE,UAAD,KAAiB;AAC/Cd,EAAAA,IAAI,EAAEhB,WAAW,CAAC+B,oBAD6B;AAE/CxB,EAAAA,IAAI,EAAEuB;AAFyC,CAAjB,CAA3B;AAKP,OAAO,MAAMD,iBAAiB,GAAG,OAAO;AACpCb,EAAAA,IAAI,EAAEhB,WAAW,CAACgC;AADkB,CAAP,CAA1B,C,CAIP;;AACA,OAAO,MAAMC,aAAa,GAAI1B,IAAD,IAAU;AACnC,SAAO,OAAOH,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACA,UAAIC,GAAG,GAAG,MAAMJ,UAAU,CAACK,IAAD,CAA1B,CADA,CAEA;;AACA,UAAID,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,CAAhC,EAAmC;AAC/BJ,QAAAA,QAAQ,CAAC8B,iBAAiB,CAAC5B,GAAG,CAACC,IAAJ,CAASI,UAAV,CAAlB,CAAR;AACH,OAFD,MAEO;AACHP,QAAAA,QAAQ,CAAC+B,gBAAgB,CAAC7B,GAAG,CAACC,IAAJ,CAASI,UAAV,CAAjB,CAAR;AACH;AACJ,KARD,CAQE,OAAOC,KAAP,EAAc;AACZR,MAAAA,QAAQ,CAAC+B,gBAAgB,EAAjB,CAAR;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC;AACH;AACJ,GAbD;AAcH,CAfM;AAiBP,OAAO,MAAMsB,iBAAiB,GAAIE,OAAD,IAAa;AAC1CvB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsB,OAAxB,EAD0C,CACR;;AAClC,SAAO;AACHpB,IAAAA,IAAI,EAAEhB,WAAW,CAACqC,mBADf;AAEHD,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CANM;AAQP,OAAO,MAAMD,gBAAgB,GAAIvB,KAAD,IAAW;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACA,SAAO;AACHI,IAAAA,IAAI,EAAEhB,WAAW,CAACsC,kBADf;AAEH1B,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CANM","sourcesContent":["import actionTypes from \"./actionTypes\";\r\nimport { getAllCodeService } from \"../../services/userServices\";\r\nimport { createUser } from \"../../services/userServices\";\r\n\r\n// chuc vu\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            // console.log(\"check res position\", res);\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data.data));\r\n            } else {\r\n                dispatch(fetchPositionFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log(\"fetchPositionStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: positionData,\r\n});\r\n\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAILED,\r\n});\r\n\r\n// role\r\nexport const fetchRoleStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_ROLE_START });\r\n\r\n            let res = await getAllCodeService(\"ROLE\");\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchRoleSuccess(res.data.data));\r\n            } else {\r\n                dispatch(fetchRoleFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchRoleFailed());\r\n            console.log(\"fetchRoleStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: roleData,\r\n});\r\n\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAILED,\r\n});\r\n// gioi tinh\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_GENDER_START });\r\n\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            // console.log(\"check res gender\", res);\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchGenderSuccess(res.data.data));\r\n            } else {\r\n                dispatch(fetchGenderFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchGenderFailed());\r\n            console.log(\"fetchGenderStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData,\r\n});\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED,\r\n});\r\n\r\n// tạo user mới\r\nexport const createNewUser = (data) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await createUser(data);\r\n            // console.log(\"check res gender\", res);\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(createUserSuccess(res.data.errMessage));\r\n            } else {\r\n                dispatch(createUserFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(createUserFailed());\r\n            console.log(\"createUserFailed error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const createUserSuccess = (message) => {\r\n    console.log(\"Success:\", message); // Thực hiện kiểm tra ở đây\r\n    return {\r\n        type: actionTypes.CREATE_USER_SUCCESS,\r\n        message: message,\r\n    };\r\n};\r\n\r\nexport const createUserFailed = (error) => {\r\n    console.log(\"error:\", error);\r\n    return {\r\n        type: actionTypes.CREATE_USER_FAILED,\r\n        error: error,\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}