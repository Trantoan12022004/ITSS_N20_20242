{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\5.font-end-react-fullstack\\\\React - Copy\\\\src\\\\containers\\\\System\\\\MarkdownEditor.js\";\nimport React, { Component } from \"react\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { createMarkdown } from \"../../services/userServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt();\nclass MarkdownEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contentMarkdown: \"\",\n      contentHTML: \"\",\n      description: \"\",\n      doctorId: \"\",\n      hasData: false\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: \"500px\"\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange,\n          value: this.state.contentMarkdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description-input mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"from-control\",\n          rows: \"3\",\n          value: this.state.description,\n          onChange: e => this.setState({\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: this.handleSaveContent,\n        children: \"Save Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);","map":{"version":3,"names":["React","Component","MarkdownIt","MdEditor","connect","toast","createMarkdown","jsxDEV","_jsxDEV","mdParser","MarkdownEditor","constructor","props","state","contentMarkdown","contentHTML","description","doctorId","hasData","render","className","children","style","height","renderHTML","text","onChange","handleEditorChange","value","fileName","_jsxFileName","lineNumber","columnNumber","rows","e","setState","target","onClick","handleSaveContent","mapStateToProps","language","app","mapDispatchToProps","dispatch"],"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React - Copy/src/containers/System/MarkdownEditor.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createMarkdown } from \"../../services/userServices\";\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass MarkdownEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contentMarkdown: \"\",\r\n            contentHTML: \"\",\r\n            description: \"\",\r\n            doctorId: \"\",\r\n            hasData: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"markdown-editor-container\">\r\n                <div className=\"markdown-editor\">\r\n                    <MdEditor\r\n                        style={{ height: \"500px\" }}\r\n                        renderHTML={(text) => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={this.state.contentMarkdown}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"description-input mt-3\"> \r\n                    <label>Description:</label>\r\n                    <textarea\r\n                    className=\"from-control\"\r\n                    rows=\"3\"\r\n                    value={this.state.description}\r\n                    onChange={(e) => this.setState({ description: e.target.value })}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className=\"btn btn-primary mt-3\"\r\n                    onClick={this.handleSaveContent}\r\n                >\r\n                    Save Content\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n      \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAO,0CAA0C;AACjD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,QAAQ,GAAG,IAAIP,UAAU,CAAC,CAAC;AAEjC,MAAMQ,cAAc,SAAST,SAAS,CAAC;EACnCU,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACb,CAAC;EACL;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACIX,OAAA;MAAKY,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACtCb,OAAA;QAAKY,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5Bb,OAAA,CAACL,QAAQ;UACLmB,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAQ,CAAE;UAC3BC,UAAU,EAAGC,IAAI,IAAKhB,QAAQ,CAACU,MAAM,CAACM,IAAI,CAAE;UAC5CC,QAAQ,EAAE,IAAI,CAACC,kBAAmB;UAClCC,KAAK,EAAE,IAAI,CAACf,KAAK,CAACC;QAAgB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENxB,OAAA;QAAKY,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACnCb,OAAA;UAAAa,QAAA,EAAO;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BxB,OAAA;UACAY,SAAS,EAAC,cAAc;UACxBa,IAAI,EAAC,GAAG;UACRL,KAAK,EAAE,IAAI,CAACf,KAAK,CAACG,WAAY;UAC9BU,QAAQ,EAAGQ,CAAC,IAAK,IAAI,CAACC,QAAQ,CAAC;YAAEnB,WAAW,EAAEkB,CAAC,CAACE,MAAM,CAACR;UAAM,CAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENxB,OAAA;QACIY,SAAS,EAAC,sBAAsB;QAChCiB,OAAO,EAAE,IAAI,CAACC,iBAAkB;QAAAjB,QAAA,EACnC;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEd;AACJ;AACA,MAAMO,eAAe,GAAI1B,KAAK,IAAK;EAC/B,OAAO;IACH2B,QAAQ,EAAE3B,KAAK,CAAC4B,GAAG,CAACD;EAExB,CAAC;AACL,CAAC;AAED,MAAME,kBAAkB,GAAIC,QAAQ,IAAK;EACrC,OAAO,CAEP,CAAC;AACL,CAAC;AAED,eAAevC,OAAO,CAACmC,eAAe,EAAEG,kBAAkB,CAAC,CAAChC,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}