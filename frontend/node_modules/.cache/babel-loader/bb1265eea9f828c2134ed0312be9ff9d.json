{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\5.font-end-react-fullstack\\\\React - Copy\\\\src\\\\containers\\\\System\\\\MarkdownEditor.js\";\nimport React, { Component } from \"react\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { createMarkdown } from \"../../services/userServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt();\n\nclass MarkdownEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contentMarkdown: \"\",\n      contentHTML: \"\",\n      description: \"\",\n      doctorId: \"\",\n      hasData: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-editor-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: \"500px\"\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange,\n          value: this.state.contentMarkdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    genderRedux: state.admin.genders,\n    isLoading: state.admin.isLoading,\n    positionRedux: state.admin.positions,\n    roleRedux: state.admin.roles,\n    success: state.admin.success,\n    error: state.admin.error,\n    users: state.admin.users,\n    isLoadingUsers: state.admin.isLoadingUsers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\n    getPositionStart: () => dispatch(actions.fetchPositionStart()),\n    getRoleStart: () => dispatch(actions.fetchRoleStart()),\n    createNewUser: data => dispatch(actions.createNewUser(data)),\n    // processLogout: () => dispatch(actions.processLogout()),\n    // changeLanguageAppRedux: (language) =>\n    //     dispatch(actions.changeLanguageApp(language)),\n    fetchAllUsers: () => dispatch(actions.fetchAllUsersStart()),\n    deleteUser: userId => dispatch(actions.deleteUserStart(userId)),\n    editUser: data => dispatch(actions.editUserStart(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React - Copy/src/containers/System/MarkdownEditor.js"],"names":["React","Component","MarkdownIt","MdEditor","connect","toast","createMarkdown","mdParser","MarkdownEditor","constructor","props","state","contentMarkdown","contentHTML","description","doctorId","hasData","render","height","text","handleEditorChange","mapStateToProps","language","app","genderRedux","admin","genders","isLoading","positionRedux","positions","roleRedux","roles","success","error","users","isLoadingUsers","mapDispatchToProps","dispatch","getGenderStart","actions","fetchGenderStart","getPositionStart","fetchPositionStart","getRoleStart","fetchRoleStart","createNewUser","data","fetchAllUsers","fetchAllUsersStart","deleteUser","userId","deleteUserStart","editUser","editUserStart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createMarkdown } from \"../../services/userServices\";\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass MarkdownEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contentMarkdown: \"\",\r\n            contentHTML: \"\",\r\n            description: \"\",\r\n            doctorId: \"\",\r\n            hasData: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"markdown-editor-container\">\r\n                <div className=\"markdown-editor\">\r\n                    <MdEditor\r\n                        style={{ height: \"500px\" }}\r\n                        renderHTML={(text) => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={this.state.contentMarkdown}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        genderRedux: state.admin.genders,\r\n        isLoading: state.admin.isLoading,\r\n        positionRedux: state.admin.positions,\r\n        roleRedux: state.admin.roles,\r\n        success: state.admin.success,\r\n        error: state.admin.error,\r\n        users: state.admin.users,\r\n        isLoadingUsers: state.admin.isLoadingUsers,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n        getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n        getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n        createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n        // processLogout: () => dispatch(actions.processLogout()),\r\n        // changeLanguageAppRedux: (language) =>\r\n        //     dispatch(actions.changeLanguageApp(language)),\r\n        fetchAllUsers: () => dispatch(actions.fetchAllUsersStart()),\r\n        deleteUser: (userId) => dispatch(actions.deleteUserStart(userId)),\r\n        editUser: (data) => dispatch(actions.editUserStart(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);"]},"metadata":{},"sourceType":"module"}