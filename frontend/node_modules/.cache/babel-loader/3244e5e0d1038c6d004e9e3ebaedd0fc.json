{"ast":null,"code":"import actionTypes from \"./actionTypes\";\nimport { getAllCodeService } from \"../../services/userServices\";\nexport const fetchPositionStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_POSITION_START\n      });\n      let res = await getAllCodeService(\"POSITION\");\n      console.log(\"check res\", res);\n\n      if (res && res.data.errCode === 0) {\n        dispatch(fetchPositionSuccess(res.data.data));\n      } else {\n        dispatch(fetchPositionrFailed(res.data.errMessage));\n      }\n    } catch (error) {\n      dispatch(fetchPositionFailed());\n      console.log(\"fetchPositionStart error\", error);\n    }\n  };\n};\nexport const fetchPSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_GENDER_START\n      });\n      let res = await getAllCodeService(\"GENDER\");\n      console.log(\"check res\", res);\n\n      if (res && res.data.errCode === 0) {\n        dispatch(fetchGenderSuccess(res.data.data));\n      } else {\n        dispatch(fetchGenderFailed(res.data.errMessage));\n      }\n    } catch (error) {\n      dispatch(fetchGenderFailed());\n      console.log(\"fetchGenderStart error\", error);\n    }\n  };\n};\nexport const fetchGenderSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderFailed = () => ({\n  type: actionTypes.FETCH_GENDER_FAILED\n});","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React/src/store/actions/adminActions.js"],"names":["actionTypes","getAllCodeService","fetchPositionStart","dispatch","getState","type","FETCH_POSITION_START","res","console","log","data","errCode","fetchPositionSuccess","fetchPositionrFailed","errMessage","error","fetchPositionFailed","fetchPSuccess","genderData","FETCH_GENDER_SUCCESS","fetchGenderStart","FETCH_GENDER_START","fetchGenderSuccess","fetchGenderFailed","FETCH_GENDER_FAILED"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACAD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL,WAAW,CAACM;AAApB,OAAD,CAAR;AAEA,UAAIC,GAAG,GAAG,MAAMN,iBAAiB,CAAC,UAAD,CAAjC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;;AACA,UAAIA,GAAG,IAAIA,GAAG,CAACG,IAAJ,CAASC,OAAT,KAAqB,CAAhC,EAAmC;AAC/BR,QAAAA,QAAQ,CAACS,oBAAoB,CAACL,GAAG,CAACG,IAAJ,CAASA,IAAV,CAArB,CAAR;AACH,OAFD,MAEO;AACHP,QAAAA,QAAQ,CAACU,oBAAoB,CAACN,GAAG,CAACG,IAAJ,CAASI,UAAV,CAArB,CAAR;AACH;AACJ,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZZ,MAAAA,QAAQ,CAACa,mBAAmB,EAApB,CAAR;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCM,KAAxC;AACH;AACJ,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAME,aAAa,GAAIC,UAAD,KAAiB;AAC1Cb,EAAAA,IAAI,EAAEL,WAAW,CAACmB,oBADwB;AAE1CT,EAAAA,IAAI,EAAEQ;AAFoC,CAAjB,CAAtB;AAMP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AAClC,SAAO,OAAOjB,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,QAAI;AACAD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEL,WAAW,CAACqB;AAApB,OAAD,CAAR;AAEA,UAAId,GAAG,GAAG,MAAMN,iBAAiB,CAAC,QAAD,CAAjC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,GAAzB;;AACA,UAAIA,GAAG,IAAIA,GAAG,CAACG,IAAJ,CAASC,OAAT,KAAqB,CAAhC,EAAmC;AAC/BR,QAAAA,QAAQ,CAACmB,kBAAkB,CAACf,GAAG,CAACG,IAAJ,CAASA,IAAV,CAAnB,CAAR;AACH,OAFD,MAEO;AACHP,QAAAA,QAAQ,CAACoB,iBAAiB,CAAChB,GAAG,CAACG,IAAJ,CAASI,UAAV,CAAlB,CAAR;AACH;AACJ,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZZ,MAAAA,QAAQ,CAACoB,iBAAiB,EAAlB,CAAR;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCM,KAAtC;AACH;AACJ,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMO,kBAAkB,GAAIJ,UAAD,KAAiB;AAC/Cb,EAAAA,IAAI,EAAEL,WAAW,CAACmB,oBAD6B;AAE/CT,EAAAA,IAAI,EAAEQ;AAFyC,CAAjB,CAA3B;AAKP,OAAO,MAAMK,iBAAiB,GAAG,OAAO;AACpClB,EAAAA,IAAI,EAAEL,WAAW,CAACwB;AADkB,CAAP,CAA1B","sourcesContent":["import actionTypes from \"./actionTypes\";\r\nimport { getAllCodeService } from \"../../services/userServices\";\r\n\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_POSITION_START });\r\n\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            console.log(\"check res\", res);\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchPositionSuccess(res.data.data));\r\n            } else {\r\n                dispatch(fetchPositionrFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log(\"fetchPositionStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchPSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData,\r\n});\r\n\r\n\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: actionTypes.FETCH_GENDER_START });\r\n\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            console.log(\"check res\", res);\r\n            if (res && res.data.errCode === 0) {\r\n                dispatch(fetchGenderSuccess(res.data.data));\r\n            } else {\r\n                dispatch(fetchGenderFailed(res.data.errMessage));\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchGenderFailed());\r\n            console.log(\"fetchGenderStart error\", error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData,\r\n});\r\n\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}