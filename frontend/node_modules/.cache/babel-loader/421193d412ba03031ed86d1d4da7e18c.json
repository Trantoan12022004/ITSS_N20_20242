{"ast":null,"code":"// Utilities\n//\nimport * as mdurl from 'mdurl';\nimport * as ucmicro from 'uc.micro';\nimport { decodeHTML } from 'entities';\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n} // Merge objects\n//\n\n\nfunction assign(obj\n/* from1, from2, from3, ... */\n) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} // Remove element from array and put another array at those position.\n// Useful for some operations with tokens\n\n\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\nfunction isValidEntityCode(c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000;\n    const surrogate1 = 0xd800 + (c >> 10);\n    const surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nconst UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g;\nconst ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nfunction replaceEntityPattern(match, name) {\n  if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n\n    return match;\n  }\n\n  const decoded = decodeHTML(match);\n\n  if (decoded !== match) {\n    return decoded;\n  }\n\n  return match;\n}\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n\n    return replaceEntityPattern(match, entity);\n  });\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n\n  return false;\n} // Zs (unicode class) || [\\t\\f\\v\\r\\n]\n\n\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n\n  switch (code) {\n    case 0x09: // \\t\n\n    case 0x0A: // \\n\n\n    case 0x0B: // \\v\n\n    case 0x0C: // \\f\n\n    case 0x0D: // \\r\n\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n\n  return false;\n}\n/* eslint-disable max-len */\n// Currently without astral characters support.\n\n\nfunction isPunctChar(ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch);\n} // Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\n\n\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21\n    /* ! */\n    :\n    case 0x22\n    /* \" */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x27\n    /* ' */\n    :\n    case 0x28\n    /* ( */\n    :\n    case 0x29\n    /* ) */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2C\n    /* , */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x2E\n    /* . */\n    :\n    case 0x2F\n    /* / */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3B\n    /* ; */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x3F\n    /* ? */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7C\n    /* | */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n} // Hepler to unify [reference labels].\n//\n\n\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' '); // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  } // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n\n\n  return str.toLowerCase().toUpperCase();\n} // Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\n\n\nconst lib = {\n  mdurl,\n  ucmicro\n};\nexport { lib, assign, isString, has, unescapeMd, unescapeAll, isValidEntityCode, fromCodePoint, escapeHtml, arrayReplaceAt, isSpace, isWhiteSpace, isMdAsciiPunct, isPunctChar, escapeRE, normalizeReference };","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React - Copy/node_modules/markdown-it/lib/common/utils.mjs"],"names":["mdurl","ucmicro","decodeHTML","_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","match","name","charCodeAt","test","code","toLowerCase","parseInt","decoded","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","P","S","isMdAsciiPunct","normalizeReference","trim","toUpperCase","lib"],"mappings":"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","sourcesContent":["// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n"]},"metadata":{},"sourceType":"module"}