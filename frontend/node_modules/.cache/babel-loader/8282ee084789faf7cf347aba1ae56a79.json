{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\5.font-end-react-fullstack\\\\React - Copy\\\\src\\\\containers\\\\HomePage\\\\Section\\\\FeaturedDoctors.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { languages } from \"../../../utils/constant\";\nimport \"./FeaturedDoctors.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport * as actions from \"../../../store/actions\"; // import medicalImg from \"../../../assets/FeaturedDoctors/1.jpg\";\n\nimport Carousel from \"react-bootstrap/Carousel\";\nimport ExampleCarouselImage from \"../../../components/ExampleCarouselImage\";\nimport medicalImg from \"../../../assets/medical/1.jpg\";\nimport CardDoctor from \"../../../components/CardDoctor\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FeaturedDoctors extends Component {\n  componentDidMount() {\n    this.props.fetchAllDoctors();\n  }\n\n  render() {\n    const {\n      isLoading,\n      allDoctors,\n      language\n    } = this.props;\n    let settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 2,\n      nextArrow: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slick-next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }, this),\n      prevArrow: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slick-prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, this)\n    };\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-doctors\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctors-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doctors-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"doctors-title mb-3 ml-1\",\n              children: \"B\\xE1c s\\u0129 n\\u1ED5i b\\u1EADt tu\\u1EA7n qua\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-outline-primary\",\n              children: \"T\\xECm ki\\u1EBFm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n            children: allDoctors && allDoctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"doctors-item\",\n              children: /*#__PURE__*/_jsxDEV(CardDoctor, {\n                c: true,\n                imageUrl: doctor.image ? `data:image/jpeg;base64,${doctor.image}` : '/default-doctor.png',\n                name: language === languages.VI ? `${doctor.lastName} ${doctor.firstName}` : `${doctor.firstName} ${doctor.lastName}`,\n                position: language === languages.VI ? doctor.positionData.valueVi : doctor.positionData.valueEn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this)\n            }, doctor.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    isLoggedIn: state.user.isLoggedIn,\n    allDoctors: state.admin.allDoctors\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAllDoctors: () => dispatch(actions.fetchAllDoctors())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeaturedDoctors);","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React - Copy/src/containers/HomePage/Section/FeaturedDoctors.js"],"names":["React","Component","connect","languages","FormattedMessage","Slider","actions","Carousel","ExampleCarouselImage","medicalImg","CardDoctor","Button","Card","FeaturedDoctors","componentDidMount","props","fetchAllDoctors","render","isLoading","allDoctors","language","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","map","doctor","index","image","VI","lastName","firstName","positionData","valueVi","valueEn","id","mapStateToProps","state","app","isLoggedIn","user","admin","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAO,wBAAP;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,oBAAP,MAAiC,0CAAjC;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AACA,MAAMC,eAAN,SAA8BZ,SAA9B,CAAwC;AACpCa,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,eAAX;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,UAAb;AAAyBC,MAAAA;AAAzB,QAAsC,KAAKL,KAAjD;AACA,QAAIM,QAAQ,GAAG;AACXC,MAAAA,IAAI,EAAE,KADK;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,KAAK,EAAE,GAHI;AAIXC,MAAAA,YAAY,EAAE,CAJH;AAKXC,MAAAA,cAAc,EAAE,CALL;AAMXC,MAAAA,SAAS,eAAE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cANA;AAOXC,MAAAA,SAAS,eAAE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAPA,KAAf;AASA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,KAAK,EAAC,yBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAaKV,SAAS,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,gBAGN,QAAC,MAAD,OAAYG,QAAZ;AAAA,sBACKF,UAAU,IAAIA,UAAU,CAACU,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,kBAC1B;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACI,QAAC,UAAD;AACA,gBAAA,CAAC,MADD;AAEI,gBAAA,QAAQ,EAAED,MAAM,CAACE,KAAP,GACL,0BAAyBF,MAAM,CAACE,KAAM,EADjC,GAEN,qBAJR;AAMI,gBAAA,IAAI,EAAEZ,QAAQ,KAAKjB,SAAS,CAAC8B,EAAvB,GACD,GAAEH,MAAM,CAACI,QAAS,IAAGJ,MAAM,CAACK,SAAU,EADrC,GAED,GAAEL,MAAM,CAACK,SAAU,IAAGL,MAAM,CAACI,QAAS,EAR/C;AAUI,gBAAA,QAAQ,EAAEd,QAAQ,KAAKjB,SAAS,CAAC8B,EAAvB,GACNH,MAAM,CAACM,YAAP,CAAoBC,OADd,GAENP,MAAM,CAACM,YAAP,CAAoBE;AAZ5B;AAAA;AAAA;AAAA;AAAA;AADJ,eAAmCR,MAAM,CAACS,EAA1C;AAAA;AAAA;AAAA;AAAA,oBADW;AADnB;AAAA;AAAA;AAAA;AAAA,kBAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA6CH;;AA5DmC;;AA+DxC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHrB,IAAAA,QAAQ,EAAEqB,KAAK,CAACC,GAAN,CAAUtB,QADjB;AAEHuB,IAAAA,UAAU,EAAEF,KAAK,CAACG,IAAN,CAAWD,UAFpB;AAGHxB,IAAAA,UAAU,EAAEsB,KAAK,CAACI,KAAN,CAAY1B;AAHrB,GAAP;AAKH,CAND;;AAQA,MAAM2B,kBAAkB,GAAIC,QAAD,KAAe;AACtC/B,EAAAA,eAAe,EAAE,MAAM+B,QAAQ,CAACzC,OAAO,CAACU,eAAR,EAAD;AADO,CAAf,CAA3B;;AAIA,eAAed,OAAO,CAACsC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CjC,eAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { languages } from \"../../../utils/constant\";\r\nimport \"./FeaturedDoctors.scss\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport * as actions from \"../../../store/actions\";\r\n// import medicalImg from \"../../../assets/FeaturedDoctors/1.jpg\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport ExampleCarouselImage from \"../../../components/ExampleCarouselImage\";\r\nimport medicalImg from \"../../../assets/medical/1.jpg\";\r\nimport CardDoctor from \"../../../components/CardDoctor\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nclass FeaturedDoctors extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctors();\r\n    }\r\n    render() {\r\n        const { isLoading, allDoctors, language } = this.props;\r\n        let settings = {\r\n            dots: false,\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 2,\r\n            nextArrow: <div className=\"slick-next\"></div>,\r\n            prevArrow: <div className=\"slick-prev\"></div>,\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"section-doctors\">\r\n                    <div className=\"doctors-content\">\r\n                        <div className=\"doctors-header\">\r\n                            <div className=\"doctors-title mb-3 ml-1\">\r\n                                Bác sĩ nổi bật tuần qua\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-outline-primary\"\r\n                            >\r\n                                Tìm kiếm\r\n                            </button>\r\n                        </div>\r\n\r\n                        {isLoading ? (\r\n                            <div>Loading...</div>\r\n                        ) : (\r\n                            <Slider {...settings}>\r\n                                {allDoctors && allDoctors.map((doctor, index) => (\r\n                                    <div className=\"doctors-item\" key={doctor.id}>\r\n                                        <CardDoctor\r\n                                        c\r\n                                            imageUrl={doctor.image ? \r\n                                                `data:image/jpeg;base64,${doctor.image}` : \r\n                                                '/default-doctor.png'\r\n                                            }\r\n                                            name={language === languages.VI ? \r\n                                                `${doctor.lastName} ${doctor.firstName}` :\r\n                                                `${doctor.firstName} ${doctor.lastName}`\r\n                                            }\r\n                                            position={language === languages.VI ?\r\n                                                doctor.positionData.valueVi :\r\n                                                doctor.positionData.valueEn\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </Slider>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctors: state.admin.allDoctors,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeaturedDoctors);\r\n"]},"metadata":{},"sourceType":"module"}