{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash';\nimport config from './config';\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true,\n  maxContentLength: 16 * 1024 * 1024,\n  maxBodyLength: 16 * 1024 * 1024,\n  timeout: 30000\n});\ninstance.interceptors.request.use(config => {\n  if (config.data && config.data.image) {\n    config.timeout = 120000; // 2 phút cho requests có ảnh\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\n  const error = new Error();\n  error.httpStatusCode = httpStatusCode;\n  error.statusCode = statusCode;\n  error.errorMessage = errorMessage;\n  error.problems = problems;\n  error.errorCode = errorCode + \"\";\n  return error;\n};\nexport const isSuccessStatusCode = s => {\n  // May be string or number\n  const statusType = typeof s;\n  return statusType === 'number' && s === 0 || statusType === 'string' && s.toUpperCase() === 'OK';\n};\ninstance.interceptors.response.use(response => {\n  // Thrown error for request with OK status code\n  const {\n    data\n  } = response;\n  if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\n    return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\n  }\n\n  // Return direct data to callback\n  if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\n    return data['d'];\n  }\n  // Handle special case\n  if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\n    return null;\n  }\n  return response.data;\n}, error => {\n  const {\n    response\n  } = error;\n  if (response == null) {\n    return Promise.reject(error);\n  }\n  const {\n    data\n  } = response;\n  if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\n    return Promise.reject(createError(response.status, data['s'], data['errmsg']));\n  }\n  if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\n    return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\n  }\n  return Promise.reject(createError(response.status));\n});\nexport default instance;","map":{"version":3,"names":["axios","_","config","instance","create","baseURL","process","env","REACT_APP_BACKEND_URL","withCredentials","maxContentLength","maxBodyLength","timeout","interceptors","request","use","data","image","error","Promise","reject","createError","httpStatusCode","statusCode","errorMessage","problems","errorCode","Error","isSuccessStatusCode","s","statusType","toUpperCase","response","hasOwnProperty","status","keys","length"],"sources":["C:/Users/Trant/Documents/Lập Trình Web/CTES WEB/React - Copy/src/axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true,\r\n    maxContentLength: 16 * 1024 * 1024,\r\n    maxBodyLength: 16 * 1024 * 1024,\r\n    timeout: 30000\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    (config) => {\r\n        if (config.data && config.data.image) {\r\n            config.timeout = 120000; // 2 phút cho requests có ảnh\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n    const error = new Error();\r\n    error.httpStatusCode = httpStatusCode;\r\n    error.statusCode = statusCode;\r\n    error.errorMessage = errorMessage;\r\n    error.problems = problems;\r\n    error.errorCode = errorCode + \"\";\r\n    return error;\r\n};\r\n\r\nexport const isSuccessStatusCode = (s) => {\r\n    // May be string or number\r\n    const statusType = typeof s;\r\n    return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n};\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        if (data.hasOwnProperty('s') && !isSuccessStatusCode(data['s']) && data.hasOwnProperty('errmsg')) {\r\n            return Promise.reject(createError(response.status, data['s'], data['errmsg'], null, data['errcode'] ? data['errcode'] : \"\"));\r\n        }\r\n\r\n        // Return direct data to callback\r\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('d')) {\r\n            return data['d'];\r\n        }\r\n        // Handle special case\r\n        if (data.hasOwnProperty('s') && _.keys(data).length === 1) {\r\n            return null;\r\n        }\r\n        return response.data;\r\n    },\r\n    (error) => {\r\n        const { response } = error;\r\n        if (response == null) {\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const { data } = response;\r\n\r\n        if (data.hasOwnProperty('s') && data.hasOwnProperty('errmsg')) {\r\n            return Promise.reject(createError(response.status, data['s'], data['errmsg']));\r\n        }\r\n\r\n        if (data.hasOwnProperty('code') && data.hasOwnProperty('message')) {\r\n            return Promise.reject(createError(response.status, data['code'], data['message'], data['problems']));\r\n        }\r\n\r\n        return Promise.reject(createError(response.status));\r\n    }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}