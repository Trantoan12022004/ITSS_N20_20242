{"ast":null,"code":"// Process html entity - &#123;, &#xAF;, &quot;, ...\nimport { decodeHTML } from 'entities';\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs';\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nconst NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\nexport default function entity(state, silent) {\n  const pos = state.pos;\n  const max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) return false;\n  if (pos + 1 >= max) return false;\n  const ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23\n  /* # */\n  ) {\n      const match = state.src.slice(pos).match(DIGITAL_RE);\n\n      if (match) {\n        if (!silent) {\n          const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          const token = state.push('text_special', '', 0);\n          token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n    const match = state.src.slice(pos).match(NAMED_RE);\n\n    if (match) {\n      const decoded = decodeHTML(match[0]);\n\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token = state.push('text_special', '', 0);\n          token.content = decoded;\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React - Copy/node_modules/markdown-it/lib/rules_inline/entity.mjs"],"names":["decodeHTML","isValidEntityCode","fromCodePoint","DIGITAL_RE","NAMED_RE","entity","state","silent","pos","max","posMax","src","charCodeAt","ch","match","slice","code","toLowerCase","parseInt","token","push","content","markup","info","length","decoded"],"mappings":"AAAA;AAEA,SAASA,UAAT,QAA2B,UAA3B;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,qBAAjD;AAEA,MAAMC,UAAU,GAAG,sCAAnB;AACA,MAAMC,QAAQ,GAAK,2BAAnB;AAEA,eAAe,SAASC,MAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,QAAMC,GAAG,GAAGF,KAAK,CAACE,GAAlB;AACA,QAAMC,GAAG,GAAGH,KAAK,CAACI,MAAlB;AAEA,MAAIJ,KAAK,CAACK,GAAN,CAAUC,UAAV,CAAqBJ,GAArB,MAA8B;AAAI;AAAtC,IAA+C,OAAO,KAAP;AAE/C,MAAIA,GAAG,GAAG,CAAN,IAAWC,GAAf,EAAoB,OAAO,KAAP;AAEpB,QAAMI,EAAE,GAAGP,KAAK,CAACK,GAAN,CAAUC,UAAV,CAAqBJ,GAAG,GAAG,CAA3B,CAAX;;AAEA,MAAIK,EAAE,KAAK;AAAK;AAAhB,IAAyB;AACvB,YAAMC,KAAK,GAAGR,KAAK,CAACK,GAAN,CAAUI,KAAV,CAAgBP,GAAhB,EAAqBM,KAArB,CAA2BX,UAA3B,CAAd;;AACA,UAAIW,KAAJ,EAAW;AACT,YAAI,CAACP,MAAL,EAAa;AACX,gBAAMS,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAL,CAAS,CAAT,EAAYG,WAAZ,OAA8B,GAA9B,GAAoCC,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,CAAf,CAAD,EAAoB,EAApB,CAA5C,GAAsEG,QAAQ,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAA3F;AAEA,gBAAMK,KAAK,GAAKb,KAAK,CAACc,IAAN,CAAW,cAAX,EAA2B,EAA3B,EAA+B,CAA/B,CAAhB;AACAD,UAAAA,KAAK,CAACE,OAAN,GAAgBpB,iBAAiB,CAACe,IAAD,CAAjB,GAA0Bd,aAAa,CAACc,IAAD,CAAvC,GAAgDd,aAAa,CAAC,MAAD,CAA7E;AACAiB,UAAAA,KAAK,CAACG,MAAN,GAAgBR,KAAK,CAAC,CAAD,CAArB;AACAK,UAAAA,KAAK,CAACI,IAAN,GAAgB,QAAhB;AACD;;AACDjB,QAAAA,KAAK,CAACE,GAAN,IAAaM,KAAK,CAAC,CAAD,CAAL,CAASU,MAAtB;AACA,eAAO,IAAP;AACD;AACF,KAdD,MAcO;AACL,UAAMV,KAAK,GAAGR,KAAK,CAACK,GAAN,CAAUI,KAAV,CAAgBP,GAAhB,EAAqBM,KAArB,CAA2BV,QAA3B,CAAd;;AACA,QAAIU,KAAJ,EAAW;AACT,YAAMW,OAAO,GAAGzB,UAAU,CAACc,KAAK,CAAC,CAAD,CAAN,CAA1B;;AACA,UAAIW,OAAO,KAAKX,KAAK,CAAC,CAAD,CAArB,EAA0B;AACxB,YAAI,CAACP,MAAL,EAAa;AACX,gBAAMY,KAAK,GAAKb,KAAK,CAACc,IAAN,CAAW,cAAX,EAA2B,EAA3B,EAA+B,CAA/B,CAAhB;AACAD,UAAAA,KAAK,CAACE,OAAN,GAAgBI,OAAhB;AACAN,UAAAA,KAAK,CAACG,MAAN,GAAgBR,KAAK,CAAC,CAAD,CAArB;AACAK,UAAAA,KAAK,CAACI,IAAN,GAAgB,QAAhB;AACD;;AACDjB,QAAAA,KAAK,CAACE,GAAN,IAAaM,KAAK,CAAC,CAAD,CAAL,CAASU,MAAtB;AACA,eAAO,IAAP;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n"]},"metadata":{},"sourceType":"module"}