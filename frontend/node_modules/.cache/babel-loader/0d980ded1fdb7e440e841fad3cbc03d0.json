{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\CTES WEB\\\\React - Copy\\\\src\\\\components\\\\Header\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport { getUserNotifications, markNotificationAsRead } from \"../../services/notificationServices\";\nimport MenuItems from \"./MenuItems\";\nimport { languages } from \"../../utils/constant\";\nimport normalLogo from \"../../assets/images/logos/logo.png\";\nimport stickyLogo from \"../../assets/images/logos/logo.png\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.loadNotifications = async () => {\n      var _this$props$userInfor;\n      if (!((_this$props$userInfor = this.props.userInforr) === null || _this$props$userInfor === void 0 ? void 0 : _this$props$userInfor.id)) return;\n      this.setState({\n        isLoadingNotifications: true\n      });\n      try {\n        const response = await getUserNotifications(this.props.userInforr.id);\n        if (response && response.errCode === 0) {\n          this.setState({\n            notifications: response.data,\n            unreadCount: response.unreadCount || 0\n          });\n        } else {\n          console.error(\"Error loading notifications:\", response.errMessage);\n        }\n      } catch (error) {\n        console.error(\"Error loading notifications:\", error);\n      } finally {\n        this.setState({\n          isLoadingNotifications: false\n        });\n      }\n    };\n    this.handleNotificationClick = async notification => {\n      if (!notification.is_read) {\n        try {\n          const response = await markNotificationAsRead(notification.id, this.props.userInforr.id);\n          if (response && response.errCode === 0) {\n            // Cập nhật state để thay đổi UI\n            this.setState(prevState => ({\n              notifications: prevState.notifications.map(n => n.id === notification.id ? {\n                ...n,\n                is_read: true\n              } : n),\n              unreadCount: Math.max(0, prevState.unreadCount - 1)\n            }));\n          }\n        } catch (error) {\n          console.error(\"Error marking notification as read:\", error);\n        }\n      }\n\n      // Đóng dropdown thông báo\n      this.setState({\n        notificationMenuOpen: false\n      });\n\n      // Chuyển hướng nếu có link\n      if (notification.link) {\n        window.location.href = notification.link;\n      }\n    };\n    this.formatNotificationTime = timestamp => {\n      const date = new Date(timestamp);\n      const now = new Date();\n      const diffInSeconds = Math.floor((now - date) / 1000);\n      if (diffInSeconds < 60) {\n        return 'Vừa xong';\n      } else if (diffInSeconds < 3600) {\n        return `${Math.floor(diffInSeconds / 60)} phút trước`;\n      } else if (diffInSeconds < 86400) {\n        return `${Math.floor(diffInSeconds / 3600)} giờ trước`;\n      } else {\n        return date.toLocaleDateString('vi-VN');\n      }\n    };\n    this.toggleVisibility = () => {\n      // Hiển thị sticky header sau khi cuộn 100px\n      if (window.pageYOffset > 100) {\n        this.setState({\n          isVisible: true\n        });\n      } else {\n        this.setState({\n          isVisible: false\n        });\n      }\n    };\n    this.toggleMenu = () => {\n      // Mở/đóng menu trên mobile\n      this.setState(prevState => ({\n        menuOpen: !prevState.menuOpen\n      }));\n    };\n    this.toggleUserMenu = () => {\n      // Mở/đóng dropdown menu người dùng\n      this.setState(prevState => ({\n        userMenuOpen: !prevState.userMenuOpen\n      }));\n    };\n    this.toggleNotificationMenu = () => {\n      this.setState(prevState => ({\n        notificationMenuOpen: !prevState.notificationMenuOpen\n      }));\n    };\n    this.handleClickOutside = event => {\n      // Đóng menu dropdown khi click ra ngoài\n      if (this.dropdownRef && this.dropdownRef.current && !this.dropdownRef.current.contains(event.target)) {\n        this.setState({\n          userMenuOpen: false\n        });\n      }\n      if (this.notificationRef && this.notificationRef.current && !this.notificationRef.current.contains(event.target)) {\n        this.setState({\n          notificationMenuOpen: false\n        });\n      }\n    };\n    this.state = {\n      menuOpen: false,\n      // Trạng thái menu trên mobile\n      isVisible: false,\n      // Trạng thái hiển thị sticky header\n      userMenuOpen: false,\n      // Trạng thái menu dropdown của người dùng\n      notificationMenuOpen: false,\n      // Trạng thái dropdown thông báo\n      notifications: [],\n      // Danh sách thông báo\n      unreadCount: 0,\n      // Số thông báo chưa đọc\n      isLoadingNotifications: false // Đang tải thông báo\n    };\n\n    // Tạo ref cho dropdown để xử lý click outside\n    this.dropdownRef = /*#__PURE__*/React.createRef();\n    this.notificationRef = /*#__PURE__*/React.createRef();\n  }\n\n  // ===== Lifecycle Methods =====\n  componentDidMount() {\n    var _this$props$userInfor2;\n    // Thêm các event listeners khi component được mount\n    window.addEventListener(\"scroll\", this.toggleVisibility);\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n\n    // Nếu người dùng đã đăng nhập, tải thông báo\n    if (this.props.isLoggedIn && ((_this$props$userInfor2 = this.props.userInforr) === null || _this$props$userInfor2 === void 0 ? void 0 : _this$props$userInfor2.id)) {\n      this.loadNotifications();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    var _prevProps$userInforr, _this$props$userInfor3, _this$props$userInfor4;\n    // Nếu người dùng vừa đăng nhập, tải thông báo\n    if (!prevProps.isLoggedIn && this.props.isLoggedIn || ((_prevProps$userInforr = prevProps.userInforr) === null || _prevProps$userInforr === void 0 ? void 0 : _prevProps$userInforr.id) !== ((_this$props$userInfor3 = this.props.userInforr) === null || _this$props$userInfor3 === void 0 ? void 0 : _this$props$userInfor3.id) && ((_this$props$userInfor4 = this.props.userInforr) === null || _this$props$userInfor4 === void 0 ? void 0 : _this$props$userInfor4.id)) {\n      this.loadNotifications();\n    }\n  }\n  componentWillUnmount() {\n    // Loại bỏ các event listeners khi component bị unmount\n    window.removeEventListener(\"scroll\", this.toggleVisibility);\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  // ===== Notification Methods =====\n\n  // Định dạng thời gian thông báo\n\n  // ===== Header Visibility Controls =====\n\n  // ===== Menu Controls =====\n\n  // ===== User Menu Controls =====\n\n  // Toggle notification dropdown\n\n  // ===== Render Method =====\n  render() {\n    var _userInforr$firstName, _userInforr$lastName;\n    const {\n      menuOpen,\n      isVisible,\n      userMenuOpen,\n      notificationMenuOpen,\n      notifications,\n      unreadCount,\n      isLoadingNotifications\n    } = this.state;\n    const {\n      topbarEnable,\n      headerClass,\n      parentMenu,\n      headerNormalLogo,\n      headerStickyLogo,\n      isLoggedIn,\n      userInforr,\n      language\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"react-header\",\n      className: headerClass ? headerClass : \"react-header react-header-three\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isVisible ? \"header-area react-sticky\" : \"header-area\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-part\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"react-main-menu\",\n              children: /*#__PURE__*/_jsxDEV(\"nav\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: menuOpen ? \"react-inner-menus menu-open\" : \"react-inner-menus\",\n                  children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                    id: \"backmenu\",\n                    className: \"react-menus react-sub-shadow\",\n                    children: /*#__PURE__*/_jsxDEV(MenuItems, {\n                      parentMenu: parentMenu\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"header-actions\",\n                    children: !isLoggedIn ?\n                    /*#__PURE__*/\n                    // Login Button for Non-authenticated Users\n                    _jsxDEV(\"div\", {\n                      className: \"login-button\",\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"/login\",\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fas fa-sign-in-alt\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 57\n                        }, this), \" \", \"\\u0110\\u0103ng nh\\u1EADp\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"notification-dropdown\",\n                        ref: this.notificationRef,\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"notification-btn\",\n                          onClick: this.toggleNotificationMenu,\n                          \"aria-label\": \"Notifications\",\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-bell\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 61\n                          }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"notification-badge\",\n                            children: unreadCount > 99 ? '99+' : unreadCount\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 238,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 57\n                        }, this), notificationMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"notification-dropdown-menu\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"notification-header\",\n                            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: \"Th\\xF4ng b\\xE1o\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 248,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 247,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"notification-body\",\n                            children: isLoadingNotifications ? /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"loading-notifications\",\n                              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                                children: \"\\u0110ang t\\u1EA3i th\\xF4ng b\\xE1o...\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 254,\n                                columnNumber: 77\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 253,\n                              columnNumber: 73\n                            }, this) : notifications.length > 0 ? notifications.slice(0, 5).map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: `notification-item ${!notification.is_read ? \"unread\" : \"\"}`,\n                              onClick: () => this.handleNotificationClick(notification),\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"notification-icon\",\n                                children: [notification.type === \"NEW_EVENT\" && /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-calendar\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 264,\n                                  columnNumber: 123\n                                }, this), notification.type === \"HELP_REQUEST\" && /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-hands-helping\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 265,\n                                  columnNumber: 126\n                                }, this), notification.type === \"EVENT_UPDATED\" && /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-edit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 266,\n                                  columnNumber: 127\n                                }, this), notification.type === \"EVENT_SCORE\" && /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-star\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 267,\n                                  columnNumber: 125\n                                }, this), ![\"NEW_EVENT\", \"HELP_REQUEST\", \"EVENT_UPDATED\", \"EVENT_SCORE\"].includes(notification.type) && /*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-bell\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 270,\n                                  columnNumber: 90\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 263,\n                                columnNumber: 81\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"notification-content\",\n                                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                                  children: notification.title\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 273,\n                                  columnNumber: 85\n                                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                  children: notification.message\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 274,\n                                  columnNumber: 85\n                                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                                  children: this.formatNotificationTime(notification.created_at)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 275,\n                                  columnNumber: 85\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 272,\n                                columnNumber: 81\n                              }, this)]\n                            }, notification.id, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 258,\n                              columnNumber: 77\n                            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"no-notifications\",\n                              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                                children: \"Kh\\xF4ng c\\xF3 th\\xF4ng b\\xE1o n\\xE0o\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 281,\n                                columnNumber: 77\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 280,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 251,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"notification-footer\",\n                            children: /*#__PURE__*/_jsxDEV(Link, {\n                              to: \"/notifications\",\n                              className: \"view-all\",\n                              onClick: () => this.setState({\n                                notificationMenuOpen: false\n                              }),\n                              children: \"Xem t\\u1EA5t c\\u1EA3 th\\xF4ng b\\xE1o\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 287,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 286,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 246,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"user-dropdown\",\n                        ref: this.dropdownRef,\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"dropdown\",\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-secondary dropdown-toggle\",\n                            type: \"button\",\n                            onClick: this.toggleUserMenu,\n                            \"aria-label\": \"User menu\",\n                            children: [(userInforr === null || userInforr === void 0 ? void 0 : userInforr.lastName) || \"User\", (userInforr === null || userInforr === void 0 ? void 0 : userInforr.image) ? /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: userInforr.image,\n                              alt: \"User Avatar\",\n                              className: \"dropdown-avatar\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 310,\n                              columnNumber: 69\n                            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"dropdown-avatar-placeholder\",\n                              children: (userInforr === null || userInforr === void 0 ? void 0 : (_userInforr$firstName = userInforr.firstName) === null || _userInforr$firstName === void 0 ? void 0 : _userInforr$firstName.charAt(0)) || (userInforr === null || userInforr === void 0 ? void 0 : (_userInforr$lastName = userInforr.lastName) === null || _userInforr$lastName === void 0 ? void 0 : _userInforr$lastName.charAt(0)) || 'U'\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 316,\n                              columnNumber: 69\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 302,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 301,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 300,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// Redux Connection\nconst mapStateToProps = state => ({\n  isLoggedIn: state.user.isLoggedIn,\n  userInforr: state.user.userInforr,\n  language: state.app.language\n});\nconst mapDispatchToProps = dispatch => ({\n  processLogout: () => dispatch(actions.processLogout()),\n  changeLanguageAppRedux: language => dispatch(actions.changeLanguageApp(language))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"names":["React","Component","Link","connect","actions","getUserNotifications","markNotificationAsRead","MenuItems","languages","normalLogo","stickyLogo","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","constructor","props","loadNotifications","_this$props$userInfor","userInforr","id","setState","isLoadingNotifications","response","errCode","notifications","data","unreadCount","console","error","errMessage","handleNotificationClick","notification","is_read","prevState","map","n","Math","max","notificationMenuOpen","link","window","location","href","formatNotificationTime","timestamp","date","Date","now","diffInSeconds","floor","toLocaleDateString","toggleVisibility","pageYOffset","isVisible","toggleMenu","menuOpen","toggleUserMenu","userMenuOpen","toggleNotificationMenu","handleClickOutside","event","dropdownRef","current","contains","target","notificationRef","state","createRef","componentDidMount","_this$props$userInfor2","addEventListener","document","isLoggedIn","componentDidUpdate","prevProps","_prevProps$userInforr","_this$props$userInfor3","_this$props$userInfor4","componentWillUnmount","removeEventListener","render","_userInforr$firstName","_userInforr$lastName","topbarEnable","headerClass","parentMenu","headerNormalLogo","headerStickyLogo","language","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","ref","onClick","length","slice","type","includes","title","message","created_at","lastName","image","src","alt","firstName","charAt","mapStateToProps","user","app","mapDispatchToProps","dispatch","processLogout","changeLanguageAppRedux","changeLanguageApp"],"sources":["C:/Users/Trant/Documents/Lập Trình Web/CTES WEB/React - Copy/src/components/Header/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { getUserNotifications, markNotificationAsRead } from \"../../services/notificationServices\";\r\nimport MenuItems from \"./MenuItems\";\r\nimport { languages } from \"../../utils/constant\";\r\nimport normalLogo from \"../../assets/images/logos/logo.png\";\r\nimport stickyLogo from \"../../assets/images/logos/logo.png\";\r\nimport \"./index.scss\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuOpen: false,        // Trạng thái menu trên mobile\r\n            isVisible: false,       // Trạng thái hiển thị sticky header\r\n            userMenuOpen: false,    // Trạng thái menu dropdown của người dùng\r\n            notificationMenuOpen: false, // Trạng thái dropdown thông báo\r\n            notifications: [],      // Danh sách thông báo\r\n            unreadCount: 0,         // Số thông báo chưa đọc\r\n            isLoadingNotifications: false // Đang tải thông báo\r\n        };\r\n\r\n        // Tạo ref cho dropdown để xử lý click outside\r\n        this.dropdownRef = React.createRef();\r\n        this.notificationRef = React.createRef();\r\n    }\r\n\r\n    // ===== Lifecycle Methods =====\r\n    componentDidMount() {\r\n        // Thêm các event listeners khi component được mount\r\n        window.addEventListener(\"scroll\", this.toggleVisibility);\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n        \r\n        // Nếu người dùng đã đăng nhập, tải thông báo\r\n        if (this.props.isLoggedIn && this.props.userInforr?.id) {\r\n            this.loadNotifications();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Nếu người dùng vừa đăng nhập, tải thông báo\r\n        if ((!prevProps.isLoggedIn && this.props.isLoggedIn) || \r\n            (prevProps.userInforr?.id !== this.props.userInforr?.id && this.props.userInforr?.id)) {\r\n            this.loadNotifications();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Loại bỏ các event listeners khi component bị unmount\r\n        window.removeEventListener(\"scroll\", this.toggleVisibility);\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    // ===== Notification Methods =====\r\n    loadNotifications = async () => {\r\n        if (!this.props.userInforr?.id) return;\r\n        \r\n        this.setState({ isLoadingNotifications: true });\r\n        try {\r\n            const response = await getUserNotifications(this.props.userInforr.id);\r\n            \r\n            if (response && response.errCode === 0) {\r\n                this.setState({\r\n                    notifications: response.data,\r\n                    unreadCount: response.unreadCount || 0\r\n                });\r\n            } else {\r\n                console.error(\"Error loading notifications:\", response.errMessage);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error loading notifications:\", error);\r\n        } finally {\r\n            this.setState({ isLoadingNotifications: false });\r\n        }\r\n    };\r\n\r\n    handleNotificationClick = async (notification) => {\r\n        if (!notification.is_read) {\r\n            try {\r\n                const response = await markNotificationAsRead(notification.id, this.props.userInforr.id);\r\n                \r\n                if (response && response.errCode === 0) {\r\n                    // Cập nhật state để thay đổi UI\r\n                    this.setState(prevState => ({\r\n                        notifications: prevState.notifications.map(n => \r\n                            n.id === notification.id ? {...n, is_read: true} : n\r\n                        ),\r\n                        unreadCount: Math.max(0, prevState.unreadCount - 1)\r\n                    }));\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error marking notification as read:\", error);\r\n            }\r\n        }\r\n        \r\n        // Đóng dropdown thông báo\r\n        this.setState({ notificationMenuOpen: false });\r\n        \r\n        // Chuyển hướng nếu có link\r\n        if (notification.link) {\r\n            window.location.href = notification.link;\r\n        }\r\n    };\r\n\r\n    // Định dạng thời gian thông báo\r\n    formatNotificationTime = (timestamp) => {\r\n        const date = new Date(timestamp);\r\n        const now = new Date();\r\n        const diffInSeconds = Math.floor((now - date) / 1000);\r\n        \r\n        if (diffInSeconds < 60) {\r\n            return 'Vừa xong';\r\n        } else if (diffInSeconds < 3600) {\r\n            return `${Math.floor(diffInSeconds / 60)} phút trước`;\r\n        } else if (diffInSeconds < 86400) {\r\n            return `${Math.floor(diffInSeconds / 3600)} giờ trước`;\r\n        } else {\r\n            return date.toLocaleDateString('vi-VN');\r\n        }\r\n    };\r\n\r\n    // ===== Header Visibility Controls =====\r\n    toggleVisibility = () => {\r\n        // Hiển thị sticky header sau khi cuộn 100px\r\n        if (window.pageYOffset > 100) {\r\n            this.setState({ isVisible: true });\r\n        } else {\r\n            this.setState({ isVisible: false });\r\n        }\r\n    };\r\n\r\n    // ===== Menu Controls =====\r\n    toggleMenu = () => {\r\n        // Mở/đóng menu trên mobile\r\n        this.setState((prevState) => ({\r\n            menuOpen: !prevState.menuOpen,\r\n        }));\r\n    }\r\n\r\n    // ===== User Menu Controls =====\r\n    toggleUserMenu = () => {\r\n        // Mở/đóng dropdown menu người dùng\r\n        this.setState((prevState) => ({\r\n            userMenuOpen: !prevState.userMenuOpen,\r\n        }));\r\n    }\r\n    \r\n    // Toggle notification dropdown\r\n    toggleNotificationMenu = () => {\r\n        this.setState(prevState => ({\r\n            notificationMenuOpen: !prevState.notificationMenuOpen,\r\n        }));\r\n    }\r\n\r\n    handleClickOutside = (event) => {\r\n        // Đóng menu dropdown khi click ra ngoài\r\n        if (this.dropdownRef && this.dropdownRef.current && \r\n            !this.dropdownRef.current.contains(event.target)) {\r\n            this.setState({ userMenuOpen: false });\r\n        }\r\n        \r\n        if (this.notificationRef && this.notificationRef.current && \r\n            !this.notificationRef.current.contains(event.target)) {\r\n            this.setState({ notificationMenuOpen: false });\r\n        }\r\n    };\r\n\r\n    // ===== Render Method =====\r\n    render() {\r\n        const { \r\n            menuOpen, \r\n            isVisible, \r\n            userMenuOpen,\r\n            notificationMenuOpen,\r\n            notifications,\r\n            unreadCount,\r\n            isLoadingNotifications \r\n        } = this.state;\r\n        \r\n        const {\r\n            topbarEnable,\r\n            headerClass,\r\n            parentMenu,\r\n            headerNormalLogo,\r\n            headerStickyLogo,\r\n            isLoggedIn,\r\n            userInforr,\r\n            language,\r\n        } = this.props;\r\n\r\n        return (\r\n            <header\r\n                id=\"react-header\"\r\n                className={headerClass ? headerClass : \"react-header react-header-three\"}\r\n            >\r\n                <div className={isVisible ? \"header-area react-sticky\" : \"header-area\"}>\r\n                    {/* ===== Topbar Area ===== */}\r\n                    {/* Topbar code remains unchanged... */}\r\n\r\n                    {/* ===== Menu Area ===== */}\r\n                    <div className=\"menu-part\">\r\n                        <div className=\"container\">\r\n                            <div className=\"react-main-menu\">\r\n                                <nav>\r\n                                    {/* Logo & Mobile Menu Toggle */}\r\n                                    {/* This code remains unchanged... */}\r\n\r\n                                    {/* Main Menu Content */}\r\n                                    <div className={menuOpen ? \"react-inner-menus menu-open\" : \"react-inner-menus\"}>\r\n                                        {/* Navigation Items */}\r\n                                        <ul id=\"backmenu\" className=\"react-menus react-sub-shadow\">\r\n                                            <MenuItems parentMenu={parentMenu} />\r\n                                        </ul>\r\n\r\n                                        {/* User Actions Area */}\r\n                                        <div className=\"header-actions\">\r\n                                            {!isLoggedIn ? (\r\n                                                // Login Button for Non-authenticated Users\r\n                                                <div className=\"login-button\">\r\n                                                    <Link to=\"/login\">\r\n                                                        <i className=\"fas fa-sign-in-alt\"></i>{\" \"}\r\n                                                        Đăng nhập\r\n                                                    </Link>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {/* Notification Bell */}\r\n                                                    <div className=\"notification-dropdown\" ref={this.notificationRef}>\r\n                                                        <button \r\n                                                            className=\"notification-btn\" \r\n                                                            onClick={this.toggleNotificationMenu}\r\n                                                            aria-label=\"Notifications\"\r\n                                                        >\r\n                                                            <i className=\"fas fa-bell\"></i>\r\n                                                            {unreadCount > 0 && (\r\n                                                                <span className=\"notification-badge\">\r\n                                                                    {unreadCount > 99 ? '99+' : unreadCount}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </button>\r\n                                                        \r\n                                                        {/* Notification Dropdown Menu */}\r\n                                                        {notificationMenuOpen && (\r\n                                                            <div className=\"notification-dropdown-menu\">\r\n                                                                <div className=\"notification-header\">\r\n                                                                    <h5>Thông báo</h5>\r\n                                                                </div>\r\n                                                                \r\n                                                                <div className=\"notification-body\">\r\n                                                                    {isLoadingNotifications ? (\r\n                                                                        <div className=\"loading-notifications\">\r\n                                                                            <p>Đang tải thông báo...</p>\r\n                                                                        </div>\r\n                                                                    ) : notifications.length > 0 ? (\r\n                                                                        notifications.slice(0, 5).map((notification) => (\r\n                                                                            <div\r\n                                                                                key={notification.id}\r\n                                                                                className={`notification-item ${!notification.is_read ? \"unread\" : \"\"}`}\r\n                                                                                onClick={() => this.handleNotificationClick(notification)}\r\n                                                                            >\r\n                                                                                <div className=\"notification-icon\">\r\n                                                                                    {notification.type === \"NEW_EVENT\" && <i className=\"fas fa-calendar\"></i>}\r\n                                                                                    {notification.type === \"HELP_REQUEST\" && <i className=\"fas fa-hands-helping\"></i>}\r\n                                                                                    {notification.type === \"EVENT_UPDATED\" && <i className=\"fas fa-edit\"></i>}\r\n                                                                                    {notification.type === \"EVENT_SCORE\" && <i className=\"fas fa-star\"></i>}\r\n                                                                                    {![\"NEW_EVENT\", \"HELP_REQUEST\", \"EVENT_UPDATED\", \"EVENT_SCORE\"].includes(\r\n                                                                                        notification.type\r\n                                                                                    ) && <i className=\"fas fa-bell\"></i>}\r\n                                                                                </div>\r\n                                                                                <div className=\"notification-content\">\r\n                                                                                    <h6>{notification.title}</h6>\r\n                                                                                    <p>{notification.message}</p>\r\n                                                                                    <small>{this.formatNotificationTime(notification.created_at)}</small>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : (\r\n                                                                        <div className=\"no-notifications\">\r\n                                                                            <p>Không có thông báo nào</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                                \r\n                                                                <div className=\"notification-footer\">\r\n                                                                    <Link\r\n                                                                        to=\"/notifications\"\r\n                                                                        className=\"view-all\"\r\n                                                                        onClick={() => this.setState({ notificationMenuOpen: false })}\r\n                                                                    >\r\n                                                                        Xem tất cả thông báo\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    {/* User Dropdown */}\r\n                                                    <div className=\"user-dropdown\" ref={this.dropdownRef}>\r\n                                                        <div className=\"dropdown\">\r\n                                                            <button \r\n                                                                className=\"btn btn-secondary dropdown-toggle\" \r\n                                                                type=\"button\" \r\n                                                                onClick={this.toggleUserMenu}\r\n                                                                aria-label=\"User menu\"\r\n                                                            >\r\n                                                                {userInforr?.lastName || \"User\"}\r\n                                                                {userInforr?.image ? (\r\n                                                                    <img \r\n                                                                        src={userInforr.image} \r\n                                                                        alt=\"User Avatar\"\r\n                                                                        className=\"dropdown-avatar\"\r\n                                                                    />\r\n                                                                ) : (\r\n                                                                    <span className=\"dropdown-avatar-placeholder\">\r\n                                                                        {userInforr?.firstName?.charAt(0) || userInforr?.lastName?.charAt(0) || 'U'}\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </button>\r\n                                                            \r\n                                                            {/* User Dropdown Menu */}\r\n                                                            {/* Existing user dropdown code... */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\n// Redux Connection\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    userInforr: state.user.userInforr,\r\n    language: state.app.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    processLogout: () => dispatch(actions.processLogout()),\r\n    changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}