{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\5.font-end-react-fullstack\\\\React - Copy\\\\src\\\\containers\\\\System\\\\UserRedux.js\";\n// ===== IMPORTS =====\n// Core React and Redux imports\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // Utilities and Constants\n\nimport { languages } from \"../../utils/constant\";\nimport * as actions from \"../../../src/store/actions\"; // API Services\n\nimport { createUser, getAllUsers, deleteUser, updateUser } from \"../../services/userServices\"; // UI Components and Styles\n\nimport { FormattedMessage } from \"react-intl\";\nimport Lightbox from \"react-image-lightbox\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-image-lightbox/style.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./UserRedux.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserRedux extends Component {\n  // ===== COMPONENT INITIALIZATION =====\n  constructor(props) {\n    super(props);\n\n    this.handleOnchangeImage = async event => {\n      const file = event.target.files[0];\n\n      if (file) {\n        // Validate file type and size\n        const validTypes = ['image/jpeg', 'image/png', 'image/gif'];\n        const maxSize = 16 * 1024 * 1024; // 16MB\n\n        if (!validTypes.includes(file.type)) {\n          toast.error('Vui lòng chọn file ảnh (jpg, png, gif)');\n          return;\n        }\n\n        if (file.size > maxSize) {\n          toast.error('Kích thước ảnh tối đa 16MB');\n          return;\n        }\n\n        try {\n          const base64 = await this.getBase64(file);\n          const objectUrl = URL.createObjectURL(file);\n          this.setState({\n            previewImgURL: objectUrl,\n            avatar: base64\n          });\n        } catch (error) {\n          toast.error('Lỗi xử lý ảnh');\n          console.error('Error:', error);\n        }\n      }\n    };\n\n    this.getBase64 = file => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = () => resolve(reader.result);\n\n        reader.onerror = error => reject(error);\n      });\n    };\n\n    this.triggerFileInput = () => {\n      document.getElementById(\"previewImg\").click();\n    };\n\n    this.openPreviewImage = () => {\n      if (!this.state.previewImgURL) return;\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleOnSubmit = () => {\n      if (!this.checkVaildateInput()) return;\n      this.props.createNewUser({\n        email: this.state.email,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        address: this.state.address,\n        phoneNumber: this.state.phoneNumber,\n        gender: this.state.gender,\n        position: this.state.position,\n        roleId: this.state.role,\n        image: this.state.avatar\n      });\n    };\n\n    this.checkVaildateInput = () => {\n      let isVaild = true;\n      let errcheck = [\"email\", \"password\", \"firstName\", \"lastName\", \"address\", \"phoneNumber\", \"gender\", \"role\", \"position\", \"avatar\"];\n      const fieldNames = {\n        email: \"Email\",\n        password: \"Mật khẩu\",\n        firstName: \"Tên\",\n        lastName: \"Họ\",\n        address: \"Địa chỉ\",\n        phoneNumber: \"Số điện thoại\",\n        gender: \"Giới tính\",\n        role: \"Vai trò\",\n        position: \"Chức vụ\",\n        avatar: \"Ảnh đại diện\"\n      };\n\n      for (let i = 0; i < errcheck.length; i++) {\n        let key = errcheck[i];\n        let value = this.state[key];\n\n        if (!value) {\n          isVaild = false;\n          toast.error(`Vui lòng nhập ${fieldNames[key]}`);\n          break;\n        }\n      }\n\n      return isVaild;\n    };\n\n    this.onChangeInput = (event, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = event.target.value;\n      this.setState({ ...copyState\n      } // () => {\n      //     console.log(\"anhtonton\", this.state);\n      // }\n      );\n    };\n\n    this.handleDeleteUser = user => {\n      if (window.confirm(\"Bạn có chắc chắn muốn xóa người dùng này không?\")) {\n        this.props.deleteUser({\n          id: user.id,\n          firstName: user.firstName,\n          lastName: user.lastName\n        });\n      }\n    };\n\n    this.handleEditUser = user => {\n      // Set state for editing user\n      this.setState({\n        email: user.email,\n        password: \"********\",\n        // Thay đổi thành dấu *\n        firstName: user.firstName,\n        lastName: user.lastName,\n        address: user.address,\n        phoneNumber: user.phonenumber,\n        gender: user.gender,\n        role: user.roleId,\n        position: user.positionId,\n        avatar: user.image,\n        previewImgURL: user.image && user.image.startsWith('data:image') ? user.image : user.image ? `data:image/jpeg;base64,${user.image}` : '',\n        isEditing: true,\n        userEditId: user.id\n      }, () => {\n        this.scrollToEditForm();\n      });\n    };\n\n    this.handleSubmitEditUser = () => {\n      var _this$state$genderArr, _this$state$roleArr$, _this$state$positionA;\n\n      let {\n        firstName,\n        lastName,\n        address,\n        phoneNumber,\n        gender,\n        role,\n        position,\n        userEditId,\n        avatar\n      } = this.state;\n      this.props.editUser({\n        id: userEditId,\n        firstName: firstName,\n        lastName: lastName,\n        address: address,\n        phoneNumber: phoneNumber,\n        gender: gender,\n        roleId: role,\n        positionId: position,\n        image: avatar\n      });\n      console.log('check image', avatar); // reset state sau khi edit\n      // Reset form sau khi edit\n\n      this.setState({\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        address: \"\",\n        phoneNumber: \"\",\n        gender: ((_this$state$genderArr = this.state.genderArr[0]) === null || _this$state$genderArr === void 0 ? void 0 : _this$state$genderArr.key) || \"\",\n        role: ((_this$state$roleArr$ = this.state.roleArr[0]) === null || _this$state$roleArr$ === void 0 ? void 0 : _this$state$roleArr$.key) || \"\",\n        position: ((_this$state$positionA = this.state.positionArr[0]) === null || _this$state$positionA === void 0 ? void 0 : _this$state$positionA.key) || \"\",\n        avatar: \"\",\n        previewImgURL: \"\",\n        isEditing: false,\n        userEditId: null\n      });\n    };\n\n    this.scrollToEditForm = () => {\n      var _this$editFormRef$cur;\n\n      (_this$editFormRef$cur = this.editFormRef.current) === null || _this$editFormRef$cur === void 0 ? void 0 : _this$editFormRef$cur.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    };\n\n    this.editFormRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      // Arrays for select options\n      genderArr: [],\n      positionArr: [],\n      roleArr: [],\n      // Image handling\n      previewImgURL: \"\",\n      isOpen: false,\n      avatar: \"\",\n      // Form fields\n      email: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      phoneNumber: \"\",\n      gender: \"\",\n      role: \"\",\n      position: \"\",\n      // User management\n      arrUsers: [],\n      isEditing: false,\n      userEditId: null\n    };\n  } // ===== LIFECYCLE METHODS =====\n\n\n  async componentDidMount() {\n    // Initialize data from Redux\n    this.props.getGenderStart();\n    this.props.getPositionStart();\n    this.props.getRoleStart();\n    this.props.fetchAllUsers();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Handle updates for gender, position, and role data\n    this.handleGenderUpdate(prevProps);\n    this.handlePositionUpdate(prevProps);\n    this.handleRoleUpdate(prevProps); // Handle success and error messages\n\n    this.handleSuccessMessage(prevProps);\n    this.handleErrorMessage(prevProps);\n  } // ===== HELPER METHODS =====\n\n\n  handleGenderUpdate(prevProps) {\n    if (prevProps.genderRedux !== this.props.genderRedux) {\n      let arrGender = this.props.genderRedux;\n      this.setState({\n        genderArr: arrGender,\n        gender: arrGender && arrGender.length > 0 ? arrGender[0].key : \"\"\n      });\n    }\n  }\n\n  handlePositionUpdate(prevProps) {\n    if (prevProps.positionRedux !== this.props.positionRedux) {\n      let arrPosition = this.props.positionRedux;\n      this.setState({\n        positionArr: arrPosition,\n        position: arrPosition && arrPosition.length > 0 ? arrPosition[0].key : \"\"\n      });\n    }\n  }\n\n  handleRoleUpdate(prevProps) {\n    if (prevProps.roleRedux !== this.props.roleRedux) {\n      let arrRole = this.props.roleRedux;\n      this.setState({\n        roleArr: arrRole,\n        role: arrRole && arrRole.length > 0 ? arrRole[0].key : \"\"\n      });\n    }\n  }\n\n  handleSuccessMessage(prevProps) {\n    if (prevProps.success !== this.props.success) {\n      if (this.props.success && this.props.success.errCode === 0) {\n        var _this$state$genderArr2, _this$state$roleArr$2, _this$state$positionA2;\n\n        // Reset form\n        this.setState({\n          email: \"\",\n          password: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          address: \"\",\n          phoneNumber: \"\",\n          gender: ((_this$state$genderArr2 = this.state.genderArr[0]) === null || _this$state$genderArr2 === void 0 ? void 0 : _this$state$genderArr2.key) || \"\",\n          role: ((_this$state$roleArr$2 = this.state.roleArr[0]) === null || _this$state$roleArr$2 === void 0 ? void 0 : _this$state$roleArr$2.key) || \"\",\n          position: ((_this$state$positionA2 = this.state.positionArr[0]) === null || _this$state$positionA2 === void 0 ? void 0 : _this$state$positionA2.key) || \"\",\n          avatar: \"\",\n          previewImgURL: \"\"\n        });\n        toast.success(\"Tạo người dùng thành công!\"); // Refresh danh sách users\n\n        this.props.fetchAllUsers();\n      }\n    }\n  }\n\n  handleErrorMessage(prevProps) {\n    if (prevProps.error !== this.props.error && this.props.error) {\n      if (this.props.error.errCode === 1) {\n        toast.error(this.props.error.errMessage);\n      }\n    }\n  } // ===== IMAGE HANDLING =====\n\n\n  // ===== RENDER METHOD =====\n  render() {\n    let genders = this.state.genderArr;\n    let language = this.props.language;\n    let isLoading = this.props.isLoading;\n    let positions = this.state.positionArr;\n    let roles = this.state.roleArr;\n    let {\n      email,\n      password,\n      firstName,\n      lastName,\n      address,\n      phoneNumber,\n      gender,\n      role,\n      position,\n      avatar\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"manage-user.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-redux-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: isLoading === true ? \"Loading infomation\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: this.editFormRef,\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                id: \"manage-user.add-new-user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"email\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    className: \"form-control\",\n                    id: \"email\",\n                    placeholder: \"Email\",\n                    value: email,\n                    onChange: event => this.onChangeInput(event, \"email\"),\n                    disabled: this.state.isEditing // Thêm disabled\n                    ,\n                    style: {\n                      backgroundColor: this.state.isEditing ? \"#e9ecef\" : \"white\"\n                    } // Thêm style\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"password\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control\",\n                    id: \"password\",\n                    placeholder: \"Password\",\n                    value: password,\n                    onChange: event => this.onChangeInput(event, \"password\"),\n                    disabled: this.state.isEditing // Thêm disabled\n                    ,\n                    style: {\n                      backgroundColor: this.state.isEditing ? \"#e9ecef\" : \"white\"\n                    } // Thêm style\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"firstName\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.firstname\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"firstName\",\n                    placeholder: \"Firstname\",\n                    value: firstName,\n                    onChange: event => this.onChangeInput(event, \"firstName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"lastName\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.lastname\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"lastName\",\n                    placeholder: \"Lastname\",\n                    value: lastName,\n                    onChange: event => this.onChangeInput(event, \"lastName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"phonenumber\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.phonenumber\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 492,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"phonenumber\",\n                    placeholder: \"Phonenumber\",\n                    value: phoneNumber,\n                    onChange: event => this.onChangeInput(event, \"phoneNumber\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-9\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"address\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    id: \"address\",\n                    placeholder: \"1234 Main St\",\n                    value: address,\n                    onChange: event => this.onChangeInput(event, \"address\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"gender\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.gender\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 536,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"inputState\",\n                    className: \"form-control\",\n                    onChange: event => this.onChangeInput(event, \"gender\"),\n                    value: this.state.gender,\n                    children: genders && genders.length > 0 && genders.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: item.key,\n                        children: language === languages.VI ? item.valueVi : item.valueEn\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"position\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.position\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"inputState\",\n                    className: \"form-control\",\n                    onChange: event => this.onChangeInput(event, \"position\"),\n                    value: this.state.position,\n                    children: positions && positions.length > 0 && positions.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: item.key,\n                        children: language === languages.VI ? item.valueVi : item.valueEn\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 589,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"role\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.role\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"inputState\",\n                    className: \"form-control\",\n                    onChange: event => this.onChangeInput(event, \"role\"),\n                    value: this.state.role,\n                    children: roles && roles.length > 0 && roles.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: item.key,\n                        children: language === languages.VI ? item.valueVi : item.valueEn\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 625,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"avatar\",\n                    className: \"form-label\",\n                    children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                      id: \"manage-user.avatar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"previewImg\",\n                      type: \"file\",\n                      hidden: true,\n                      onChange: event => this.handleOnchangeImage(event, \"avatar\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-primary\",\n                      onClick: this.triggerFileInput,\n                      children: [\"T\\u1EA3i \\u1EA3nh\", /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-upload\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 657,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      onClick: () => this.openPreviewImage(),\n                      className: \"preview-image\",\n                      style: {\n                        backgroundImage: `url(${this.state.previewImgURL})`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: () => this.state.isEditing ? this.handleSubmitEditUser() : this.handleOnSubmit(),\n                children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n                  id: this.state.isEditing ? \"Edit\" : \"manage-user.submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-table-redux mt-4 \",\n              children: [this.props.isLoadingUsers && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                class: \"table table-striped table-hover table-bordered\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  class: \"table-dark custom-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: \"25%\"\n                      },\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: \"20%\"\n                      },\n                      children: \"Firstname\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 710,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: \"20%\"\n                      },\n                      children: \"Lastname\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 713,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: \"25%\"\n                      },\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: \"10%\"\n                      },\n                      children: \"Action\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 706,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: this.props.users && this.props.users.length > 0 ? this.props.users.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 731,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.firstName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 734,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.lastName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 737,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 740,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-warning mx-1\",\n                          onClick: () => this.handleEditUser(item),\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-pencil-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 752,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 744,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-danger mx-1\",\n                          onClick: () => this.handleDeleteUser(item),\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-trash\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 762,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 754,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 743,\n                        columnNumber: 61\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 57\n                    }, this);\n                  }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: \"5\",\n                      className: \"text-center\",\n                      children: \"Kh\\xF4ng c\\xF3 d\\u1EEF li\\u1EC7u\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 771,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }, this), this.state.isOpen === true && /*#__PURE__*/_jsxDEV(Lightbox, {\n        mainSrc: this.state.previewImgURL,\n        onCloseRequest: () => this.setState({\n          isOpen: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this);\n  }\n\n} // ===== REDUX CONNECTIONS =====\n\n\nconst mapStateToProps = state => ({\n  language: state.app.language,\n  genderRedux: state.admin.genders,\n  isLoading: state.admin.isLoading,\n  positionRedux: state.admin.positions,\n  roleRedux: state.admin.roles,\n  success: state.admin.success,\n  error: state.admin.error,\n  users: state.admin.users,\n  isLoadingUsers: state.admin.isLoadingUsers\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getGenderStart: () => dispatch(actions.fetchGenderStart()),\n  getPositionStart: () => dispatch(actions.fetchPositionStart()),\n  getRoleStart: () => dispatch(actions.fetchRoleStart()),\n  createNewUser: data => dispatch(actions.createNewUser(data)),\n  fetchAllUsers: () => dispatch(actions.fetchAllUsersStart()),\n  deleteUser: userId => dispatch(actions.deleteUserStart(userId)),\n  editUser: data => dispatch(actions.editUserStart(data))\n});","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React - Copy/src/containers/System/UserRedux.js"],"names":["React","Component","connect","languages","actions","createUser","getAllUsers","deleteUser","updateUser","FormattedMessage","Lightbox","ToastContainer","toast","UserRedux","constructor","props","handleOnchangeImage","event","file","target","files","validTypes","maxSize","includes","type","error","size","base64","getBase64","objectUrl","URL","createObjectURL","setState","previewImgURL","avatar","console","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","triggerFileInput","document","getElementById","click","openPreviewImage","state","isOpen","handleOnSubmit","checkVaildateInput","createNewUser","email","password","firstName","lastName","address","phoneNumber","gender","position","roleId","role","image","isVaild","errcheck","fieldNames","i","length","key","value","onChangeInput","id","copyState","handleDeleteUser","user","window","confirm","handleEditUser","phonenumber","positionId","startsWith","isEditing","userEditId","scrollToEditForm","handleSubmitEditUser","editUser","log","genderArr","roleArr","positionArr","editFormRef","current","scrollIntoView","behavior","block","createRef","arrUsers","componentDidMount","getGenderStart","getPositionStart","getRoleStart","fetchAllUsers","componentDidUpdate","prevProps","prevState","handleGenderUpdate","handlePositionUpdate","handleRoleUpdate","handleSuccessMessage","handleErrorMessage","genderRedux","arrGender","positionRedux","arrPosition","roleRedux","arrRole","success","errCode","errMessage","render","genders","language","isLoading","positions","roles","backgroundColor","map","item","index","VI","valueVi","valueEn","backgroundImage","isLoadingUsers","width","users","mapStateToProps","app","admin","mapDispatchToProps","dispatch","fetchGenderStart","fetchPositionStart","fetchRoleStart","data","fetchAllUsersStart","userId","deleteUserStart","editUserStart"],"mappings":"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","sourcesContent":["// ===== IMPORTS =====\r\n// Core React and Redux imports\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Utilities and Constants\r\nimport { languages } from \"../../utils/constant\";\r\nimport * as actions from \"../../../src/store/actions\";\r\n\r\n// API Services\r\nimport { createUser, getAllUsers, deleteUser, updateUser } from \"../../services/userServices\";\r\n\r\n// UI Components and Styles\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./UserRedux.scss\";\r\n\r\nclass UserRedux extends Component {\r\n    // ===== COMPONENT INITIALIZATION =====\r\n    constructor(props) {\r\n        super(props);\r\n        this.editFormRef = React.createRef();\r\n        this.state = {\r\n            // Arrays for select options\r\n            genderArr: [],\r\n            positionArr: [],\r\n            roleArr: [],\r\n            \r\n            // Image handling\r\n            previewImgURL: \"\",\r\n            isOpen: false,\r\n            avatar: \"\",\r\n            \r\n            // Form fields\r\n            email: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            phoneNumber: \"\",\r\n            gender: \"\",\r\n            role: \"\",\r\n            position: \"\",\r\n            \r\n            // User management\r\n            arrUsers: [],\r\n            isEditing: false,\r\n            userEditId: null,\r\n        };\r\n    }\r\n\r\n    // ===== LIFECYCLE METHODS =====\r\n    async componentDidMount() {\r\n        // Initialize data from Redux\r\n        this.props.getGenderStart();\r\n        this.props.getPositionStart();\r\n        this.props.getRoleStart();\r\n        this.props.fetchAllUsers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // Handle updates for gender, position, and role data\r\n        this.handleGenderUpdate(prevProps);\r\n        this.handlePositionUpdate(prevProps);\r\n        this.handleRoleUpdate(prevProps);\r\n        \r\n        // Handle success and error messages\r\n        this.handleSuccessMessage(prevProps);\r\n        this.handleErrorMessage(prevProps);\r\n    }\r\n\r\n    // ===== HELPER METHODS =====\r\n    handleGenderUpdate(prevProps) {\r\n        if (prevProps.genderRedux !== this.props.genderRedux) {\r\n            let arrGender = this.props.genderRedux;\r\n            this.setState({\r\n                genderArr: arrGender,\r\n                gender: arrGender && arrGender.length > 0 ? arrGender[0].key : \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    handlePositionUpdate(prevProps) {\r\n        if (prevProps.positionRedux !== this.props.positionRedux) {\r\n            let arrPosition = this.props.positionRedux;\r\n            this.setState({\r\n                positionArr: arrPosition,\r\n                position: arrPosition && arrPosition.length > 0 ? arrPosition[0].key : \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    handleRoleUpdate(prevProps) {\r\n        if (prevProps.roleRedux !== this.props.roleRedux) {\r\n            let arrRole = this.props.roleRedux;\r\n            this.setState({\r\n                roleArr: arrRole,\r\n                role: arrRole && arrRole.length > 0 ? arrRole[0].key : \"\",\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSuccessMessage(prevProps) {\r\n        if (prevProps.success !== this.props.success) {\r\n            if (this.props.success && this.props.success.errCode === 0) {\r\n                // Reset form\r\n                this.setState({\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    address: \"\",\r\n                    phoneNumber: \"\",\r\n                    gender: this.state.genderArr[0]?.key || \"\",\r\n                    role: this.state.roleArr[0]?.key || \"\",\r\n                    position: this.state.positionArr[0]?.key || \"\",\r\n                    avatar: \"\",\r\n                    previewImgURL: \"\",\r\n                });\r\n\r\n                toast.success(\"Tạo người dùng thành công!\");\r\n                // Refresh danh sách users\r\n                this.props.fetchAllUsers();\r\n            }\r\n        }\r\n    }\r\n\r\n    handleErrorMessage(prevProps) {\r\n        if (prevProps.error !== this.props.error && this.props.error) {\r\n            if (this.props.error.errCode === 1) {\r\n                toast.error(this.props.error.errMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ===== IMAGE HANDLING =====\r\n    handleOnchangeImage = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            // Validate file type and size\r\n            const validTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n            const maxSize = 16 * 1024 * 1024; // 16MB\r\n\r\n            if (!validTypes.includes(file.type)) {\r\n                toast.error('Vui lòng chọn file ảnh (jpg, png, gif)');\r\n                return;\r\n            }\r\n\r\n            if (file.size > maxSize) {\r\n                toast.error('Kích thước ảnh tối đa 16MB');\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const base64 = await this.getBase64(file);\r\n                const objectUrl = URL.createObjectURL(file);\r\n                this.setState({\r\n                    previewImgURL: objectUrl,\r\n                    avatar: base64\r\n                });\r\n            } catch (error) {\r\n                toast.error('Lỗi xử lý ảnh');\r\n                console.error('Error:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    };\r\n\r\n    triggerFileInput = () => {\r\n        document.getElementById(\"previewImg\").click();\r\n    };\r\n\r\n    // hiển thị ảnh khi ấn vào\r\n    openPreviewImage = () => {\r\n        if (!this.state.previewImgURL) return;\r\n        this.setState({ isOpen: true });\r\n    };\r\n\r\n    // ===== FORM HANDLING =====\r\n    handleOnSubmit = () => {\r\n        if (!this.checkVaildateInput()) return;\r\n        \r\n        this.props.createNewUser({\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            address: this.state.address,\r\n            phoneNumber: this.state.phoneNumber,\r\n            gender: this.state.gender,\r\n            position: this.state.position,\r\n            roleId: this.state.role,\r\n            image: this.state.avatar\r\n        });\r\n    };\r\n\r\n    // kiểm tra người dùng đã nhập đủ thông tin chưa\r\n    checkVaildateInput = () => {\r\n        let isVaild = true;\r\n        let errcheck = [\r\n            \"email\",\r\n            \"password\",\r\n            \"firstName\",\r\n            \"lastName\",\r\n            \"address\",\r\n            \"phoneNumber\",\r\n            \"gender\",\r\n            \"role\",\r\n            \"position\",\r\n            \"avatar\",\r\n        ];\r\n        const fieldNames = {\r\n            email: \"Email\",\r\n            password: \"Mật khẩu\",\r\n            firstName: \"Tên\",\r\n            lastName: \"Họ\",\r\n            address: \"Địa chỉ\",\r\n            phoneNumber: \"Số điện thoại\",\r\n            gender: \"Giới tính\",\r\n            role: \"Vai trò\",\r\n            position: \"Chức vụ\",\r\n            avatar: \"Ảnh đại diện\",\r\n        };\r\n        for (let i = 0; i < errcheck.length; i++) {\r\n            let key = errcheck[i];\r\n            let value = this.state[key];\r\n            if (!value) {\r\n                isVaild = false;\r\n                toast.error(`Vui lòng nhập ${fieldNames[key]}`);\r\n                break;\r\n            }\r\n        }\r\n        return isVaild;\r\n    };\r\n\r\n    // lấy giá trị khi nhập vào ở các ô lưu vào state\r\n    onChangeInput = (event, id) => {\r\n        let copyState = { ...this.state };\r\n        copyState[id] = event.target.value;\r\n        this.setState(\r\n            {\r\n                ...copyState,\r\n            }\r\n            // () => {\r\n            //     console.log(\"anhtonton\", this.state);\r\n            // }\r\n        );\r\n    };\r\n\r\n    // ===== USER MANAGEMENT =====\r\n    handleDeleteUser = (user) => {\r\n        if (window.confirm(\"Bạn có chắc chắn muốn xóa người dùng này không?\")) {\r\n            this.props.deleteUser({\r\n                id: user.id,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleEditUser = (user) => {\r\n        // Set state for editing user\r\n        this.setState({\r\n            email: user.email,\r\n            password: \"********\", // Thay đổi thành dấu *\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            address: user.address,\r\n            phoneNumber: user.phonenumber,\r\n            gender: user.gender,\r\n            role: user.roleId,\r\n            position: user.positionId,\r\n            avatar: user.image,\r\n            previewImgURL: user.image && user.image.startsWith('data:image') \r\n            ? user.image \r\n            : user.image \r\n                ? `data:image/jpeg;base64,${user.image}` \r\n                : '',\r\n            isEditing: true,\r\n            userEditId: user.id,\r\n        }, () => {\r\n            this.scrollToEditForm();\r\n        });\r\n    };\r\n\r\n    handleSubmitEditUser = () => {\r\n        let {\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            phoneNumber,\r\n            gender,\r\n            role,\r\n            position,\r\n            userEditId,\r\n            avatar\r\n        } = this.state;\r\n\r\n        this.props.editUser({\r\n            id: userEditId,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            address: address,\r\n            phoneNumber: phoneNumber,\r\n            gender: gender,\r\n            roleId: role,\r\n            positionId: position,\r\n            image: avatar\r\n        });\r\n        console.log('check image', avatar);\r\n        // reset state sau khi edit\r\n\r\n        // Reset form sau khi edit\r\n        this.setState({\r\n            email: \"\",\r\n            password: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            address: \"\",\r\n            phoneNumber: \"\",\r\n            gender: this.state.genderArr[0]?.key || \"\",\r\n            role: this.state.roleArr[0]?.key || \"\",\r\n            position: this.state.positionArr[0]?.key || \"\",\r\n            avatar: \"\",\r\n            previewImgURL: \"\",\r\n            isEditing: false,\r\n            userEditId: null,\r\n        });\r\n    };\r\n\r\n    // Thêm hàm scroll\r\n    scrollToEditForm = () => {\r\n        this.editFormRef.current?.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"start\",\r\n        });\r\n    };\r\n\r\n    // ===== RENDER METHOD =====\r\n    render() {\r\n        let genders = this.state.genderArr;\r\n        let language = this.props.language;\r\n        let isLoading = this.props.isLoading;\r\n        let positions = this.state.positionArr;\r\n        let roles = this.state.roleArr;\r\n        let {\r\n            email,\r\n            password,\r\n            firstName,\r\n            lastName,\r\n            address,\r\n            phoneNumber,\r\n            gender,\r\n            role,\r\n            position,\r\n            avatar,\r\n        } = this.state;\r\n        return (\r\n            <div className=\"manage-user\">\r\n                <div className=\"title\">\r\n                    <FormattedMessage id=\"manage-user.title\" />\r\n                </div>\r\n                <div className=\"user-redux-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"text-center\">\r\n                            {isLoading === true ? \"Loading infomation\" : \"\"}\r\n                        </div>\r\n                        <div ref={this.editFormRef} className=\"row\">\r\n                            <div className=\"mb-3\">\r\n                                <FormattedMessage id=\"manage-user.add-new-user\" />\r\n                            </div>\r\n                            <form>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"email\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.email\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            id=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            value={email}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"email\"\r\n                                                )\r\n                                            }\r\n                                            disabled={this.state.isEditing} // Thêm disabled\r\n                                            style={{\r\n                                                backgroundColor: this.state\r\n                                                    .isEditing\r\n                                                    ? \"#e9ecef\"\r\n                                                    : \"white\",\r\n                                            }} // Thêm style\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"password\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.password\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            value={password}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"password\"\r\n                                                )\r\n                                            }\r\n                                            disabled={this.state.isEditing} // Thêm disabled\r\n                                            style={{\r\n                                                backgroundColor: this.state\r\n                                                    .isEditing\r\n                                                    ? \"#e9ecef\"\r\n                                                    : \"white\",\r\n                                            }} // Thêm style\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"firstName\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.firstname\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"firstName\"\r\n                                            placeholder=\"Firstname\"\r\n                                            value={firstName}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"firstName\"\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"lastName\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.lastname\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"lastName\"\r\n                                            placeholder=\"Lastname\"\r\n                                            value={lastName}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"lastName\"\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"phonenumber\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.phonenumber\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"phonenumber\"\r\n                                            placeholder=\"Phonenumber\"\r\n                                            value={phoneNumber}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"phoneNumber\"\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <label\r\n                                            htmlFor=\"address\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.address\" />\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"address\"\r\n                                            placeholder=\"1234 Main St\"\r\n                                            value={address}\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"address\"\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"gender\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.gender\" />\r\n                                        </label>\r\n                                        <select\r\n                                            id=\"inputState\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"gender\"\r\n                                                )\r\n                                            }\r\n                                            value={this.state.gender}\r\n                                        >\r\n                                            {genders &&\r\n                                                genders.length > 0 &&\r\n                                                genders.map((item, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            key={index}\r\n                                                            value={item.key}\r\n                                                        >\r\n                                                            {language ===\r\n                                                            languages.VI\r\n                                                                ? item.valueVi\r\n                                                                : item.valueEn}\r\n                                                        </option>\r\n                                                    );\r\n                                                })}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"position\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.position\" />\r\n                                        </label>\r\n                                        <select\r\n                                            id=\"inputState\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"position\"\r\n                                                )\r\n                                            }\r\n                                            value={this.state.position}\r\n                                        >\r\n                                            {positions &&\r\n                                                positions.length > 0 &&\r\n                                                positions.map((item, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            key={index}\r\n                                                            value={item.key}\r\n                                                        >\r\n                                                            {language ===\r\n                                                            languages.VI\r\n                                                                ? item.valueVi\r\n                                                                : item.valueEn}\r\n                                                        </option>\r\n                                                    );\r\n                                                })}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"role\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.role\" />\r\n                                        </label>\r\n                                        <select\r\n                                            id=\"inputState\"\r\n                                            className=\"form-control\"\r\n                                            onChange={(event) =>\r\n                                                this.onChangeInput(\r\n                                                    event,\r\n                                                    \"role\"\r\n                                                )\r\n                                            }\r\n                                            value={this.state.role}\r\n                                        >\r\n                                            {roles &&\r\n                                                roles.length > 0 &&\r\n                                                roles.map((item, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            key={index}\r\n                                                            value={item.key}\r\n                                                        >\r\n                                                            {language ===\r\n                                                            languages.VI\r\n                                                                ? item.valueVi\r\n                                                                : item.valueEn}\r\n                                                        </option>\r\n                                                    );\r\n                                                })}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                        <label\r\n                                            htmlFor=\"avatar\"\r\n                                            className=\"form-label\"\r\n                                        >\r\n                                            <FormattedMessage id=\"manage-user.avatar\" />\r\n                                        </label>\r\n                                        <div>\r\n                                            <input\r\n                                                id=\"previewImg\"\r\n                                                type=\"file\"\r\n                                                hidden\r\n                                                onChange={(event) =>\r\n                                                    this.handleOnchangeImage(\r\n                                                        event,\r\n                                                        \"avatar\"\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-primary\"\r\n                                                onClick={this.triggerFileInput}\r\n                                            >\r\n                                                Tải ảnh\r\n                                                <i className=\"fas fa-upload\"></i>\r\n                                            </button>\r\n                                            <div\r\n                                                onClick={() =>\r\n                                                    this.openPreviewImage()\r\n                                                }\r\n                                                className=\"preview-image\"\r\n                                                style={{\r\n                                                    backgroundImage: `url(${this.state.previewImgURL})`,\r\n                                                }}\r\n                                            ></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() =>\r\n                                        this.state.isEditing\r\n                                            ? this.handleSubmitEditUser()\r\n                                            : this.handleOnSubmit()\r\n                                    }\r\n                                >\r\n                                    <FormattedMessage\r\n                                        id={\r\n                                            this.state.isEditing\r\n                                                ? \"Edit\"\r\n                                                : \"manage-user.submit\"\r\n                                        }\r\n                                    />\r\n                                </button>\r\n                            </form>\r\n\r\n                            {/* hiển thị danh sách user */}\r\n                            <div className=\"user-table-redux mt-4 \">\r\n                                {this.props.isLoadingUsers && (\r\n                                    <div className=\"text-center\">\r\n                                        <span>Đang tải dữ liệu...</span>\r\n                                    </div>\r\n                                )}\r\n                                <table class=\"table table-striped table-hover table-bordered\">\r\n                                    <thead class=\"table-dark custom-header\">\r\n                                        <tr>\r\n                                            <th style={{ width: \"25%\" }}>\r\n                                                Email\r\n                                            </th>\r\n                                            <th style={{ width: \"20%\" }}>\r\n                                                Firstname\r\n                                            </th>\r\n                                            <th style={{ width: \"20%\" }}>\r\n                                                Lastname\r\n                                            </th>\r\n                                            <th style={{ width: \"25%\" }}>\r\n                                                Address\r\n                                            </th>\r\n                                            <th style={{ width: \"10%\" }}>\r\n                                                Action\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {this.props.users &&\r\n                                        this.props.users.length > 0 ? (\r\n                                            this.props.users.map(\r\n                                                (item, index) => {\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            <td>\r\n                                                                {item.email}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {item.firstName}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {item.lastName}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {item.address}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <button\r\n                                                                    className=\"btn btn-warning mx-1\"\r\n                                                                    onClick={() =>\r\n                                                                        this.handleEditUser(\r\n                                                                            item\r\n                                                                        )\r\n                                                                    }\r\n                                                                >\r\n                                                                    <i className=\"fas fa-pencil-alt\"></i>\r\n                                                                </button>\r\n                                                                <button\r\n                                                                    className=\"btn btn-danger mx-1\"\r\n                                                                    onClick={() =>\r\n                                                                        this.handleDeleteUser(\r\n                                                                            item\r\n                                                                        )\r\n                                                                    }\r\n                                                                >\r\n                                                                    <i className=\"fas fa-trash\"></i>\r\n                                                                </button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                }\r\n                                            )\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td\r\n                                                    colSpan=\"5\"\r\n                                                    className=\"text-center\"\r\n                                                >\r\n                                                    Không có dữ liệu\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isOpen === true && (\r\n                    <Lightbox\r\n                        mainSrc={this.state.previewImgURL}\r\n                        onCloseRequest={() =>\r\n                            this.setState({\r\n                                isOpen: false,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ===== REDUX CONNECTIONS =====\r\nconst mapStateToProps = (state) => ({\r\n    language: state.app.language,\r\n    genderRedux: state.admin.genders,\r\n    isLoading: state.admin.isLoading,\r\n    positionRedux: state.admin.positions,\r\n    roleRedux: state.admin.roles,\r\n    success: state.admin.success,\r\n    error: state.admin.error,\r\n    users: state.admin.users,\r\n    isLoadingUsers: state.admin.isLoadingUsers,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getGenderStart: () => dispatch(actions.fetchGenderStart()),\r\n    getPositionStart: () => dispatch(actions.fetchPositionStart()),\r\n    getRoleStart: () => dispatch(actions.fetchRoleStart()),\r\n    createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n    fetchAllUsers: () => dispatch(actions.fetchAllUsersStart()),\r\n    deleteUser: (userId) => dispatch(actions.deleteUserStart(userId)),\r\n    editUser: (data) => dispatch(actions.editUserStart(data)),\r\n});"]},"metadata":{},"sourceType":"module"}