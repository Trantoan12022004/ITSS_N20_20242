{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\5.font-end-react-fullstack\\\\React\\\\src\\\\containers\\\\App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ConnectedRouter as Router } from \"connected-react-router\";\nimport { history } from \"../redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport CustomScrollbars from \"../components/CustomScrollbars\";\nimport { userIsAuthenticated, userIsNotAuthenticated } from \"../hoc/authentication\";\nimport { path } from \"../utils\";\nimport Home from \"../routes/Home\"; // import Login from '../routes/Login';\n\nimport Login from \"./Auth/Login\";\nimport Header from \"./Header/Header\";\nimport System from \"../routes/System\";\nimport { CustomToastCloseButton } from \"../components/CustomToast\";\nimport HomePage from \"./HomePage/HomePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePersistorState = () => {\n      const {\n        persistor\n      } = this.props;\n      let {\n        bootstrapped\n      } = persistor.getState();\n\n      if (bootstrapped) {\n        if (this.props.onBeforeLift) {\n          Promise.resolve(this.props.onBeforeLift()).then(() => this.setState({\n            bootstrapped: true\n          })).catch(() => this.setState({\n            bootstrapped: true\n          }));\n        } else {\n          this.setState({\n            bootstrapped: true\n          });\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handlePersistorState();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        history: history,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-container\",\n          children: [this.props.isLoggedIn && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-container\",\n            children: /*#__PURE__*/_jsxDEV(CustomScrollbars, {\n              style: h50,\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  path: path.HOME,\n                  exact: true,\n                  component: Home\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: path.LOGIN,\n                  component: userIsNotAuthenticated(Login)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: path.SYSTEM,\n                  component: userIsAuthenticated(System)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: path.HOMEPAGE,\n                  component: HomePage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n            className: \"toast-container\",\n            toastClassName: \"toast-item\",\n            bodyClassName: \"toast-item-body\",\n            autoClose: false,\n            hideProgressBar: true,\n            pauseOnHover: false,\n            pauseOnFocusLoss: true,\n            closeOnClick: false,\n            draggable: false,\n            closeButton: /*#__PURE__*/_jsxDEV(CustomToastCloseButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    started: state.app.started,\n    isLoggedIn: state.user.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React/src/containers/App.js"],"names":["React","Component","Fragment","connect","Route","Switch","ConnectedRouter","Router","history","ToastContainer","CustomScrollbars","userIsAuthenticated","userIsNotAuthenticated","path","Home","Login","Header","System","CustomToastCloseButton","HomePage","App","handlePersistorState","persistor","props","bootstrapped","getState","onBeforeLift","Promise","resolve","then","setState","catch","componentDidMount","render","isLoggedIn","h50","HOME","LOGIN","SYSTEM","HOMEPAGE","mapStateToProps","state","started","app","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport { history } from \"../redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport CustomScrollbars from \"../components/CustomScrollbars\";\r\nimport {\r\n    userIsAuthenticated,\r\n    userIsNotAuthenticated,\r\n} from \"../hoc/authentication\";\r\n\r\nimport { path } from \"../utils\";\r\n\r\nimport Home from \"../routes/Home\";\r\n// import Login from '../routes/Login';\r\nimport Login from \"./Auth/Login\";\r\nimport Header from \"./Header/Header\";\r\nimport System from \"../routes/System\";\r\n\r\nimport { CustomToastCloseButton } from \"../components/CustomToast\";\r\nimport HomePage from \"./HomePage/HomePage\";\r\nclass App extends Component {\r\n    handlePersistorState = () => {\r\n        const { persistor } = this.props;\r\n        let { bootstrapped } = persistor.getState();\r\n        if (bootstrapped) {\r\n            if (this.props.onBeforeLift) {\r\n                Promise.resolve(this.props.onBeforeLift())\r\n                    .then(() => this.setState({ bootstrapped: true }))\r\n                    .catch(() => this.setState({ bootstrapped: true }));\r\n            } else {\r\n                this.setState({ bootstrapped: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handlePersistorState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Router history={history}>\r\n                    <div className=\"main-container\">\r\n                        {this.props.isLoggedIn && <Header />}\r\n\r\n                        <div className=\"content-container\">\r\n                            <CustomScrollbars style={h50}>\r\n                                <Switch>\r\n                                    <Route\r\n                                        path={path.HOME}\r\n                                        exact\r\n                                        component={Home}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.LOGIN}\r\n                                        component={userIsNotAuthenticated(\r\n                                            Login\r\n                                        )}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.SYSTEM}\r\n                                        component={userIsAuthenticated(System)}\r\n                                    />\r\n                                    <Route\r\n                                        path={path.HOMEPAGE}\r\n                                        component={HomePage}\r\n                                    />\r\n                                </Switch>\r\n                            </CustomScrollbars>\r\n                        </div>\r\n\r\n                        <ToastContainer\r\n                            className=\"toast-container\"\r\n                            toastClassName=\"toast-item\"\r\n                            bodyClassName=\"toast-item-body\"\r\n                            autoClose={false}\r\n                            hideProgressBar={true}\r\n                            pauseOnHover={false}\r\n                            pauseOnFocusLoss={true}\r\n                            closeOnClick={false}\r\n                            draggable={false}\r\n                            closeButton={<CustomToastCloseButton />}\r\n                        />\r\n                    </div>\r\n                </Router>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        started: state.app.started,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}