{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\5.font-end-react-fullstack\\\\React\\\\src\\\\containers\\\\System\\\\UserManage.js\";\nimport React, { Component } from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport \"./UserManage.scss\";\nimport { getAllUsers, deleteUser, updateUser } from \"../../services/userServices\";\nimport ModalUser from \"./ModalUser\"; // Import ModalUser\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserManage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAllUsers = async () => {\n      let response = await getAllUsers(\"ALL\");\n\n      if (response && response.data && response.data.errCode === 0) {\n        this.setState({\n          arrUsers: response.data.users\n        });\n      }\n    };\n\n    this.handleDeleteUser = async userId => {\n      let response = await deleteUser(userId);\n\n      if (response && response.data.errCode === 0) {\n        await this.fetchAllUsers();\n      } else {\n        alert(response.data.errMessage);\n      }\n    };\n\n    this.handleEditUser = user => {\n      this.setState({\n        userIdToEdit: user.id,\n        userEditData: {\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          address: user.address\n        },\n        showModal: true\n      });\n    };\n\n    this.handleChangeUserEditData = event => {\n      // Lấy giá trị từ trường nhập liệu\n      let inputName = event.target.name;\n      let inputValue = event.target.value; // Tạo 1 bản sao cho obj userEditData\n\n      let updateUserEditData = { ...this.state.userEditData\n      }; // Cập nhập lại giá trị nhập vào so với dữ liệu ban đầu\n\n      updateUserEditData[inputName] = inputValue; // Cập nhật lại state\n\n      this.setState({\n        userEditData: updateUserEditData\n      });\n    };\n\n    this.handleSaveUserEdit = async () => {\n      // lấy dữ liệu từ state\n      let {\n        userIdToEdit,\n        userEditData\n      } = this.state; // Tạo đối tượng dữ liệu ID và thông tin người dùng\n\n      let data = {\n        id: userIdToEdit,\n        ...userEditData\n      }; // Gửi yêu cầu thông tin người dùng lên server\n\n      let response = await updateUser(data); // Kiểm tra phản hồi từ sever\n\n      if (response && response.data.errCode === 0) {\n        await this.fetchAllUsers(); // reset lại state\n\n        this.setState({\n          userIdToEdit: null,\n          userEditData: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            address: \"\"\n          },\n          showModal: false\n        });\n      } else {\n        alert(response.data.errMessage);\n      }\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.state = {\n      arrUsers: [],\n      userIdToEdit: null,\n      userEditData: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        address: \"\"\n      },\n      showModal: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchAllUsers();\n  }\n\n  render() {\n    let {\n      arrUsers,\n      userEditData,\n      showModal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title text-center\",\n        children: \"Manage user with anhtonton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-table mt-4 mx-3\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-hover table-bordered\",\n          id: \"customers\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark custom-header\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"25%\"\n                },\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"20%\"\n                },\n                children: \"Firstname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"20%\"\n                },\n                children: \"Lastname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"25%\"\n                },\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: \"10%\"\n                },\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: arrUsers && arrUsers.length > 0 && arrUsers.map((user, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn\",\n                    onClick: () => this.handleEditUser(user),\n                    children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn\",\n                    onClick: () => this.handleDeleteUser(user.id),\n                    children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalUser, {\n        children: [\"show = \", show]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);","map":{"version":3,"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React/src/containers/System/UserManage.js"],"names":["React","Component","FaEdit","FaTrash","connect","getAllUsers","deleteUser","updateUser","ModalUser","UserManage","constructor","props","fetchAllUsers","response","data","errCode","setState","arrUsers","users","handleDeleteUser","userId","alert","errMessage","handleEditUser","user","userIdToEdit","id","userEditData","firstName","lastName","email","address","showModal","handleChangeUserEditData","event","inputName","target","name","inputValue","value","updateUserEditData","state","handleSaveUserEdit","handleCloseModal","componentDidMount","render","width","length","map","index","show","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./UserManage.scss\";\r\nimport {\r\n    getAllUsers,\r\n    deleteUser,\r\n    updateUser,\r\n} from \"../../services/userServices\";\r\nimport ModalUser from \"./ModalUser\"; // Import ModalUser\r\nclass UserManage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            userIdToEdit: null,\r\n            userEditData: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                address: \"\",\r\n            },\r\n            showModal: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchAllUsers();\r\n    }\r\n\r\n    fetchAllUsers = async () => {\r\n        let response = await getAllUsers(\"ALL\");\r\n        if (response && response.data && response.data.errCode === 0) {\r\n            this.setState({\r\n                arrUsers: response.data.users,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteUser = async (userId) => {\r\n        let response = await deleteUser(userId);\r\n        if (response && response.data.errCode === 0) {\r\n            await this.fetchAllUsers();\r\n        } else {\r\n            alert(response.data.errMessage);\r\n        }\r\n    };\r\n\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            userIdToEdit: user.id,\r\n            userEditData: {\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                email: user.email,\r\n                address: user.address,\r\n            },\r\n            showModal: true,\r\n        });\r\n    };\r\n\r\n    handleChangeUserEditData = (event) => {\r\n        // Lấy giá trị từ trường nhập liệu\r\n        let inputName = event.target.name;\r\n        let inputValue = event.target.value;\r\n        // Tạo 1 bản sao cho obj userEditData\r\n        let updateUserEditData = { ...this.state.userEditData };\r\n        // Cập nhập lại giá trị nhập vào so với dữ liệu ban đầu\r\n        updateUserEditData[inputName] = inputValue;\r\n        // Cập nhật lại state\r\n        this.setState({\r\n            userEditData: updateUserEditData,\r\n        });\r\n    };\r\n\r\n    handleSaveUserEdit = async () => {\r\n        // lấy dữ liệu từ state\r\n        let { userIdToEdit, userEditData } = this.state;\r\n        // Tạo đối tượng dữ liệu ID và thông tin người dùng\r\n        let data = {\r\n            id: userIdToEdit,\r\n            ...userEditData,\r\n        };\r\n        // Gửi yêu cầu thông tin người dùng lên server\r\n        let response = await updateUser(data);\r\n        // Kiểm tra phản hồi từ sever\r\n        if (response && response.data.errCode === 0) {\r\n            await this.fetchAllUsers();\r\n            // reset lại state\r\n            this.setState({\r\n                userIdToEdit: null,\r\n                userEditData: {\r\n                    firstName: \"\",\r\n                    lastName: \"\",\r\n                    email: \"\",\r\n                    address: \"\",\r\n                },\r\n                showModal: false,\r\n            });\r\n        } else {\r\n            alert(response.data.errMessage);\r\n        }\r\n    };\r\n    handleCloseModal = () => {\r\n        this.setState({\r\n            showModal: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { arrUsers, userEditData, showModal } = this.state;\r\n        return (\r\n            <div className=\"user-center\">\r\n                <div className=\"title text-center\">\r\n                    Manage user with anhtonton\r\n                </div>\r\n                <div className=\"user-table mt-4 mx-3\">\r\n                    <table\r\n                        className=\"table table-striped table-hover table-bordered\"\r\n                        id=\"customers\"\r\n                    >\r\n                        <thead className=\"thead-dark custom-header\">\r\n                            <tr>\r\n                                <th style={{ width: \"25%\" }}>Email</th>\r\n                                <th style={{ width: \"20%\" }}>Firstname</th>\r\n                                <th style={{ width: \"20%\" }}>Lastname</th>\r\n                                <th style={{ width: \"25%\" }}>Address</th>\r\n                                <th style={{ width: \"10%\" }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {arrUsers &&\r\n                                arrUsers.length > 0 &&\r\n                                arrUsers.map((user, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.firstName}</td>\r\n                                            <td>{user.lastName}</td>\r\n                                            <td>{user.address}</td>\r\n                                            <td>\r\n                                                <button\r\n                                                    className=\"btn\"\r\n                                                    onClick={() =>\r\n                                                        this.handleEditUser(\r\n                                                            user\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <FaEdit />\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"btn\"\r\n                                                    onClick={() =>\r\n                                                        this.handleDeleteUser(\r\n                                                            user.id\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <FaTrash />\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <ModalUser>\r\n                    show = {show}\r\n                </ModalUser>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n"]},"metadata":{},"sourceType":"module"}