{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trant\\\\Documents\\\\L\\u1EADp Tr\\xECnh Web\\\\5.font-end-react-fullstack\\\\React - Copy\\\\src\\\\containers\\\\System\\\\MarkdownEditor.js\";\nimport React, { Component } from \"react\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { createMarkdown } from \"../../services/userServices\";\nimport { languages } from \"../../utils/constant\";\nimport * as actions from \"../../../src/store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt();\nclass MarkdownEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.buildDoctorOptions = doctors => {\n      return doctors.map(doctor => ({\n        value: doctor.doctorId\n      }));\n    };\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentMarkdown: text,\n        contentHTML: html\n      });\n    };\n    this.handleSaveContent = async () => {\n      console.log('check state', this.state);\n      try {\n        let response = await createMarkdown({\n          contentHTML: this.state.contentHTML,\n          contentMarkdown: this.state.contentMarkdown,\n          description: this.state.description,\n          doctorId: this.props.doctorId\n        });\n        console.log('check response', response);\n        if (response && response.data.errCode === 0) {\n          toast.success(\"Save content succeed!\");\n        } else {\n          toast.error(response.errMessage);\n        }\n      } catch (e) {\n        console.log(e);\n        toast.error(\"Error saving content\");\n      }\n    };\n    this.state = {\n      contentMarkdown: \"\",\n      contentHTML: \"\",\n      description: \"\",\n      doctorId: \"\",\n      hasData: false,\n      selectedDoctor: null\n    };\n  }\n  componentDidMount() {\n    this.props.fetchAllDoctors();\n  }\n  render() {\n    const {\n      isLoading,\n      allDoctors,\n      language\n    } = this.props;\n    console.log(\"check alldoctors\", allDoctors);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"markdown-editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: \"500px\"\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange,\n          value: this.state.contentMarkdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"description-input mt-3 col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleFormControlTextarea1\",\n          class: \"form-label\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          rows: \"3\",\n          value: this.state.description,\n          onChange: e => this.setState({\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: this.handleSaveContent,\n        children: \"Save Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    language: state.app.language,\n    isLoggedIn: state.user.isLoggedIn,\n    allDoctors: state.admin.allDoctors\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllDoctors: () => dispatch(actions.fetchAllDoctors())\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);","map":{"version":3,"names":["React","Component","MarkdownIt","MdEditor","connect","toast","createMarkdown","languages","actions","jsxDEV","_jsxDEV","mdParser","MarkdownEditor","constructor","props","buildDoctorOptions","doctors","map","doctor","value","doctorId","handleEditorChange","html","text","setState","contentMarkdown","contentHTML","handleSaveContent","console","log","state","response","description","data","errCode","success","error","errMessage","e","hasData","selectedDoctor","componentDidMount","fetchAllDoctors","render","isLoading","allDoctors","language","className","children","style","height","renderHTML","onChange","fileName","_jsxFileName","lineNumber","columnNumber","class","for","rows","target","onClick","mapStateToProps","app","isLoggedIn","user","admin","mapDispatchToProps","dispatch"],"sources":["C:/Users/Trant/Documents/Lập Trình Web/5.font-end-react-fullstack/React - Copy/src/containers/System/MarkdownEditor.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport MarkdownIt from \"markdown-it\";\r\nimport MdEditor from \"react-markdown-editor-lite\";\r\nimport \"react-markdown-editor-lite/lib/index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createMarkdown } from \"../../services/userServices\";\r\nimport { languages } from \"../../utils/constant\";\r\nimport * as actions from \"../../../src/store/actions\";\r\n\r\nconst mdParser = new MarkdownIt();\r\n\r\nclass MarkdownEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            contentMarkdown: \"\",\r\n            contentHTML: \"\",\r\n            description: \"\",\r\n            doctorId: \"\",\r\n            hasData: false,\r\n            selectedDoctor: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllDoctors();\r\n    }\r\n\r\n    buildDoctorOptions = (doctors) => {\r\n        return doctors.map(doctor => ({\r\n            value: doctor.doctorId,\r\n        }))\r\n    }\r\n\r\n    handleEditorChange = ({ html, text }) => {\r\n        this.setState({\r\n            contentMarkdown: text,\r\n            contentHTML: html,\r\n        });\r\n    };\r\n    handleSaveContent = async () => {\r\n    console.log('check state', this.state)\r\n\r\n        try {\r\n            let response = await createMarkdown({\r\n                contentHTML: this.state.contentHTML,\r\n                contentMarkdown: this.state.contentMarkdown,\r\n                description: this.state.description,\r\n                doctorId: this.props.doctorId,\r\n            });\r\n            console.log('check response', response)\r\n            if (response && response.data.errCode === 0) {\r\n                toast.success(\"Save content succeed!\");\r\n            } else {\r\n                toast.error(response.errMessage);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            toast.error(\"Error saving content\");\r\n        }\r\n    };\r\n    render() {\r\n        const { isLoading, allDoctors, language } = this.props;\r\n        console.log(\"check alldoctors\", allDoctors);\r\n        return (\r\n            <div className=\"markdown-editor-container\">\r\n                <div className=\"markdown-editor\">\r\n                    <MdEditor\r\n                        style={{ height: \"500px\" }}\r\n                        renderHTML={(text) => mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                        value={this.state.contentMarkdown}\r\n                    />\r\n                </div>\r\n                <div class=\"description-input mt-3 col-6\">\r\n                    <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n                        Description:\r\n                    </label>\r\n                    <textarea\r\n                        class=\"form-control\"\r\n                        rows=\"3\"\r\n                        value={this.state.description}\r\n                        onChange={(e) =>\r\n                            \r\n                            this.setState({ description: e.target.value })\r\n                        }\r\n                    ></textarea>\r\n                </div>\r\n\r\n\r\n                <button\r\n                    className=\"btn btn-primary mt-3\"\r\n                    onClick={this.handleSaveContent}\r\n                    \r\n                >\r\n                    Save Content\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        language: state.app.language,\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        allDoctors: state.admin.allDoctors,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAllDoctors: () => dispatch(actions.fetchAllDoctors()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkdownEditor);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}