{"ast":null,"code":"import axios from \"axios\";\nconst createEvent = data => {\n  return axios.post(`http://localhost:2004/api/event/create`, data);\n};\nconst createEventDescription = data => {\n  return axios.post(`http://localhost:2004/api/event-description/create`, data);\n};\nconst getAllEvents = () => {\n  return axios.get(`http://localhost:2004/api/events/get-all`);\n};\nconst getRecentEvents = () => {\n  return axios.get(`http://localhost:2004/api/events/get-recent`);\n};\n\n// nhớ sửa lại\nconst registerEvent = data => {\n  return axios.post(`http://localhost:2004/api/event/register`, data);\n};\nconst getEventById = id => {\n  return axios.get(`http://localhost:2004/api/event/${id}`);\n};\nconst getEventRegistrationsById = id => {\n  return axios.get(`http://localhost:2004/api/events/registrations/${id}`);\n};\nconst updateEventRegistration = data => {\n  return axios.post(`http://localhost:2004/api/events/registration-update`, data);\n};\nconst deleteEventRegistration = data => {\n  return axios.post(`http://localhost:2004/api/events/registration-delete`, data);\n};\nconst deleteEvent = id => {\n  return axios.delpostete(`http://localhost:2004/api/event/delete`);\n};\nconst updateEvent = data => {\n  return axios.post(`http://localhost:2004/api/event/update`, data);\n};\nconst sendEventNotification = data => {\n  return axios.post(`http://localhost:2004/api/notifications/send-event`, data);\n};\n\n// router.post(\"/api/events/registration/:id\", eventController.updateEventRegistration);\nexport { createEvent, createEventDescription, getAllEvents, getRecentEvents, registerEvent, getEventById, getEventRegistrationsById, updateEventRegistration, deleteEventRegistration, deleteEvent, updateEvent, sendEventNotification };","map":{"version":3,"names":["axios","createEvent","data","post","createEventDescription","getAllEvents","get","getRecentEvents","registerEvent","getEventById","id","getEventRegistrationsById","updateEventRegistration","deleteEventRegistration","deleteEvent","delpostete","updateEvent","sendEventNotification"],"sources":["C:/Users/Trant/Documents/Lập Trình Web/CTES WEB/React - Copy/src/services/eventServices.js"],"sourcesContent":["import axios from \"axios\";\r\nconst createEvent = (data) => {\r\n    return axios.post(`http://localhost:2004/api/event/create`, data);\r\n};\r\nconst createEventDescription = (data) => {\r\n    return axios.post(`http://localhost:2004/api/event-description/create`, data);\r\n};\r\nconst getAllEvents = () => {\r\n    return axios.get(`http://localhost:2004/api/events/get-all`);\r\n};\r\nconst getRecentEvents = () => {\r\n    return axios.get(`http://localhost:2004/api/events/get-recent`);\r\n};\r\n\r\n// nhớ sửa lại\r\nconst registerEvent = (data) => {\r\n    return axios.post(`http://localhost:2004/api/event/register`, data);\r\n};\r\n\r\nconst getEventById = (id) => {\r\n    return axios.get(`http://localhost:2004/api/event/${id}`);\r\n};\r\nconst getEventRegistrationsById = (id) => {\r\n    return axios.get(`http://localhost:2004/api/events/registrations/${id}`);\r\n};\r\nconst updateEventRegistration = (data) => {\r\n    return axios.post(`http://localhost:2004/api/events/registration-update`, data);\r\n};\r\nconst deleteEventRegistration = (data) => {\r\n    return axios.post(`http://localhost:2004/api/events/registration-delete`, data);\r\n};\r\n\r\nconst deleteEvent = (id) => {\r\n    return axios.delpostete(`http://localhost:2004/api/event/delete`);\r\n};\r\n\r\nconst updateEvent = (data) => {\r\n    return axios.post(`http://localhost:2004/api/event/update`, data);\r\n};\r\n\r\nconst sendEventNotification = (data) => {\r\n    return axios.post(`http://localhost:2004/api/notifications/send-event`, data);\r\n};\r\n\r\n// router.post(\"/api/events/registration/:id\", eventController.updateEventRegistration);\r\nexport {\r\n    createEvent,\r\n    createEventDescription,\r\n    getAllEvents,\r\n    getRecentEvents,\r\n    registerEvent,\r\n    getEventById,\r\n    getEventRegistrationsById,\r\n    updateEventRegistration,\r\n    deleteEventRegistration,\r\n    deleteEvent,\r\n    updateEvent,\r\n    sendEventNotification\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,WAAW,GAAIC,IAAI,IAAK;EAC1B,OAAOF,KAAK,CAACG,IAAI,CAAC,wCAAwC,EAAED,IAAI,CAAC;AACrE,CAAC;AACD,MAAME,sBAAsB,GAAIF,IAAI,IAAK;EACrC,OAAOF,KAAK,CAACG,IAAI,CAAC,oDAAoD,EAAED,IAAI,CAAC;AACjF,CAAC;AACD,MAAMG,YAAY,GAAGA,CAAA,KAAM;EACvB,OAAOL,KAAK,CAACM,GAAG,CAAC,0CAA0C,CAAC;AAChE,CAAC;AACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B,OAAOP,KAAK,CAACM,GAAG,CAAC,6CAA6C,CAAC;AACnE,CAAC;;AAED;AACA,MAAME,aAAa,GAAIN,IAAI,IAAK;EAC5B,OAAOF,KAAK,CAACG,IAAI,CAAC,0CAA0C,EAAED,IAAI,CAAC;AACvE,CAAC;AAED,MAAMO,YAAY,GAAIC,EAAE,IAAK;EACzB,OAAOV,KAAK,CAACM,GAAG,CAAC,mCAAmCI,EAAE,EAAE,CAAC;AAC7D,CAAC;AACD,MAAMC,yBAAyB,GAAID,EAAE,IAAK;EACtC,OAAOV,KAAK,CAACM,GAAG,CAAC,kDAAkDI,EAAE,EAAE,CAAC;AAC5E,CAAC;AACD,MAAME,uBAAuB,GAAIV,IAAI,IAAK;EACtC,OAAOF,KAAK,CAACG,IAAI,CAAC,sDAAsD,EAAED,IAAI,CAAC;AACnF,CAAC;AACD,MAAMW,uBAAuB,GAAIX,IAAI,IAAK;EACtC,OAAOF,KAAK,CAACG,IAAI,CAAC,sDAAsD,EAAED,IAAI,CAAC;AACnF,CAAC;AAED,MAAMY,WAAW,GAAIJ,EAAE,IAAK;EACxB,OAAOV,KAAK,CAACe,UAAU,CAAC,wCAAwC,CAAC;AACrE,CAAC;AAED,MAAMC,WAAW,GAAId,IAAI,IAAK;EAC1B,OAAOF,KAAK,CAACG,IAAI,CAAC,wCAAwC,EAAED,IAAI,CAAC;AACrE,CAAC;AAED,MAAMe,qBAAqB,GAAIf,IAAI,IAAK;EACpC,OAAOF,KAAK,CAACG,IAAI,CAAC,oDAAoD,EAAED,IAAI,CAAC;AACjF,CAAC;;AAED;AACA,SACID,WAAW,EACXG,sBAAsB,EACtBC,YAAY,EACZE,eAAe,EACfC,aAAa,EACbC,YAAY,EACZE,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,EACvBC,WAAW,EACXE,WAAW,EACXC,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}